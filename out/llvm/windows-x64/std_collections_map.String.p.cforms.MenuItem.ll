; ModuleID = 'std_collections_map$String$p$cforms.MenuItem$'
source_filename = "std_collections_map$String$p$cforms.MenuItem$"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%.introspect = type { i8, i64, ptr, i64, i64, i64, [0 x i64] }
%any = type { ptr, i64 }
%HashMap = type { %"Entry*[]", %any, i32, i32, float }
%"Entry*[]" = type { ptr, i64 }
%"char[]" = type { ptr, i64 }
%LinkedHashMap = type { %"LinkedEntry*[]", %any, i64, i64, float, ptr, ptr }
%"LinkedEntry*[]" = type { ptr, i64 }
%"any[]" = type { ptr, i64 }
%"char[][]" = type { ptr, i64 }
%"MenuItem*[]" = type { ptr, i64 }
%HashMapIterator = type { ptr, i32, i32, ptr }
%Entry = type { i32, %"char[]", ptr, ptr }
%LinkedHashMapIterator = type { ptr, ptr, i8 }
%LinkedEntry = type { i32, %"char[]", ptr, ptr, ptr, ptr }

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.init" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_keys_and_values" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit_from_keys_and_values" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_map" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit_from_map" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_empty" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.get_ref" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.get_entry" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.has_key" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.set" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.remove" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.clear" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.free" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.tkeys" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.keys" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.tvalues" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.values" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.iter" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.value_iter" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.key_iter" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.HashMap.has_value" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_keys_and_values" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit_from_keys_and_values" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_map" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit_from_map" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_empty" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_ref" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_entry" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.has_key" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.set" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.remove" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.clear" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tkeys" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.keys" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tvalues" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.values" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.iter" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.value_iter" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.key_iter" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.next" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator.get" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.has_next" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.len" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.has_value" = comdat any

$.dyn_search = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.Entry" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMap" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapIterator" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedEntry" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator" = comdat any

$"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.DEFAULT_INITIAL_CAPACITY" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.MAXIMUM_CAPACITY" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.DEFAULT_LOAD_FACTOR" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.VALUE_IS_EQUATABLE" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.COPY_KEYS" = comdat any

$"$ct.int" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.MAP_HEAP_ALLOCATOR" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.ONHEAP" = comdat any

$"$sel.acquire" = comdat any

$"$ct.ulong" = comdat any

$"$ct.fault" = comdat any

$std.core.builtin.NOT_FOUND = comdat any

$"$ct.String" = comdat any

$"$ct.sa$char" = comdat any

$"$ct.char" = comdat any

$"$ct.p$cforms.MenuItem" = comdat any

$"$ct.cforms.MenuItem" = comdat any

$"$ct.cforms.MenuBase" = comdat any

$"$sel.release" = comdat any

$"$ct.long" = comdat any

$"std_collections_map$String$p$cforms.MenuItem$.LINKEDONHEAP" = comdat any

$"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format" = comdat any

$"$sel.to_format" = comdat any

$"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format" = comdat any

@"$ct.std_collections_map$String$p$cforms.MenuItem$.Entry" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMap" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 48, i64 0, i64 5, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapIterator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator" = linkonce global %.introspect { i8 18, i64 0, ptr null, i64 24, i64 ptrtoint (ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapIterator" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator" = linkonce global %.introspect { i8 18, i64 0, ptr null, i64 24, i64 ptrtoint (ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMapIterator" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedEntry" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 56, i64 0, i64 6, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 72, i64 0, i64 7, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator" = linkonce global %.introspect { i8 18, i64 ptrtoint (ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator" to i64), ptr null, i64 24, i64 ptrtoint (ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator" = linkonce global %.introspect { i8 18, i64 ptrtoint (ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator" to i64), ptr null, i64 24, i64 ptrtoint (ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"std_collections_map$String$p$cforms.MenuItem$.DEFAULT_INITIAL_CAPACITY" = weak_odr local_unnamed_addr constant i32 16, comdat, align 4, !dbg !0
@"std_collections_map$String$p$cforms.MenuItem$.MAXIMUM_CAPACITY" = weak_odr local_unnamed_addr constant i32 -2147483648, comdat, align 4, !dbg !4
@"std_collections_map$String$p$cforms.MenuItem$.DEFAULT_LOAD_FACTOR" = weak_odr local_unnamed_addr constant float 7.500000e-01, comdat, align 4, !dbg !6
@"std_collections_map$String$p$cforms.MenuItem$.VALUE_IS_EQUATABLE" = weak_odr local_unnamed_addr constant i8 1, comdat, align 1, !dbg !9
@"std_collections_map$String$p$cforms.MenuItem$.COPY_KEYS" = weak_odr local_unnamed_addr constant i8 1, comdat, align 1, !dbg !12
@"$ct.int" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"std_collections_map$String$p$cforms.MenuItem$.MAP_HEAP_ALLOCATOR" = weak_odr local_unnamed_addr constant %any { ptr @"std_collections_map$String$p$cforms.MenuItem$.dummy.29147", i64 ptrtoint (ptr @"$ct.int" to i64) }, comdat, align 8, !dbg !14
@"std_collections_map$String$p$cforms.MenuItem$.ONHEAP" = weak_odr local_unnamed_addr constant %HashMap { %"Entry*[]" zeroinitializer, %any { ptr @"std_collections_map$String$p$cforms.MenuItem$.dummy.29147", i64 ptrtoint (ptr @"$ct.int" to i64) }, i32 0, i32 0, float 0.000000e+00 }, comdat, align 8, !dbg !22
@"std_collections_map$String$p$cforms.MenuItem$.dummy.29147" = internal global i32 0, align 4, !dbg !700
@.panic_msg = internal constant [63 x i8] c"Reference parameter 'self' was passed a null pointer argument.\00", align 1
@.file = internal constant [11 x i8] c"hashmap.c3\00", align 1
@.func = internal constant [5 x i8] c"init\00", align 1
@std.core.builtin.panic = external global ptr, align 8
@.panic_msg.8 = internal constant [70 x i8] c"@require \22capacity > 0\22 violated: 'The capacity must be 1 or higher'.\00", align 1
@.panic_msg.9 = internal constant [80 x i8] c"@require \22load_factor > 0.0\22 violated: 'The load factor must be higher than 0'.\00", align 1
@.panic_msg.10 = internal constant [75 x i8] c"@require \22!self.is_initialized()\22 violated: 'Map was already initialized'.\00", align 1
@.panic_msg.11 = internal constant [83 x i8] c"@require \22capacity < MAXIMUM_CAPACITY\22 violated: 'Capacity cannot exceed maximum'.\00", align 1
@"$sel.acquire" = linkonce_odr constant [8 x i8] c"acquire\00", comdat, align 1
@.panic_msg.12 = internal constant [66 x i8] c"@require \22!alignment || math::is_power_of_2(alignment)\22 violated.\00", align 1
@.file.13 = internal constant [17 x i8] c"mem_allocator.c3\00", align 1
@.panic_msg.14 = internal constant [81 x i8] c"@require \22alignment <= mem::MAX_MEMORY_ALIGNMENT\22 violated: 'alignment too big'.\00", align 1
@.panic_msg.15 = internal constant [60 x i8] c"@require \22size > 0\22 violated: 'The size must be 1 or more'.\00", align 1
@.panic_msg.16 = internal constant [45 x i8] c"No method 'acquire' could be found on target\00", align 1
@"$ct.ulong" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.17 = internal constant [44 x i8] c"Negative value (%d) given for slice length.\00", align 1
@"$ct.fault" = linkonce global %.introspect { i8 6, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.18 = internal constant [37 x i8] c"Unexpected fault '%s' was unwrapped!\00", align 1
@.func.19 = internal constant [6 x i8] c"tinit\00", align 1
@std.core.mem.allocator.current_temp = external thread_local global %any, align 8
@.func.20 = internal constant [26 x i8] c"init_from_keys_and_values\00", align 1
@.panic_msg.21 = internal constant [99 x i8] c"@require \22keys.len == values.len\22 violated: 'Both keys and values arrays must be the same length'.\00", align 1
@.panic_msg.22 = internal constant [40 x i8] c"Assert \22keys.len == values.len\22 failed.\00", align 1
@.panic_msg.23 = internal constant [60 x i8] c"Array index out of bounds (array had size %d, index was %d)\00", align 1
@.panic_msg.24 = internal constant [95 x i8] c"Unaligned access: ptr %% %s = %s, use @unaligned_load / @unaligned_store for unaligned access.\00", align 1
@.func.25 = internal constant [27 x i8] c"tinit_from_keys_and_values\00", align 1
@.panic_msg.26 = internal constant [62 x i8] c"Reference parameter 'map' was passed a null pointer argument.\00", align 1
@.func.27 = internal constant [15 x i8] c"is_initialized\00", align 1
@.func.28 = internal constant [14 x i8] c"init_from_map\00", align 1
@.panic_msg.29 = internal constant [68 x i8] c"Reference parameter 'other_map' was passed a null pointer argument.\00", align 1
@.func.30 = internal constant [15 x i8] c"tinit_from_map\00", align 1
@.panic_msg.31 = internal constant [74 x i8] c"@require \22!map.is_initialized()\22 violated: 'Map was already initialized'.\00", align 1
@.func.32 = internal constant [9 x i8] c"is_empty\00", align 1
@.func.33 = internal constant [4 x i8] c"len\00", align 1
@.func.34 = internal constant [8 x i8] c"get_ref\00", align 1
@std.core.builtin.NOT_FOUND = linkonce constant %"char[]" { ptr @std.core.builtin.NOT_FOUND.nameof, i64 18 }, comdat, align 8
@std.core.builtin.NOT_FOUND.nameof = internal constant [19 x i8] c"builtin::NOT_FOUND\00", align 1
@.func.35 = internal constant [10 x i8] c"get_entry\00", align 1
@.func.36 = internal constant [4 x i8] c"get\00", align 1
@.panic_msg.37 = internal constant [58 x i8] c"Dereference of null pointer, 'map.get_ref(key)' was null.\00", align 1
@.func.38 = internal constant [8 x i8] c"has_key\00", align 1
@.func.39 = internal constant [4 x i8] c"set\00", align 1
@std.core.mem.allocator.thread_allocator = external thread_local global %any, align 8
@.func.40 = internal constant [7 x i8] c"remove\00", align 1
@.func.41 = internal constant [6 x i8] c"clear\00", align 1
@.panic_msg.42 = internal constant [51 x i8] c"Dereference of null pointer, 'map.table' was null.\00", align 1
@.panic_msg.43 = internal constant [51 x i8] c"Dereference of null pointer, 'entry_ref' was null.\00", align 1
@.func.44 = internal constant [5 x i8] c"free\00", align 1
@.func.45 = internal constant [6 x i8] c"tkeys\00", align 1
@.func.46 = internal constant [5 x i8] c"keys\00", align 1
@.panic_msg.47 = internal constant [52 x i8] c"Dereference of null pointer, 'self.table' was null.\00", align 1
@.func.48 = internal constant [8 x i8] c"tvalues\00", align 1
@.func.49 = internal constant [7 x i8] c"values\00", align 1
@.func.50 = internal constant [5 x i8] c"iter\00", align 1
@.func.51 = internal constant [11 x i8] c"value_iter\00", align 1
@.func.52 = internal constant [9 x i8] c"key_iter\00", align 1
@.func.53 = internal constant [10 x i8] c"add_entry\00", align 1
@.panic_msg.54 = internal constant [45 x i8] c"Dereference of null pointer, 'val' was null.\00", align 1
@.func.55 = internal constant [7 x i8] c"resize\00", align 1
@.func.56 = internal constant [10 x i8] c"to_format\00", align 1
@.str = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.panic_msg.57 = internal constant [46 x i8] c"Dereference of null pointer, 'self' was null.\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@"$ct.String" = linkonce global %.introspect { i8 18, i64 ptrtoint (ptr @"$ct.sa$char" to i64), ptr null, i64 16, i64 ptrtoint (ptr @"$ct.sa$char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.sa$char" = linkonce global %.introspect { i8 16, i64 0, ptr null, i64 16, i64 ptrtoint (ptr @"$ct.char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.char" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.p$cforms.MenuItem" = linkonce global %.introspect { i8 19, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.cforms.MenuItem" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.cforms.MenuItem" = linkonce global %.introspect { i8 10, i64 ptrtoint (ptr @"$ct.cforms.MenuBase" to i64), ptr null, i64 240, i64 0, i64 24, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.cforms.MenuBase" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 96, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@.str.61 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@.func.62 = internal constant [9 x i8] c"transfer\00", align 1
@.func.63 = internal constant [19 x i8] c"put_all_for_create\00", align 1
@.panic_msg.64 = internal constant [57 x i8] c"Dereference of null pointer, 'other_map.table' was null.\00", align 1
@.func.65 = internal constant [15 x i8] c"put_for_create\00", align 1
@.func.66 = internal constant [14 x i8] c"free_internal\00", align 1
@"$sel.release" = linkonce_odr constant [8 x i8] c"release\00", comdat, align 1
@.panic_msg.67 = internal constant [76 x i8] c"@require \22ptr != null\22 violated: 'Empty pointers should never be released'.\00", align 1
@.panic_msg.68 = internal constant [45 x i8] c"No method 'release' could be found on target\00", align 1
@.func.69 = internal constant [21 x i8] c"remove_entry_for_key\00", align 1
@.func.70 = internal constant [13 x i8] c"create_entry\00", align 1
@"$ct.long" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.71 = internal constant [39 x i8] c"Negative array indexing (index was %d)\00", align 1
@.func.72 = internal constant [11 x i8] c"free_entry\00", align 1
@.panic_msg.73 = internal constant [42 x i8] c"@require \22idx < self.map.count\22 violated.\00", align 1
@.panic_msg.74 = internal constant [60 x i8] c"Dereference of null pointer, 'self.current_entry' was null.\00", align 1
@.func.75 = internal constant [10 x i8] c"has_value\00", align 1
@"std_collections_map$String$p$cforms.MenuItem$.LINKEDONHEAP" = weak_odr local_unnamed_addr constant %LinkedHashMap { %"LinkedEntry*[]" zeroinitializer, %any { ptr @"std_collections_map$String$p$cforms.MenuItem$.dummy.29147", i64 ptrtoint (ptr @"$ct.int" to i64) }, i64 0, i64 0, float 0.000000e+00, ptr null, ptr null }, comdat, align 8, !dbg !702
@"std_collections_map$String$p$cforms.MenuItem$.dummy.29380" = internal global i32 0, align 4, !dbg !728
@.file.77 = internal constant [18 x i8] c"linked_hashmap.c3\00", align 1
@.panic_msg.78 = internal constant [48 x i8] c"Dereference of null pointer, 'bucket' was null.\00", align 1
@.func.79 = internal constant [5 x i8] c"next\00", align 1
@.func.80 = internal constant [9 x i8] c"has_next\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.84 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@.panic_msg.85 = internal constant [51 x i8] c"Dereference of null pointer, 'other_map' was null.\00", align 1
@"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format" = weak_odr global { ptr, ptr, ptr } { ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format", ptr @"$sel.to_format", ptr inttoptr (i64 -1 to ptr) }, comdat, align 8
@"$sel.to_format" = linkonce_odr constant [10 x i8] c"to_format\00", comdat, align 1
@"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format" = weak_odr global { ptr, ptr, ptr } { ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format", ptr @"$sel.to_format", ptr inttoptr (i64 -1 to ptr) }, comdat, align 8
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @.c3_dynamic_register, ptr null }]

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init"(ptr %0, ptr align 8 %1, i32 %2, float %3) #0 comdat !dbg !739 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i32, align 4
  %load_factor = alloca float, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator25 = alloca %any, align 8
  %elements26 = alloca i64, align 8
  %allocator27 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x28 = alloca i64, align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr55 = alloca i64, align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg59 = alloca %"any[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %varargslots65 = alloca [1 x %any], align 16
  %indirectarg67 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !744
  %4 = icmp eq ptr %0, null, !dbg !744
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !744
  br i1 %5, label %panic, label %checkok, !dbg !744

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !745, !DIExpression(), !746)
    #dbg_declare(ptr %1, !747, !DIExpression(), !746)
  store i32 %2, ptr %capacity, align 4
    #dbg_declare(ptr %capacity, !748, !DIExpression(), !746)
  store float %3, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !749, !DIExpression(), !746)
  %6 = load i32, ptr %capacity, align 4, !dbg !750
  %lt = icmp ult i32 0, %6, !dbg !750
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !750

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 41) #5, !dbg !750
  unreachable, !dbg !750

assert_ok:                                        ; preds = %checkok
  %8 = load float, ptr %load_factor, align 4, !dbg !752
  %fpfpext = fpext float %8 to double, !dbg !752
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !752
  br i1 %gt, label %assert_ok10, label %assert_fail6, !dbg !752

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 42) #5, !dbg !752
  unreachable, !dbg !752

assert_ok10:                                      ; preds = %assert_ok
  %10 = load ptr, ptr %self, align 8, !dbg !753
  %11 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %10), !dbg !753
  %12 = trunc i8 %11 to i1, !dbg !753
  %not = xor i1 %12, true, !dbg !753
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !753

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg14, align 8
  %13 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %13(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 43) #5, !dbg !753
  unreachable, !dbg !753

assert_ok15:                                      ; preds = %assert_ok10
  %14 = load i32, ptr %capacity, align 4, !dbg !754
  %lt16 = icmp ult i32 %14, -2147483648, !dbg !754
  br i1 %lt16, label %assert_ok21, label %assert_fail17, !dbg !754

assert_fail17:                                    ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg20, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 44) #5, !dbg !754
  unreachable, !dbg !754

assert_ok21:                                      ; preds = %assert_ok15
  %16 = load i32, ptr %capacity, align 4
  store i32 %16, ptr %x, align 4
    #dbg_declare(ptr %y, !755, !DIExpression(), !758)
  store i32 1, ptr %y, align 4, !dbg !758
  br label %loop.cond, !dbg !760

loop.cond:                                        ; preds = %loop.body, %assert_ok21
  %17 = load i32, ptr %y, align 4, !dbg !761
  %18 = load i32, ptr %x, align 4, !dbg !761
  %lt22 = icmp ult i32 %17, %18, !dbg !761
  br i1 %lt22, label %loop.body, label %loop.exit, !dbg !761

loop.body:                                        ; preds = %loop.cond
  %19 = load i32, ptr %y, align 4, !dbg !761
  %20 = load i32, ptr %y, align 4, !dbg !761
  %add = add i32 %19, %20, !dbg !761
  store i32 %add, ptr %y, align 4, !dbg !761
  br label %loop.cond, !dbg !761

loop.exit:                                        ; preds = %loop.cond
  %21 = load i32, ptr %y, align 4, !dbg !763
  store i32 %21, ptr %capacity, align 4, !dbg !763
  %22 = load ptr, ptr %self, align 8, !dbg !764
  %ptradd = getelementptr inbounds i8, ptr %22, i64 16, !dbg !764
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd, ptr align 8 %1, i32 16, i1 false), !dbg !764
  %23 = load ptr, ptr %self, align 8, !dbg !765
  %ptradd23 = getelementptr inbounds i8, ptr %23, i64 40, !dbg !765
  %24 = load float, ptr %load_factor, align 4, !dbg !765
  store float %24, ptr %ptradd23, align 8, !dbg !765
  %25 = load i32, ptr %capacity, align 4, !dbg !766
  %uifp = uitofp i32 %25 to float, !dbg !766
  %26 = load float, ptr %load_factor, align 4, !dbg !766
  %fmul = fmul float %uifp, %26, !dbg !766
  %fpui = fptoui float %fmul to i32, !dbg !766
  %27 = load ptr, ptr %self, align 8, !dbg !766
  %ptradd24 = getelementptr inbounds i8, ptr %27, i64 36, !dbg !766
  store i32 %fpui, ptr %ptradd24, align 4, !dbg !766
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %1, i32 16, i1 false)
  %28 = load i32, ptr %capacity, align 4, !dbg !767
  %zext = zext i32 %28 to i64, !dbg !767
  store i64 %zext, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator25, ptr align 8 %allocator, i32 16, i1 false)
  %29 = load i64, ptr %elements, align 8
  store i64 %29, ptr %elements26, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator27, ptr align 8 %allocator25, i32 16, i1 false)
  %30 = load i64, ptr %elements26, align 8, !dbg !768
  %mul = mul i64 8, %30, !dbg !768
  store i64 %mul, ptr %size, align 8
  %31 = load i64, ptr %size, align 8, !dbg !773
  %i2nb = icmp eq i64 %31, 0, !dbg !773
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !773

if.then:                                          ; preds = %loop.exit
  store ptr null, ptr %blockret, align 8, !dbg !773
  br label %expr_block.exit, !dbg !773

if.exit:                                          ; preds = %loop.exit
  %32 = load i64, ptr %size, align 8, !dbg !775
  br i1 true, label %or.phi, label %or.rhs, !dbg !776

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x28, align 8
  %33 = load i64, ptr %x28, align 8, !dbg !777
  %neq = icmp ne i64 0, %33, !dbg !777
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !777

and.rhs:                                          ; preds = %or.rhs
  %34 = load i64, ptr %x28, align 8, !dbg !777
  %35 = load i64, ptr %x28, align 8, !dbg !777
  %sub = sub i64 %35, 1, !dbg !777
  %and = and i64 %34, %sub, !dbg !777
  %eq = icmp eq i64 %and, 0, !dbg !777
  br label %and.phi, !dbg !777

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !777
  br label %or.phi, !dbg !777

or.phi:                                           ; preds = %and.phi, %if.exit
  %val29 = phi i1 [ true, %if.exit ], [ %val, %and.phi ], !dbg !777
  br i1 %val29, label %assert_ok34, label %assert_fail30, !dbg !777

assert_fail30:                                    ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg33, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 98) #5, !dbg !775
  unreachable, !dbg !775

assert_ok34:                                      ; preds = %or.phi
  br i1 true, label %assert_ok39, label %assert_fail35, !dbg !775

assert_fail35:                                    ; preds = %assert_ok34
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg38, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 98) #5, !dbg !775
  unreachable, !dbg !775

assert_ok39:                                      ; preds = %assert_ok34
  %lt40 = icmp ult i64 0, %32, !dbg !775
  br i1 %lt40, label %assert_ok45, label %assert_fail41, !dbg !775

assert_fail41:                                    ; preds = %assert_ok39
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg44, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 98) #5, !dbg !775
  unreachable, !dbg !775

assert_ok45:                                      ; preds = %assert_ok39
  %ptradd46 = getelementptr inbounds i8, ptr %allocator27, i64 8, !dbg !775
  %39 = load i64, ptr %ptradd46, align 8, !dbg !775
  %40 = inttoptr i64 %39 to ptr, !dbg !775
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !744
  %41 = icmp eq ptr %40, %type, !dbg !744
  br i1 %41, label %cache_hit, label %cache_miss, !dbg !744

cache_miss:                                       ; preds = %assert_ok45
  %ptradd47 = getelementptr inbounds i8, ptr %40, i64 16, !dbg !744
  %42 = load ptr, ptr %ptradd47, align 8, !dbg !744
  %43 = call ptr @.dyn_search(ptr %42, ptr @"$sel.acquire"), !dbg !744
  store ptr %43, ptr %.inlinecache, align 8, !dbg !744
  store ptr %40, ptr %.cachedtype, align 8, !dbg !744
  br label %44, !dbg !744

cache_hit:                                        ; preds = %assert_ok45
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !744
  br label %44, !dbg !744

44:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %43, %cache_miss ], !dbg !744
  %45 = icmp eq ptr %fn_phi, null, !dbg !744
  br i1 %45, label %missing_function, label %match, !dbg !744

missing_function:                                 ; preds = %44
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg50, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 98) #5, !dbg !775
  unreachable, !dbg !775

match:                                            ; preds = %44
  %47 = load ptr, ptr %allocator27, align 8
  %48 = call i64 %fn_phi(ptr %retparam, ptr %47, i64 %32, i32 1, i64 0), !dbg !775
  %not_err = icmp eq i64 %48, 0, !dbg !775
  %49 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !775
  br i1 %49, label %after_check, label %assign_optional, !dbg !775

assign_optional:                                  ; preds = %match
  store i64 %48, ptr %error_var, align 8, !dbg !775
  br label %panic_block, !dbg !775

after_check:                                      ; preds = %match
  %50 = load ptr, ptr %retparam, align 8, !dbg !775
  store ptr %50, ptr %blockret, align 8, !dbg !775
  br label %expr_block.exit, !dbg !775

expr_block.exit:                                  ; preds = %after_check, %if.then
  %51 = load ptr, ptr %blockret, align 8, !dbg !775
  store ptr %51, ptr %taddr, align 8
  %52 = load ptr, ptr %taddr, align 8
  %53 = load i64, ptr %elements26, align 8, !dbg !768
  %add51 = add i64 0, %53, !dbg !768
  %gt52 = icmp ugt i64 0, %add51, !dbg !768
  %sub53 = sub i64 %add51, 0, !dbg !768
  %54 = call i1 @llvm.expect.i1(i1 %gt52, i1 false), !dbg !768
  br i1 %54, label %panic54, label %checkok60, !dbg !768

checkok60:                                        ; preds = %expr_block.exit
  %size61 = sub i64 %add51, 0, !dbg !768
  %55 = insertvalue %"Entry*[]" undef, ptr %52, 0, !dbg !768
  %56 = insertvalue %"Entry*[]" %55, i64 %size61, 1, !dbg !768
  br label %noerr_block, !dbg !768

panic_block:                                      ; preds = %assign_optional
  %57 = insertvalue %any undef, ptr %error_var, 0, !dbg !768
  %58 = insertvalue %any %57, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !768
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg64, align 8
  store %any %58, ptr %varargslots65, align 16
  %59 = insertvalue %"any[]" undef, ptr %varargslots65, 0
  %"$$temp66" = insertvalue %"any[]" %59, i64 1, 1
  store %"any[]" %"$$temp66", ptr %indirectarg67, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 262, ptr align 8 %indirectarg67) #5, !dbg !771
  unreachable, !dbg !771

noerr_block:                                      ; preds = %checkok60
  %60 = load ptr, ptr %self, align 8, !dbg !767
  store %"Entry*[]" %56, ptr %60, align 8, !dbg !767
  %61 = load ptr, ptr %self, align 8, !dbg !779
  ret ptr %61, !dbg !779

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %62 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %62(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 46) #5, !dbg !746
  unreachable, !dbg !746

panic54:                                          ; preds = %expr_block.exit
  store i64 %sub53, ptr %taddr55, align 8
  %63 = insertvalue %any undef, ptr %taddr55, 0
  %64 = insertvalue %any %63, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg58, align 8
  store %any %64, ptr %varargslots, align 16
  %65 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %65, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg59, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 270, ptr align 8 %indirectarg59) #5, !dbg !768
  unreachable, !dbg !768
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit"(ptr %0, i32 %1, float %2) #0 comdat !dbg !780 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i32, align 4
  %load_factor = alloca float, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg47 = alloca %any, align 8
  %3 = icmp eq ptr %0, null, !dbg !783
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !783
  br i1 %4, label %panic, label %checkok, !dbg !783

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !784, !DIExpression(), !785)
  store i32 %1, ptr %capacity, align 4
    #dbg_declare(ptr %capacity, !786, !DIExpression(), !785)
  store float %2, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !787, !DIExpression(), !785)
  %5 = load i32, ptr %capacity, align 4, !dbg !788
  %lt = icmp ult i32 0, %5, !dbg !788
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !788

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 57) #5, !dbg !788
  unreachable, !dbg !788

assert_ok:                                        ; preds = %checkok
  %7 = load float, ptr %load_factor, align 4, !dbg !790
  %fpfpext = fpext float %7 to double, !dbg !790
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !790
  br i1 %gt, label %assert_ok10, label %assert_fail6, !dbg !790

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg9, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 58) #5, !dbg !790
  unreachable, !dbg !790

assert_ok10:                                      ; preds = %assert_ok
  %9 = load ptr, ptr %self, align 8, !dbg !791
  %10 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %9), !dbg !791
  %11 = trunc i8 %10 to i1, !dbg !791
  %not = xor i1 %11, true, !dbg !791
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !791

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg14, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 59) #5, !dbg !791
  unreachable, !dbg !791

assert_ok15:                                      ; preds = %assert_ok10
  %13 = load i32, ptr %capacity, align 4, !dbg !792
  %lt16 = icmp ult i32 %13, -2147483648, !dbg !792
  br i1 %lt16, label %assert_ok21, label %assert_fail17, !dbg !792

assert_fail17:                                    ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg20, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 60) #5, !dbg !792
  unreachable, !dbg !792

assert_ok21:                                      ; preds = %assert_ok15
  %15 = load ptr, ptr %self, align 8, !dbg !793
  %16 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !793
  %17 = load %any, ptr %16, align 8, !dbg !793
  %18 = load i32, ptr %capacity, align 4, !dbg !793
  %19 = load float, ptr %load_factor, align 4, !dbg !793
  %lt22 = icmp ult i32 0, %18, !dbg !793
  br i1 %lt22, label %assert_ok27, label %assert_fail23, !dbg !793

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 64) #5, !dbg !793
  unreachable, !dbg !793

assert_ok27:                                      ; preds = %assert_ok21
  %fpfpext28 = fpext float %19 to double, !dbg !794
  %gt29 = fcmp ogt double %fpfpext28, 0.000000e+00, !dbg !793
  br i1 %gt29, label %assert_ok34, label %assert_fail30, !dbg !793

assert_fail30:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg33, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 64) #5, !dbg !793
  unreachable, !dbg !793

assert_ok34:                                      ; preds = %assert_ok27
  %22 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %15), !dbg !795
  %23 = trunc i8 %22 to i1, !dbg !795
  %not35 = xor i1 %23, true, !dbg !795
  br i1 %not35, label %assert_ok40, label %assert_fail36, !dbg !795

assert_fail36:                                    ; preds = %assert_ok34
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg39, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 64) #5, !dbg !793
  unreachable, !dbg !793

assert_ok40:                                      ; preds = %assert_ok34
  %lt41 = icmp ult i32 %18, -2147483648, !dbg !793
  br i1 %lt41, label %assert_ok46, label %assert_fail42, !dbg !793

assert_fail42:                                    ; preds = %assert_ok40
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg45, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 64) #5, !dbg !793
  unreachable, !dbg !793

assert_ok46:                                      ; preds = %assert_ok40
  store %any %17, ptr %indirectarg47, align 8
  %26 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init"(ptr %15, ptr align 8 %indirectarg47, i32 %18, float %19) #6, !dbg !793
  ret ptr %26, !dbg !793

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 62) #5, !dbg !785
  unreachable, !dbg !785
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_keys_and_values"(ptr %0, ptr align 8 %1, ptr align 8 %2, ptr align 8 %3, i32 %4, float %5) #0 comdat !dbg !796 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i32, align 4
  %load_factor = alloca float, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg61 = alloca %any, align 8
  %i = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr66 = alloca i64, align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg71 = alloca %"any[]", align 8
  %taddr74 = alloca i64, align 8
  %taddr75 = alloca i64, align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %varargslots79 = alloca [2 x %any], align 16
  %indirectarg82 = alloca %"any[]", align 8
  %taddr87 = alloca i64, align 8
  %taddr88 = alloca i64, align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %varargslots92 = alloca [2 x %any], align 16
  %indirectarg95 = alloca %"any[]", align 8
  %taddr99 = alloca i64, align 8
  %taddr100 = alloca i64, align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %varargslots104 = alloca [2 x %any], align 16
  %indirectarg107 = alloca %"any[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %6 = icmp eq ptr %0, null, !dbg !809
  %7 = call i1 @llvm.expect.i1(i1 %6, i1 false), !dbg !809
  br i1 %7, label %panic, label %checkok, !dbg !809

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !810, !DIExpression(), !811)
    #dbg_declare(ptr %1, !812, !DIExpression(), !811)
    #dbg_declare(ptr %2, !813, !DIExpression(), !811)
    #dbg_declare(ptr %3, !819, !DIExpression(), !811)
  store i32 %4, ptr %capacity, align 4
    #dbg_declare(ptr %capacity, !825, !DIExpression(), !811)
  store float %5, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !826, !DIExpression(), !811)
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !827
  %8 = load i64, ptr %ptradd, align 8, !dbg !827
  %ptradd3 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !827
  %9 = load i64, ptr %ptradd3, align 8, !dbg !827
  %eq = icmp eq i64 %8, %9, !dbg !827
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !827

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.21, i64 98 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 100) #5, !dbg !827
  unreachable, !dbg !827

assert_ok:                                        ; preds = %checkok
  %11 = load i32, ptr %capacity, align 4, !dbg !829
  %lt = icmp ult i32 0, %11, !dbg !829
  br i1 %lt, label %assert_ok11, label %assert_fail7, !dbg !829

assert_fail7:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg10, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 101) #5, !dbg !829
  unreachable, !dbg !829

assert_ok11:                                      ; preds = %assert_ok
  %13 = load float, ptr %load_factor, align 4, !dbg !830
  %fpfpext = fpext float %13 to double, !dbg !830
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !830
  br i1 %gt, label %assert_ok16, label %assert_fail12, !dbg !830

assert_fail12:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg15, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 102) #5, !dbg !830
  unreachable, !dbg !830

assert_ok16:                                      ; preds = %assert_ok11
  %15 = load ptr, ptr %self, align 8, !dbg !831
  %16 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %15), !dbg !831
  %17 = trunc i8 %16 to i1, !dbg !831
  %not = xor i1 %17, true, !dbg !831
  br i1 %not, label %assert_ok21, label %assert_fail17, !dbg !831

assert_fail17:                                    ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg20, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 103) #5, !dbg !831
  unreachable, !dbg !831

assert_ok21:                                      ; preds = %assert_ok16
  %19 = load i32, ptr %capacity, align 4, !dbg !832
  %lt22 = icmp ult i32 %19, -2147483648, !dbg !832
  br i1 %lt22, label %assert_ok27, label %assert_fail23, !dbg !832

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 104) #5, !dbg !832
  unreachable, !dbg !832

assert_ok27:                                      ; preds = %assert_ok21
  %ptradd28 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !833
  %21 = load i64, ptr %ptradd28, align 8, !dbg !833
  %ptradd29 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !833
  %22 = load i64, ptr %ptradd29, align 8, !dbg !833
  %eq30 = icmp eq i64 %21, %22, !dbg !833
  br i1 %eq30, label %assert_ok35, label %assert_fail31, !dbg !833

assert_fail31:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.22, i64 39 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg34, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 108) #5, !dbg !833
  unreachable, !dbg !833

assert_ok35:                                      ; preds = %assert_ok27
  %24 = load ptr, ptr %self, align 8, !dbg !834
  %25 = load %any, ptr %1, align 8, !dbg !834
  %26 = load i32, ptr %capacity, align 4, !dbg !834
  %27 = load float, ptr %load_factor, align 4, !dbg !834
  %lt36 = icmp ult i32 0, %26, !dbg !834
  br i1 %lt36, label %assert_ok41, label %assert_fail37, !dbg !834

assert_fail37:                                    ; preds = %assert_ok35
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg40, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 109) #5, !dbg !834
  unreachable, !dbg !834

assert_ok41:                                      ; preds = %assert_ok35
  %fpfpext42 = fpext float %27 to double, !dbg !835
  %gt43 = fcmp ogt double %fpfpext42, 0.000000e+00, !dbg !834
  br i1 %gt43, label %assert_ok48, label %assert_fail44, !dbg !834

assert_fail44:                                    ; preds = %assert_ok41
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg47, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 109) #5, !dbg !834
  unreachable, !dbg !834

assert_ok48:                                      ; preds = %assert_ok41
  %30 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %24), !dbg !836
  %31 = trunc i8 %30 to i1, !dbg !836
  %not49 = xor i1 %31, true, !dbg !836
  br i1 %not49, label %assert_ok54, label %assert_fail50, !dbg !836

assert_fail50:                                    ; preds = %assert_ok48
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg53, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, i32 109) #5, !dbg !834
  unreachable, !dbg !834

assert_ok54:                                      ; preds = %assert_ok48
  %lt55 = icmp ult i32 %26, -2147483648, !dbg !834
  br i1 %lt55, label %assert_ok60, label %assert_fail56, !dbg !834

assert_fail56:                                    ; preds = %assert_ok54
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg59, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 109) #5, !dbg !834
  unreachable, !dbg !834

assert_ok60:                                      ; preds = %assert_ok54
  store %any %25, ptr %indirectarg61, align 8
  %34 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init"(ptr %24, ptr align 8 %indirectarg61, i32 %26, float %27), !dbg !834
    #dbg_declare(ptr %i, !837, !DIExpression(), !839)
  store i64 0, ptr %i, align 8, !dbg !839
  br label %loop.cond, !dbg !839

loop.cond:                                        ; preds = %checkok108, %assert_ok60
  %35 = load i64, ptr %i, align 8, !dbg !839
  %ptradd62 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !839
  %36 = load i64, ptr %ptradd62, align 8, !dbg !839
  %lt63 = icmp ult i64 %35, %36, !dbg !839
  br i1 %lt63, label %loop.body, label %loop.exit, !dbg !839

loop.body:                                        ; preds = %loop.cond
  %ptradd64 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !840
  %37 = load i64, ptr %ptradd64, align 8, !dbg !840
  %38 = load ptr, ptr %2, align 8, !dbg !840
  %39 = load i64, ptr %i, align 8, !dbg !840
  %ge = icmp uge i64 %39, %37, !dbg !840
  %40 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !840
  br i1 %40, label %panic65, label %checkok72, !dbg !840

checkok72:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [16 x i8], ptr %38, i64 %39, !dbg !840
  %41 = ptrtoint ptr %ptroffset to i64, !dbg !840
  %42 = urem i64 %41, 8, !dbg !840
  %43 = icmp ne i64 %42, 0, !dbg !840
  %44 = call i1 @llvm.expect.i1(i1 %43, i1 false), !dbg !840
  br i1 %44, label %panic73, label %checkok83, !dbg !840

checkok83:                                        ; preds = %checkok72
  %ptradd84 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !840
  %45 = load i64, ptr %ptradd84, align 8, !dbg !840
  %46 = load ptr, ptr %3, align 8, !dbg !840
  %47 = load i64, ptr %i, align 8, !dbg !840
  %ge85 = icmp uge i64 %47, %45, !dbg !840
  %48 = call i1 @llvm.expect.i1(i1 %ge85, i1 false), !dbg !840
  br i1 %48, label %panic86, label %checkok96, !dbg !840

checkok96:                                        ; preds = %checkok83
  %ptroffset97 = getelementptr inbounds [8 x i8], ptr %46, i64 %47, !dbg !840
  %49 = ptrtoint ptr %ptroffset97 to i64, !dbg !840
  %50 = urem i64 %49, 8, !dbg !840
  %51 = icmp ne i64 %50, 0, !dbg !840
  %52 = call i1 @llvm.expect.i1(i1 %51, i1 false), !dbg !840
  br i1 %52, label %panic98, label %checkok108, !dbg !840

checkok108:                                       ; preds = %checkok96
  %53 = load ptr, ptr %self, align 8, !dbg !840
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg109, ptr align 8 %ptroffset, i32 16, i1 false)
  %54 = load ptr, ptr %ptroffset97, align 8
  %55 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.set"(ptr %53, ptr align 8 %indirectarg109, ptr %54), !dbg !840
  %56 = load i64, ptr %i, align 8, !dbg !839
  %add = add i64 %56, 1, !dbg !839
  store i64 %add, ptr %i, align 8, !dbg !839
  br label %loop.cond, !dbg !839

loop.exit:                                        ; preds = %loop.cond
  %57 = load ptr, ptr %self, align 8, !dbg !842
  ret ptr %57, !dbg !842

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg2, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 106) #5, !dbg !811
  unreachable, !dbg !811

panic65:                                          ; preds = %loop.body
  store i64 %37, ptr %taddr, align 8
  %59 = insertvalue %any undef, ptr %taddr, 0
  %60 = insertvalue %any %59, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %39, ptr %taddr66, align 8
  %61 = insertvalue %any undef, ptr %taddr66, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg69, align 8
  store %any %60, ptr %varargslots, align 16
  %ptradd70 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %62, ptr %ptradd70, align 16
  %63 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %63, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg71, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, i32 112, ptr align 8 %indirectarg71) #5, !dbg !840
  unreachable, !dbg !840

panic73:                                          ; preds = %checkok72
  store i64 8, ptr %taddr74, align 8
  %64 = insertvalue %any undef, ptr %taddr74, 0
  %65 = insertvalue %any %64, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr75, align 8
  %66 = insertvalue %any undef, ptr %taddr75, 0
  %67 = insertvalue %any %66, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg78, align 8
  store %any %65, ptr %varargslots79, align 16
  %ptradd80 = getelementptr inbounds i8, ptr %varargslots79, i64 16
  store %any %67, ptr %ptradd80, align 16
  %68 = insertvalue %"any[]" undef, ptr %varargslots79, 0
  %"$$temp81" = insertvalue %"any[]" %68, i64 2, 1
  store %"any[]" %"$$temp81", ptr %indirectarg82, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, i32 112, ptr align 8 %indirectarg82) #5, !dbg !840
  unreachable, !dbg !840

panic86:                                          ; preds = %checkok83
  store i64 %45, ptr %taddr87, align 8
  %69 = insertvalue %any undef, ptr %taddr87, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %47, ptr %taddr88, align 8
  %71 = insertvalue %any undef, ptr %taddr88, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg91, align 8
  store %any %70, ptr %varargslots92, align 16
  %ptradd93 = getelementptr inbounds i8, ptr %varargslots92, i64 16
  store %any %72, ptr %ptradd93, align 16
  %73 = insertvalue %"any[]" undef, ptr %varargslots92, 0
  %"$$temp94" = insertvalue %"any[]" %73, i64 2, 1
  store %"any[]" %"$$temp94", ptr %indirectarg95, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 112, ptr align 8 %indirectarg95) #5, !dbg !840
  unreachable, !dbg !840

panic98:                                          ; preds = %checkok96
  store i64 8, ptr %taddr99, align 8
  %74 = insertvalue %any undef, ptr %taddr99, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %50, ptr %taddr100, align 8
  %76 = insertvalue %any undef, ptr %taddr100, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg101, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg103, align 8
  store %any %75, ptr %varargslots104, align 16
  %ptradd105 = getelementptr inbounds i8, ptr %varargslots104, i64 16
  store %any %77, ptr %ptradd105, align 16
  %78 = insertvalue %"any[]" undef, ptr %varargslots104, 0
  %"$$temp106" = insertvalue %"any[]" %78, i64 2, 1
  store %"any[]" %"$$temp106", ptr %indirectarg107, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg101, ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, i32 112, ptr align 8 %indirectarg107) #5, !dbg !840
  unreachable, !dbg !840
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit_from_keys_and_values"(ptr %0, ptr align 8 %1, ptr align 8 %2, i32 %3, float %4) #0 comdat !dbg !843 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i32, align 4
  %load_factor = alloca float, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg59 = alloca %any, align 8
  %indirectarg60 = alloca %"char[][]", align 8
  %indirectarg61 = alloca %"MenuItem*[]", align 8
  %5 = icmp eq ptr %0, null, !dbg !846
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !846
  br i1 %6, label %panic, label %checkok, !dbg !846

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !847, !DIExpression(), !848)
    #dbg_declare(ptr %1, !849, !DIExpression(), !848)
    #dbg_declare(ptr %2, !850, !DIExpression(), !848)
  store i32 %3, ptr %capacity, align 4
    #dbg_declare(ptr %capacity, !851, !DIExpression(), !848)
  store float %4, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !852, !DIExpression(), !848)
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !853
  %7 = load i64, ptr %ptradd, align 8, !dbg !853
  %ptradd3 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !853
  %8 = load i64, ptr %ptradd3, align 8, !dbg !853
  %eq = icmp eq i64 %7, %8, !dbg !853
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !853

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.21, i64 98 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg6, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 121) #5, !dbg !853
  unreachable, !dbg !853

assert_ok:                                        ; preds = %checkok
  %10 = load i32, ptr %capacity, align 4, !dbg !855
  %lt = icmp ult i32 0, %10, !dbg !855
  br i1 %lt, label %assert_ok11, label %assert_fail7, !dbg !855

assert_fail7:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg10, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 122) #5, !dbg !855
  unreachable, !dbg !855

assert_ok11:                                      ; preds = %assert_ok
  %12 = load float, ptr %load_factor, align 4, !dbg !856
  %fpfpext = fpext float %12 to double, !dbg !856
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !856
  br i1 %gt, label %assert_ok16, label %assert_fail12, !dbg !856

assert_fail12:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg15, align 8
  %13 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %13(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 123) #5, !dbg !856
  unreachable, !dbg !856

assert_ok16:                                      ; preds = %assert_ok11
  %14 = load ptr, ptr %self, align 8, !dbg !857
  %15 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %14), !dbg !857
  %16 = trunc i8 %15 to i1, !dbg !857
  %not = xor i1 %16, true, !dbg !857
  br i1 %not, label %assert_ok21, label %assert_fail17, !dbg !857

assert_fail17:                                    ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg20, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 124) #5, !dbg !857
  unreachable, !dbg !857

assert_ok21:                                      ; preds = %assert_ok16
  %18 = load i32, ptr %capacity, align 4, !dbg !858
  %lt22 = icmp ult i32 %18, -2147483648, !dbg !858
  br i1 %lt22, label %assert_ok27, label %assert_fail23, !dbg !858

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg26, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 125) #5, !dbg !858
  unreachable, !dbg !858

assert_ok27:                                      ; preds = %assert_ok21
  %20 = load ptr, ptr %self, align 8, !dbg !859
  %21 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !859
  %22 = load %any, ptr %21, align 8, !dbg !859
  %23 = load %"char[][]", ptr %1, align 8, !dbg !859
  %24 = load %"MenuItem*[]", ptr %2, align 8, !dbg !859
  %25 = load i32, ptr %capacity, align 4, !dbg !859
  %26 = load float, ptr %load_factor, align 4, !dbg !859
  %27 = extractvalue %"char[][]" %23, 1, !dbg !860
  %28 = extractvalue %"MenuItem*[]" %24, 1, !dbg !860
  %eq28 = icmp eq i64 %27, %28, !dbg !859
  br i1 %eq28, label %assert_ok33, label %assert_fail29, !dbg !859

assert_fail29:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.21, i64 98 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg32, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 129) #5, !dbg !859
  unreachable, !dbg !859

assert_ok33:                                      ; preds = %assert_ok27
  %lt34 = icmp ult i32 0, %25, !dbg !859
  br i1 %lt34, label %assert_ok39, label %assert_fail35, !dbg !859

assert_fail35:                                    ; preds = %assert_ok33
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg38, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 129) #5, !dbg !859
  unreachable, !dbg !859

assert_ok39:                                      ; preds = %assert_ok33
  %fpfpext40 = fpext float %26 to double, !dbg !861
  %gt41 = fcmp ogt double %fpfpext40, 0.000000e+00, !dbg !859
  br i1 %gt41, label %assert_ok46, label %assert_fail42, !dbg !859

assert_fail42:                                    ; preds = %assert_ok39
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg45, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 129) #5, !dbg !859
  unreachable, !dbg !859

assert_ok46:                                      ; preds = %assert_ok39
  %32 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %20), !dbg !862
  %33 = trunc i8 %32 to i1, !dbg !862
  %not47 = xor i1 %33, true, !dbg !862
  br i1 %not47, label %assert_ok52, label %assert_fail48, !dbg !862

assert_fail48:                                    ; preds = %assert_ok46
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg51, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 129) #5, !dbg !859
  unreachable, !dbg !859

assert_ok52:                                      ; preds = %assert_ok46
  %lt53 = icmp ult i32 %25, -2147483648, !dbg !859
  br i1 %lt53, label %assert_ok58, label %assert_fail54, !dbg !859

assert_fail54:                                    ; preds = %assert_ok52
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg57, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 129) #5, !dbg !859
  unreachable, !dbg !859

assert_ok58:                                      ; preds = %assert_ok52
  store %any %22, ptr %indirectarg59, align 8
  store %"char[][]" %23, ptr %indirectarg60, align 8
  store %"MenuItem*[]" %24, ptr %indirectarg61, align 8
  %36 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_keys_and_values"(ptr %20, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, i32 %25, float %26), !dbg !859
  ret ptr %36, !dbg !859

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg2, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 127) #5, !dbg !848
  unreachable, !dbg !848
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %0) #0 comdat !dbg !863 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !866
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !866
  br i1 %2, label %panic, label %checkok, !dbg !866

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !867, !DIExpression(), !868)
  %3 = load ptr, ptr %map, align 8, !dbg !869
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !869
  %4 = load ptr, ptr %ptradd, align 8, !dbg !869
  %i2b = icmp ne ptr %4, null, !dbg !869
  br i1 %i2b, label %and.rhs, label %and.phi, !dbg !869

and.rhs:                                          ; preds = %checkok
  %5 = load ptr, ptr %map, align 8, !dbg !869
  %ptradd3 = getelementptr inbounds i8, ptr %5, i64 16, !dbg !869
  %6 = load ptr, ptr %ptradd3, align 8, !dbg !869
  %neq = icmp ne ptr %6, @"std_collections_map$String$p$cforms.MenuItem$.dummy.29147", !dbg !869
  br label %and.phi, !dbg !869

and.phi:                                          ; preds = %and.rhs, %checkok
  %val = phi i1 [ false, %checkok ], [ %neq, %and.rhs ], !dbg !869
  %7 = zext i1 %val to i8, !dbg !869
  ret i8 %7, !dbg !869

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.27, i64 14 }, ptr %indirectarg2, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 138) #5, !dbg !868
  unreachable, !dbg !868
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_map"(ptr %0, ptr align 8 %1, ptr %2) #0 comdat !dbg !870 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %other_map = alloca ptr, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg34 = alloca %any, align 8
  %3 = icmp eq ptr %0, null, !dbg !873
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !873
  br i1 %4, label %panic, label %checkok, !dbg !873

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !874, !DIExpression(), !875)
    #dbg_declare(ptr %1, !876, !DIExpression(), !875)
  %5 = icmp eq ptr %2, null
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false)
  br i1 %6, label %panic3, label %checkok7

checkok7:                                         ; preds = %checkok
  store ptr %2, ptr %other_map, align 8
    #dbg_declare(ptr %other_map, !877, !DIExpression(), !875)
  %7 = load ptr, ptr %self, align 8, !dbg !878
  %8 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %7), !dbg !878
  %9 = trunc i8 %8 to i1, !dbg !878
  %not = xor i1 %9, true, !dbg !878
  br i1 %not, label %assert_ok, label %assert_fail, !dbg !878

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg10, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 146) #5, !dbg !878
  unreachable, !dbg !878

assert_ok:                                        ; preds = %checkok7
  %11 = load ptr, ptr %self, align 8, !dbg !880
  %12 = load %any, ptr %1, align 8, !dbg !880
  %13 = load ptr, ptr %other_map, align 8, !dbg !880
  %ptradd = getelementptr inbounds i8, ptr %13, i64 8, !dbg !880
  %14 = load i64, ptr %ptradd, align 8, !dbg !880
  %trunc = trunc i64 %14 to i32, !dbg !880
  %15 = load ptr, ptr %other_map, align 8, !dbg !880
  %ptradd11 = getelementptr inbounds i8, ptr %15, i64 40, !dbg !880
  %16 = load float, ptr %ptradd11, align 8, !dbg !880
  %lt = icmp ult i32 0, %trunc, !dbg !880
  br i1 %lt, label %assert_ok16, label %assert_fail12, !dbg !880

assert_fail12:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg15, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 150) #5, !dbg !880
  unreachable, !dbg !880

assert_ok16:                                      ; preds = %assert_ok
  %fpfpext = fpext float %16 to double, !dbg !881
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !880
  br i1 %gt, label %assert_ok21, label %assert_fail17, !dbg !880

assert_fail17:                                    ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg20, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 150) #5, !dbg !880
  unreachable, !dbg !880

assert_ok21:                                      ; preds = %assert_ok16
  %19 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %11), !dbg !882
  %20 = trunc i8 %19 to i1, !dbg !882
  %not22 = xor i1 %20, true, !dbg !882
  br i1 %not22, label %assert_ok27, label %assert_fail23, !dbg !882

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg26, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 150) #5, !dbg !880
  unreachable, !dbg !880

assert_ok27:                                      ; preds = %assert_ok21
  %lt28 = icmp ult i32 %trunc, -2147483648, !dbg !880
  br i1 %lt28, label %assert_ok33, label %assert_fail29, !dbg !880

assert_fail29:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg32, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 150) #5, !dbg !880
  unreachable, !dbg !880

assert_ok33:                                      ; preds = %assert_ok27
  store %any %12, ptr %indirectarg34, align 8
  %23 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init"(ptr %11, ptr align 8 %indirectarg34, i32 %trunc, float %16), !dbg !880
  %24 = load ptr, ptr %self, align 8, !dbg !883
  %25 = load ptr, ptr %other_map, align 8, !dbg !883
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.put_all_for_create"(ptr %24, ptr %25), !dbg !883
  %26 = load ptr, ptr %self, align 8, !dbg !884
  ret ptr %26, !dbg !884

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 148) #5, !dbg !875
  unreachable, !dbg !875

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.29, i64 67 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg6, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 148) #5, !dbg !875
  unreachable, !dbg !875
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit_from_map"(ptr %0, ptr %1) #0 comdat !dbg !885 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %other_map = alloca ptr, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg17 = alloca %any, align 8
  %2 = icmp eq ptr %0, null, !dbg !888
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !888
  br i1 %3, label %panic, label %checkok, !dbg !888

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !889, !DIExpression(), !890)
  %4 = icmp eq ptr %1, null
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false)
  br i1 %5, label %panic3, label %checkok7

checkok7:                                         ; preds = %checkok
  store ptr %1, ptr %other_map, align 8
    #dbg_declare(ptr %other_map, !891, !DIExpression(), !890)
  %6 = load ptr, ptr %map, align 8, !dbg !892
  %7 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %6), !dbg !892
  %8 = trunc i8 %7 to i1, !dbg !892
  %not = xor i1 %8, true, !dbg !892
  br i1 %not, label %assert_ok, label %assert_fail, !dbg !892

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.31, i64 73 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg10, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 157) #5, !dbg !892
  unreachable, !dbg !892

assert_ok:                                        ; preds = %checkok7
  %10 = load ptr, ptr %map, align 8, !dbg !894
  %11 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !894
  %12 = load %any, ptr %11, align 8, !dbg !894
  %13 = load ptr, ptr %other_map, align 8, !dbg !894
  %14 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %10), !dbg !895
  %15 = trunc i8 %14 to i1, !dbg !895
  %not11 = xor i1 %15, true, !dbg !895
  br i1 %not11, label %assert_ok16, label %assert_fail12, !dbg !895

assert_fail12:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg15, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 161) #5, !dbg !894
  unreachable, !dbg !894

assert_ok16:                                      ; preds = %assert_ok
  store %any %12, ptr %indirectarg17, align 8
  %17 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_map"(ptr %10, ptr align 8 %indirectarg17, ptr %13) #6, !dbg !894
  ret ptr %17, !dbg !894

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg2, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 159) #5, !dbg !890
  unreachable, !dbg !890

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.29, i64 67 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg6, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 159) #5, !dbg !890
  unreachable, !dbg !890
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_empty"(ptr %0) #0 comdat !dbg !896 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !897
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !897
  br i1 %2, label %panic, label %checkok, !dbg !897

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !898, !DIExpression(), !899)
  %3 = load ptr, ptr %map, align 8, !dbg !900
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !900
  %4 = load i32, ptr %ptradd, align 8, !dbg !900
  %i2nb = icmp eq i32 %4, 0, !dbg !900
  %5 = zext i1 %i2nb to i8, !dbg !900
  ret i8 %5, !dbg !900

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.32, i64 8 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 164) #5, !dbg !899
  unreachable, !dbg !899
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.len"(ptr %0) #0 comdat !dbg !901 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !904
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !904
  br i1 %2, label %panic, label %checkok, !dbg !904

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !905, !DIExpression(), !906)
  %3 = load ptr, ptr %map, align 8, !dbg !907
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !907
  %4 = load i32, ptr %ptradd, align 8, !dbg !907
  %zext = zext i32 %4 to i64, !dbg !907
  ret i64 %zext, !dbg !907

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.33, i64 3 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 169) #5, !dbg !906
  unreachable, !dbg !906
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.get_ref"(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !908 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %e = alloca ptr, align 8
  %hash5 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %taddr = alloca i64, align 8
  %taddr8 = alloca i64, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %taddr16 = alloca i64, align 8
  %taddr17 = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %varargslots21 = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !913
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !913
  br i1 %4, label %panic, label %checkok, !dbg !913

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !914, !DIExpression(), !915)
    #dbg_declare(ptr %2, !916, !DIExpression(), !915)
  %5 = load ptr, ptr %map, align 8, !dbg !917
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !917
  %6 = load i32, ptr %ptradd, align 8, !dbg !917
  %i2nb = icmp eq i32 %6, 0, !dbg !917
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !917

if.then:                                          ; preds = %checkok
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !917

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %hash, !918, !DIExpression(), !919)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %7 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !920
  %8 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %7) #6, !dbg !919
  store i32 %8, ptr %hash, align 4, !dbg !919
    #dbg_declare(ptr %e, !923, !DIExpression(), !925)
  %9 = load ptr, ptr %map, align 8, !dbg !925
  %ptradd4 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !925
  %10 = load i64, ptr %ptradd4, align 8, !dbg !925
  %11 = load ptr, ptr %9, align 8, !dbg !925
  %12 = load i32, ptr %hash, align 4
  store i32 %12, ptr %hash5, align 4
  %13 = load ptr, ptr %map, align 8, !dbg !925
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !925
  %14 = load i64, ptr %ptradd6, align 8, !dbg !925
  %trunc = trunc i64 %14 to i32, !dbg !925
  store i32 %trunc, ptr %capacity, align 4
  %15 = load i32, ptr %hash5, align 4, !dbg !926
  %16 = load i32, ptr %capacity, align 4, !dbg !926
  %sub = sub i32 %16, 1, !dbg !926
  %and = and i32 %15, %sub, !dbg !926
  %zext = zext i32 %and to i64, !dbg !926
  %ge = icmp uge i64 %zext, %10, !dbg !926
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !926
  br i1 %17, label %panic7, label %checkok14, !dbg !926

checkok14:                                        ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %11, i64 %zext, !dbg !925
  %18 = ptrtoint ptr %ptroffset to i64, !dbg !925
  %19 = urem i64 %18, 8, !dbg !925
  %20 = icmp ne i64 %19, 0, !dbg !925
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false), !dbg !925
  br i1 %21, label %panic15, label %checkok25, !dbg !925

checkok25:                                        ; preds = %checkok14
  %22 = load ptr, ptr %ptroffset, align 8, !dbg !925
  store ptr %22, ptr %e, align 8, !dbg !925
  br label %loop.cond, !dbg !925

loop.cond:                                        ; preds = %if.exit33, %checkok25
  %23 = load ptr, ptr %e, align 8, !dbg !925
  %neq = icmp ne ptr %23, null, !dbg !925
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !925

loop.body:                                        ; preds = %loop.cond
  %24 = load ptr, ptr %e, align 8, !dbg !928
  %25 = load i32, ptr %24, align 8, !dbg !928
  %26 = load i32, ptr %hash, align 4, !dbg !928
  %eq = icmp eq i32 %25, %26, !dbg !928
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !928

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %2, i32 16, i1 false)
  %27 = load ptr, ptr %e, align 8, !dbg !928
  %ptradd26 = getelementptr inbounds i8, ptr %27, i64 8, !dbg !928
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd26, i32 16, i1 false)
  %28 = load %"char[]", ptr %a, align 8, !dbg !930
  %29 = load %"char[]", ptr %b, align 8, !dbg !930
  %30 = extractvalue %"char[]" %28, 1, !dbg !930
  %31 = extractvalue %"char[]" %29, 1, !dbg !930
  %32 = extractvalue %"char[]" %28, 0, !dbg !930
  %33 = extractvalue %"char[]" %29, 0, !dbg !930
  %eq27 = icmp eq i64 %30, %31, !dbg !930
  br i1 %eq27, label %slice_cmp_values, label %slice_cmp_exit, !dbg !930

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %34 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %34, %30
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %34
  %ptradd29 = getelementptr inbounds i8, ptr %33, i64 %34
  %35 = load i8, ptr %ptradd28, align 1
  %36 = load i8, ptr %ptradd29, align 1
  %eq30 = icmp eq i8 %35, %36
  %37 = add i64 %34, 1
  store i64 %37, ptr %cmp.idx, align 8
  br i1 %eq30, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then31, label %if.exit33

if.then31:                                        ; preds = %and.phi
  %38 = load ptr, ptr %e, align 8, !dbg !928
  %ptradd32 = getelementptr inbounds i8, ptr %38, i64 24, !dbg !928
  store ptr %ptradd32, ptr %0, align 8, !dbg !928
  ret i64 0, !dbg !928

if.exit33:                                        ; preds = %and.phi
  %39 = load ptr, ptr %e, align 8, !dbg !925
  %ptradd34 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !925
  %40 = load ptr, ptr %ptradd34, align 8, !dbg !925
  store ptr %40, ptr %e, align 8, !dbg !925
  br label %loop.cond, !dbg !925

loop.exit:                                        ; preds = %loop.cond
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !933

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.34, i64 7 }, ptr %indirectarg2, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 174) #5, !dbg !915
  unreachable, !dbg !915

panic7:                                           ; preds = %if.exit
  store i64 %10, ptr %taddr, align 8
  %42 = insertvalue %any undef, ptr %taddr, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr8, align 8
  %44 = insertvalue %any undef, ptr %taddr8, 0
  %45 = insertvalue %any %44, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.34, i64 7 }, ptr %indirectarg11, align 8
  store %any %43, ptr %varargslots, align 16
  %ptradd12 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %45, ptr %ptradd12, align 16
  %46 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %46, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 178, ptr align 8 %indirectarg13) #5, !dbg !925
  unreachable, !dbg !925

panic15:                                          ; preds = %checkok14
  store i64 8, ptr %taddr16, align 8
  %47 = insertvalue %any undef, ptr %taddr16, 0
  %48 = insertvalue %any %47, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr17, align 8
  %49 = insertvalue %any undef, ptr %taddr17, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.34, i64 7 }, ptr %indirectarg20, align 8
  store %any %48, ptr %varargslots21, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots21, i64 16
  store %any %50, ptr %ptradd22, align 16
  %51 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp23" = insertvalue %"any[]" %51, i64 2, 1
  store %"any[]" %"$$temp23", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 178, ptr align 8 %indirectarg24) #5, !dbg !925
  unreachable, !dbg !925
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.get_entry"(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !934 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %e = alloca ptr, align 8
  %hash5 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %taddr = alloca i64, align 8
  %taddr8 = alloca i64, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %taddr16 = alloca i64, align 8
  %taddr17 = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %varargslots21 = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !937
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !937
  br i1 %4, label %panic, label %checkok, !dbg !937

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !938, !DIExpression(), !939)
    #dbg_declare(ptr %2, !940, !DIExpression(), !939)
  %5 = load ptr, ptr %map, align 8, !dbg !941
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !941
  %6 = load i32, ptr %ptradd, align 8, !dbg !941
  %i2nb = icmp eq i32 %6, 0, !dbg !941
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !941

if.then:                                          ; preds = %checkok
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !941

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %hash, !942, !DIExpression(), !943)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %7 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !944
  %8 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %7) #6, !dbg !943
  store i32 %8, ptr %hash, align 4, !dbg !943
    #dbg_declare(ptr %e, !946, !DIExpression(), !948)
  %9 = load ptr, ptr %map, align 8, !dbg !948
  %ptradd4 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !948
  %10 = load i64, ptr %ptradd4, align 8, !dbg !948
  %11 = load ptr, ptr %9, align 8, !dbg !948
  %12 = load i32, ptr %hash, align 4
  store i32 %12, ptr %hash5, align 4
  %13 = load ptr, ptr %map, align 8, !dbg !948
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !948
  %14 = load i64, ptr %ptradd6, align 8, !dbg !948
  %trunc = trunc i64 %14 to i32, !dbg !948
  store i32 %trunc, ptr %capacity, align 4
  %15 = load i32, ptr %hash5, align 4, !dbg !949
  %16 = load i32, ptr %capacity, align 4, !dbg !949
  %sub = sub i32 %16, 1, !dbg !949
  %and = and i32 %15, %sub, !dbg !949
  %zext = zext i32 %and to i64, !dbg !949
  %ge = icmp uge i64 %zext, %10, !dbg !949
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !949
  br i1 %17, label %panic7, label %checkok14, !dbg !949

checkok14:                                        ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %11, i64 %zext, !dbg !948
  %18 = ptrtoint ptr %ptroffset to i64, !dbg !948
  %19 = urem i64 %18, 8, !dbg !948
  %20 = icmp ne i64 %19, 0, !dbg !948
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false), !dbg !948
  br i1 %21, label %panic15, label %checkok25, !dbg !948

checkok25:                                        ; preds = %checkok14
  %22 = load ptr, ptr %ptroffset, align 8, !dbg !948
  store ptr %22, ptr %e, align 8, !dbg !948
  br label %loop.cond, !dbg !948

loop.cond:                                        ; preds = %if.exit32, %checkok25
  %23 = load ptr, ptr %e, align 8, !dbg !948
  %neq = icmp ne ptr %23, null, !dbg !948
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !948

loop.body:                                        ; preds = %loop.cond
  %24 = load ptr, ptr %e, align 8, !dbg !951
  %25 = load i32, ptr %24, align 8, !dbg !951
  %26 = load i32, ptr %hash, align 4, !dbg !951
  %eq = icmp eq i32 %25, %26, !dbg !951
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !951

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %2, i32 16, i1 false)
  %27 = load ptr, ptr %e, align 8, !dbg !951
  %ptradd26 = getelementptr inbounds i8, ptr %27, i64 8, !dbg !951
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd26, i32 16, i1 false)
  %28 = load %"char[]", ptr %a, align 8, !dbg !953
  %29 = load %"char[]", ptr %b, align 8, !dbg !953
  %30 = extractvalue %"char[]" %28, 1, !dbg !953
  %31 = extractvalue %"char[]" %29, 1, !dbg !953
  %32 = extractvalue %"char[]" %28, 0, !dbg !953
  %33 = extractvalue %"char[]" %29, 0, !dbg !953
  %eq27 = icmp eq i64 %30, %31, !dbg !953
  br i1 %eq27, label %slice_cmp_values, label %slice_cmp_exit, !dbg !953

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %34 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %34, %30
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %34
  %ptradd29 = getelementptr inbounds i8, ptr %33, i64 %34
  %35 = load i8, ptr %ptradd28, align 1
  %36 = load i8, ptr %ptradd29, align 1
  %eq30 = icmp eq i8 %35, %36
  %37 = add i64 %34, 1
  store i64 %37, ptr %cmp.idx, align 8
  br i1 %eq30, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then31, label %if.exit32

if.then31:                                        ; preds = %and.phi
  %38 = load ptr, ptr %e, align 8, !dbg !951
  store ptr %38, ptr %0, align 8, !dbg !951
  ret i64 0, !dbg !951

if.exit32:                                        ; preds = %and.phi
  %39 = load ptr, ptr %e, align 8, !dbg !948
  %ptradd33 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !948
  %40 = load ptr, ptr %ptradd33, align 8, !dbg !948
  store ptr %40, ptr %e, align 8, !dbg !948
  br label %loop.cond, !dbg !948

loop.exit:                                        ; preds = %loop.cond
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !955

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.35, i64 9 }, ptr %indirectarg2, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 185) #5, !dbg !939
  unreachable, !dbg !939

panic7:                                           ; preds = %if.exit
  store i64 %10, ptr %taddr, align 8
  %42 = insertvalue %any undef, ptr %taddr, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr8, align 8
  %44 = insertvalue %any undef, ptr %taddr8, 0
  %45 = insertvalue %any %44, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.35, i64 9 }, ptr %indirectarg11, align 8
  store %any %43, ptr %varargslots, align 16
  %ptradd12 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %45, ptr %ptradd12, align 16
  %46 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %46, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 189, ptr align 8 %indirectarg13) #5, !dbg !948
  unreachable, !dbg !948

panic15:                                          ; preds = %checkok14
  store i64 8, ptr %taddr16, align 8
  %47 = insertvalue %any undef, ptr %taddr16, 0
  %48 = insertvalue %any %47, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr17, align 8
  %49 = insertvalue %any undef, ptr %taddr17, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.35, i64 9 }, ptr %indirectarg20, align 8
  store %any %48, ptr %varargslots21, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots21, i64 16
  store %any %50, ptr %ptradd22, align 16
  %51 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp23" = insertvalue %"any[]" %51, i64 2, 1
  store %"any[]" %"$$temp23", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 189, ptr align 8 %indirectarg24) #5, !dbg !948
  unreachable, !dbg !948
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.get"(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !956 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr10 = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !959
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !959
  br i1 %4, label %panic, label %checkok, !dbg !959

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !960, !DIExpression(), !961)
    #dbg_declare(ptr %2, !962, !DIExpression(), !961)
  %5 = load ptr, ptr %map, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  %6 = call i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.get_ref"(ptr %retparam, ptr %5, ptr align 8 %indirectarg3) #6, !dbg !963
  %not_err = icmp eq i64 %6, 0, !dbg !963
  %7 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !963
  br i1 %7, label %after_check, label %assign_optional, !dbg !963

assign_optional:                                  ; preds = %checkok
  store i64 %6, ptr %reterr, align 8, !dbg !963
  br label %err_retblock, !dbg !963

after_check:                                      ; preds = %checkok
  %8 = load ptr, ptr %retparam, align 8, !dbg !963
  %checknull = icmp eq ptr %8, null, !dbg !963
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !963
  br i1 %9, label %panic4, label %checkok8, !dbg !963

checkok8:                                         ; preds = %after_check
  %10 = ptrtoint ptr %8 to i64, !dbg !963
  %11 = urem i64 %10, 8, !dbg !963
  %12 = icmp ne i64 %11, 0, !dbg !963
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false), !dbg !963
  br i1 %13, label %panic9, label %checkok15, !dbg !963

checkok15:                                        ; preds = %checkok8
  %14 = load ptr, ptr %8, align 8, !dbg !963
  store ptr %14, ptr %0, align 8, !dbg !963
  ret i64 0, !dbg !963

err_retblock:                                     ; preds = %assign_optional
  %15 = load i64, ptr %reterr, align 8, !dbg !963
  ret i64 %15, !dbg !963

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 219) #5, !dbg !961
  unreachable, !dbg !961

panic4:                                           ; preds = %after_check
  store %"char[]" { ptr @.panic_msg.37, i64 57 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg7, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 221) #5, !dbg !963
  unreachable, !dbg !963

panic9:                                           ; preds = %checkok8
  store i64 8, ptr %taddr, align 8
  %18 = insertvalue %any undef, ptr %taddr, 0
  %19 = insertvalue %any %18, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %11, ptr %taddr10, align 8
  %20 = insertvalue %any undef, ptr %taddr10, 0
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg13, align 8
  store %any %19, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %21, ptr %ptradd, align 16
  %22 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %22, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 221, ptr align 8 %indirectarg14) #5, !dbg !963
  unreachable, !dbg !963
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.has_key"(ptr %0, ptr align 8 %1) #0 comdat !dbg !964 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %blockret = alloca i8, align 1
  %temp_err = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !967
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !967
  br i1 %3, label %panic, label %checkok, !dbg !967

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !968, !DIExpression(), !969)
    #dbg_declare(ptr %1, !970, !DIExpression(), !969)
  br label %testblock

testblock:                                        ; preds = %checkok
  %4 = load ptr, ptr %map, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %1, i32 16, i1 false)
  %5 = call i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.get_ref"(ptr %retparam, ptr %4, ptr align 8 %indirectarg3), !dbg !971
  %not_err = icmp eq i64 %5, 0, !dbg !971
  %6 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !971
  br i1 %6, label %after_check, label %assign_optional, !dbg !971

assign_optional:                                  ; preds = %testblock
  store i64 %5, ptr %temp_err, align 8, !dbg !971
  br label %end_block, !dbg !971

after_check:                                      ; preds = %testblock
  store i64 0, ptr %temp_err, align 8, !dbg !971
  br label %end_block, !dbg !971

end_block:                                        ; preds = %after_check, %assign_optional
  %7 = load i64, ptr %temp_err, align 8, !dbg !971
  %i2b = icmp ne i64 %7, 0, !dbg !971
  br i1 %i2b, label %if.then, label %if.exit, !dbg !971

if.then:                                          ; preds = %end_block
  store i8 0, ptr %blockret, align 1, !dbg !971
  br label %expr_block.exit, !dbg !971

if.exit:                                          ; preds = %end_block
  store i8 1, ptr %blockret, align 1, !dbg !974
  br label %expr_block.exit, !dbg !974

expr_block.exit:                                  ; preds = %if.exit, %if.then
  %8 = load i8, ptr %blockret, align 1, !dbg !974
  ret i8 %8, !dbg !974

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.38, i64 7 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 224) #5, !dbg !969
  unreachable, !dbg !969
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.set"(ptr %0, ptr align 8 %1, ptr %2) #0 comdat !dbg !975 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %value = alloca ptr, align 8
  %switch = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg21 = alloca %any, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %index = alloca i32, align 4
  %hash47 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg56 = alloca %"any[]", align 8
  %taddr59 = alloca i64, align 8
  %taddr60 = alloca i64, align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %varargslots64 = alloca [2 x %any], align 16
  %indirectarg67 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %indirectarg77 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !978
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !978
  br i1 %4, label %panic, label %checkok, !dbg !978

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !979, !DIExpression(), !980)
    #dbg_declare(ptr %1, !981, !DIExpression(), !980)
  store ptr %2, ptr %value, align 8
    #dbg_declare(ptr %value, !982, !DIExpression(), !980)
  %5 = load ptr, ptr %map, align 8, !dbg !983
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !983
  %6 = load ptr, ptr %ptradd, align 8
  store ptr %6, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %checkok
  %7 = load ptr, ptr %switch, align 8
  %eq = icmp eq ptr @"std_collections_map$String$p$cforms.MenuItem$.dummy.29147", %7, !dbg !985
  br i1 %eq, label %switch.case, label %next_if, !dbg !985

switch.case:                                      ; preds = %switch.entry
  %8 = load ptr, ptr %map, align 8, !dbg !986
  %9 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.thread_allocator), !dbg !986
  %10 = load %any, ptr %9, align 8, !dbg !986
  br i1 true, label %assert_ok, label %assert_fail, !dbg !986

assert_fail:                                      ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg5, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 235) #5, !dbg !986
  unreachable, !dbg !986

assert_ok:                                        ; preds = %switch.case
  br i1 true, label %assert_ok10, label %assert_fail6, !dbg !986

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg9, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 235) #5, !dbg !986
  unreachable, !dbg !986

assert_ok10:                                      ; preds = %assert_ok
  %13 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %8), !dbg !988
  %14 = trunc i8 %13 to i1, !dbg !988
  %not = xor i1 %14, true, !dbg !988
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !988

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg14, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 235) #5, !dbg !986
  unreachable, !dbg !986

assert_ok15:                                      ; preds = %assert_ok10
  br i1 true, label %assert_ok20, label %assert_fail16, !dbg !986

assert_fail16:                                    ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg19, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 235) #5, !dbg !986
  unreachable, !dbg !986

assert_ok20:                                      ; preds = %assert_ok15
  store %any %10, ptr %indirectarg21, align 8
  %17 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.init"(ptr %8, ptr align 8 %indirectarg21, i32 16, float 7.500000e-01), !dbg !986
  br label %switch.exit, !dbg !986

next_if:                                          ; preds = %switch.entry
  %eq22 = icmp eq ptr null, %7, !dbg !989
  br i1 %eq22, label %switch.case23, label %next_if45, !dbg !989

switch.case23:                                    ; preds = %next_if
  %18 = load ptr, ptr %map, align 8, !dbg !990
  br i1 true, label %assert_ok28, label %assert_fail24, !dbg !990

assert_fail24:                                    ; preds = %switch.case23
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg27, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 237) #5, !dbg !990
  unreachable, !dbg !990

assert_ok28:                                      ; preds = %switch.case23
  br i1 true, label %assert_ok33, label %assert_fail29, !dbg !990

assert_fail29:                                    ; preds = %assert_ok28
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg32, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 237) #5, !dbg !990
  unreachable, !dbg !990

assert_ok33:                                      ; preds = %assert_ok28
  %21 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %18), !dbg !992
  %22 = trunc i8 %21 to i1, !dbg !992
  %not34 = xor i1 %22, true, !dbg !992
  br i1 %not34, label %assert_ok39, label %assert_fail35, !dbg !992

assert_fail35:                                    ; preds = %assert_ok33
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg38, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 237) #5, !dbg !990
  unreachable, !dbg !990

assert_ok39:                                      ; preds = %assert_ok33
  br i1 true, label %assert_ok44, label %assert_fail40, !dbg !990

assert_fail40:                                    ; preds = %assert_ok39
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg43, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 237) #5, !dbg !990
  unreachable, !dbg !990

assert_ok44:                                      ; preds = %assert_ok39
  %25 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit"(ptr %18, i32 16, float 7.500000e-01), !dbg !990
  br label %switch.exit, !dbg !990

next_if45:                                        ; preds = %next_if
  br label %switch.default, !dbg !990

switch.default:                                   ; preds = %next_if45
  br label %switch.exit, !dbg !993

switch.exit:                                      ; preds = %switch.default, %assert_ok44, %assert_ok20
    #dbg_declare(ptr %hash, !995, !DIExpression(), !996)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg46, ptr align 8 %c, i32 16, i1 false)
  %26 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg46), !dbg !997
  %27 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %26) #6, !dbg !996
  store i32 %27, ptr %hash, align 4, !dbg !996
    #dbg_declare(ptr %index, !999, !DIExpression(), !1000)
  %28 = load i32, ptr %hash, align 4
  store i32 %28, ptr %hash47, align 4
  %29 = load ptr, ptr %map, align 8, !dbg !1000
  %ptradd48 = getelementptr inbounds i8, ptr %29, i64 8, !dbg !1000
  %30 = load i64, ptr %ptradd48, align 8, !dbg !1000
  %trunc = trunc i64 %30 to i32, !dbg !1000
  store i32 %trunc, ptr %capacity, align 4
  %31 = load i32, ptr %hash47, align 4, !dbg !1001
  %32 = load i32, ptr %capacity, align 4, !dbg !1001
  %sub = sub i32 %32, 1, !dbg !1001
  %and = and i32 %31, %sub, !dbg !1001
  store i32 %and, ptr %index, align 4, !dbg !1001
    #dbg_declare(ptr %e, !1003, !DIExpression(), !1005)
  %33 = load ptr, ptr %map, align 8, !dbg !1005
  %ptradd49 = getelementptr inbounds i8, ptr %33, i64 8, !dbg !1005
  %34 = load i64, ptr %ptradd49, align 8, !dbg !1005
  %35 = load ptr, ptr %33, align 8, !dbg !1005
  %36 = load i32, ptr %index, align 4, !dbg !1005
  %zext = zext i32 %36 to i64, !dbg !1005
  %ge = icmp uge i64 %zext, %34, !dbg !1005
  %37 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1005
  br i1 %37, label %panic50, label %checkok57, !dbg !1005

checkok57:                                        ; preds = %switch.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %35, i64 %zext, !dbg !1005
  %38 = ptrtoint ptr %ptroffset to i64, !dbg !1005
  %39 = urem i64 %38, 8, !dbg !1005
  %40 = icmp ne i64 %39, 0, !dbg !1005
  %41 = call i1 @llvm.expect.i1(i1 %40, i1 false), !dbg !1005
  br i1 %41, label %panic58, label %checkok68, !dbg !1005

checkok68:                                        ; preds = %checkok57
  %42 = load ptr, ptr %ptroffset, align 8, !dbg !1005
  store ptr %42, ptr %e, align 8, !dbg !1005
  br label %loop.cond, !dbg !1005

loop.cond:                                        ; preds = %if.exit, %checkok68
  %43 = load ptr, ptr %e, align 8, !dbg !1005
  %neq = icmp ne ptr %43, null, !dbg !1005
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !1005

loop.body:                                        ; preds = %loop.cond
  %44 = load ptr, ptr %e, align 8, !dbg !1006
  %45 = load i32, ptr %44, align 8, !dbg !1006
  %46 = load i32, ptr %hash, align 4, !dbg !1006
  %eq69 = icmp eq i32 %45, %46, !dbg !1006
  br i1 %eq69, label %and.rhs, label %and.phi, !dbg !1006

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %1, i32 16, i1 false)
  %47 = load ptr, ptr %e, align 8, !dbg !1006
  %ptradd70 = getelementptr inbounds i8, ptr %47, i64 8, !dbg !1006
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd70, i32 16, i1 false)
  %48 = load %"char[]", ptr %a, align 8, !dbg !1008
  %49 = load %"char[]", ptr %b, align 8, !dbg !1008
  %50 = extractvalue %"char[]" %48, 1, !dbg !1008
  %51 = extractvalue %"char[]" %49, 1, !dbg !1008
  %52 = extractvalue %"char[]" %48, 0, !dbg !1008
  %53 = extractvalue %"char[]" %49, 0, !dbg !1008
  %eq71 = icmp eq i64 %50, %51, !dbg !1008
  br i1 %eq71, label %slice_cmp_values, label %slice_cmp_exit, !dbg !1008

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %54 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %54, %50
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd72 = getelementptr inbounds i8, ptr %52, i64 %54
  %ptradd73 = getelementptr inbounds i8, ptr %53, i64 %54
  %55 = load i8, ptr %ptradd72, align 1
  %56 = load i8, ptr %ptradd73, align 1
  %eq74 = icmp eq i8 %55, %56
  %57 = add i64 %54, 1
  store i64 %57, ptr %cmp.idx, align 8
  br i1 %eq74, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then, label %if.exit

if.then:                                          ; preds = %and.phi
  %58 = load ptr, ptr %e, align 8, !dbg !1010
  %ptradd75 = getelementptr inbounds i8, ptr %58, i64 24, !dbg !1010
  %59 = load ptr, ptr %value, align 8, !dbg !1010
  store ptr %59, ptr %ptradd75, align 8, !dbg !1010
  ret i8 1, !dbg !1012

if.exit:                                          ; preds = %and.phi
  %60 = load ptr, ptr %e, align 8, !dbg !1005
  %ptradd76 = getelementptr inbounds i8, ptr %60, i64 32, !dbg !1005
  %61 = load ptr, ptr %ptradd76, align 8, !dbg !1005
  store ptr %61, ptr %e, align 8, !dbg !1005
  br label %loop.cond, !dbg !1005

loop.exit:                                        ; preds = %loop.cond
  %62 = load ptr, ptr %map, align 8, !dbg !1013
  %63 = load i32, ptr %hash, align 4, !dbg !1013
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg77, ptr align 8 %1, i32 16, i1 false)
  %64 = load ptr, ptr %value, align 8
  %65 = load i32, ptr %index, align 4
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.add_entry"(ptr %62, i32 %63, ptr align 8 %indirectarg77, ptr %64, i32 %65), !dbg !1013
  ret i8 0, !dbg !1014

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg2, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 229) #5, !dbg !980
  unreachable, !dbg !980

panic50:                                          ; preds = %switch.exit
  store i64 %34, ptr %taddr, align 8
  %67 = insertvalue %any undef, ptr %taddr, 0
  %68 = insertvalue %any %67, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr51, align 8
  %69 = insertvalue %any undef, ptr %taddr51, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg54, align 8
  store %any %68, ptr %varargslots, align 16
  %ptradd55 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %70, ptr %ptradd55, align 16
  %71 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %71, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg56, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 243, ptr align 8 %indirectarg56) #5, !dbg !1005
  unreachable, !dbg !1005

panic58:                                          ; preds = %checkok57
  store i64 8, ptr %taddr59, align 8
  %72 = insertvalue %any undef, ptr %taddr59, 0
  %73 = insertvalue %any %72, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %39, ptr %taddr60, align 8
  %74 = insertvalue %any undef, ptr %taddr60, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg63, align 8
  store %any %73, ptr %varargslots64, align 16
  %ptradd65 = getelementptr inbounds i8, ptr %varargslots64, i64 16
  store %any %75, ptr %ptradd65, align 16
  %76 = insertvalue %"any[]" undef, ptr %varargslots64, 0
  %"$$temp66" = insertvalue %"any[]" %76, i64 2, 1
  store %"any[]" %"$$temp66", ptr %indirectarg67, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 243, ptr align 8 %indirectarg67) #5, !dbg !1005
  unreachable, !dbg !1005
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.remove"(ptr %0, ptr align 8 %1) #0 comdat !dbg !1015 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1018
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1018
  br i1 %3, label %panic, label %checkok, !dbg !1018

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1019, !DIExpression(), !1020)
    #dbg_declare(ptr %1, !1021, !DIExpression(), !1020)
  %4 = load ptr, ptr %map, align 8, !dbg !1022
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %1, i32 16, i1 false)
  %5 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.remove_entry_for_key"(ptr %4, ptr align 8 %indirectarg3), !dbg !1022
  %6 = trunc i8 %5 to i1, !dbg !1022
  br i1 %6, label %if.exit, label %if.else, !dbg !1022

if.else:                                          ; preds = %checkok
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !1022

if.exit:                                          ; preds = %checkok
  ret i64 0, !dbg !1022

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.40, i64 6 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 255) #5, !dbg !1020
  unreachable, !dbg !1020
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.clear"(ptr %0) #0 comdat !dbg !1023 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr9 = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %entry_ref = alloca ptr, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %taddr24 = alloca i64, align 8
  %taddr25 = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %varargslots29 = alloca [2 x %any], align 16
  %indirectarg32 = alloca %"any[]", align 8
  %taddr36 = alloca i64, align 8
  %taddr37 = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [2 x %any], align 16
  %indirectarg44 = alloca %"any[]", align 8
  %entry46 = alloca ptr, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %taddr54 = alloca i64, align 8
  %taddr55 = alloca i64, align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %varargslots59 = alloca [2 x %any], align 16
  %indirectarg62 = alloca %"any[]", align 8
  %next = alloca ptr, align 8
  %to_delete = alloca ptr, align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %taddr78 = alloca i64, align 8
  %taddr79 = alloca i64, align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %varargslots83 = alloca [2 x %any], align 16
  %indirectarg86 = alloca %"any[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !1026
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1026
  br i1 %2, label %panic, label %checkok, !dbg !1026

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1027, !DIExpression(), !1028)
  %3 = load ptr, ptr %map, align 8, !dbg !1029
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !1029
  %4 = load i32, ptr %ptradd, align 8, !dbg !1029
  %i2nb = icmp eq i32 %4, 0, !dbg !1029
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1029

if.then:                                          ; preds = %checkok
  ret void, !dbg !1029

if.exit:                                          ; preds = %checkok
  %5 = load ptr, ptr %map, align 8, !dbg !1030
  %checknull = icmp eq ptr %5, null, !dbg !1030
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1030
  br i1 %6, label %panic3, label %checkok7, !dbg !1030

checkok7:                                         ; preds = %if.exit
  %7 = ptrtoint ptr %5 to i64, !dbg !1030
  %8 = urem i64 %7, 8, !dbg !1030
  %9 = icmp ne i64 %8, 0, !dbg !1030
  %10 = call i1 @llvm.expect.i1(i1 %9, i1 false), !dbg !1030
  br i1 %10, label %panic8, label %checkok15, !dbg !1030

checkok15:                                        ; preds = %checkok7
  %ptradd16 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !1030
  %11 = load i64, ptr %ptradd16, align 8, !dbg !1030
    #dbg_declare(ptr %.anon, !1032, !DIExpression(), !1030)
  store i64 0, ptr %.anon, align 8, !dbg !1030
  br label %loop.cond, !dbg !1030

loop.cond:                                        ; preds = %loop.inc, %checkok15
  %12 = load i64, ptr %.anon, align 8, !dbg !1030
  %lt = icmp ult i64 %12, %11, !dbg !1030
  br i1 %lt, label %loop.body, label %loop.exit88, !dbg !1030

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry_ref, !1033, !DIExpression(), !1035)
  %checknull17 = icmp eq ptr %5, null, !dbg !1035
  %13 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !1035
  br i1 %13, label %panic18, label %checkok22, !dbg !1035

checkok22:                                        ; preds = %loop.body
  %14 = ptrtoint ptr %5 to i64, !dbg !1035
  %15 = urem i64 %14, 8, !dbg !1035
  %16 = icmp ne i64 %15, 0, !dbg !1035
  %17 = call i1 @llvm.expect.i1(i1 %16, i1 false), !dbg !1035
  br i1 %17, label %panic23, label %checkok33, !dbg !1035

checkok33:                                        ; preds = %checkok22
  %ptradd34 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !1035
  %18 = load i64, ptr %ptradd34, align 8, !dbg !1035
  %19 = load ptr, ptr %5, align 8, !dbg !1035
  %20 = load i64, ptr %.anon, align 8, !dbg !1035
  %ge = icmp uge i64 %20, %18, !dbg !1035
  %21 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1035
  br i1 %21, label %panic35, label %checkok45, !dbg !1035

checkok45:                                        ; preds = %checkok33
  %ptroffset = getelementptr inbounds [8 x i8], ptr %19, i64 %20, !dbg !1035
  store ptr %ptroffset, ptr %entry_ref, align 8, !dbg !1035
    #dbg_declare(ptr %entry46, !1036, !DIExpression(), !1038)
  %22 = load ptr, ptr %entry_ref, align 8, !dbg !1038
  %checknull47 = icmp eq ptr %22, null, !dbg !1038
  %23 = call i1 @llvm.expect.i1(i1 %checknull47, i1 false), !dbg !1038
  br i1 %23, label %panic48, label %checkok52, !dbg !1038

checkok52:                                        ; preds = %checkok45
  %24 = ptrtoint ptr %22 to i64, !dbg !1038
  %25 = urem i64 %24, 8, !dbg !1038
  %26 = icmp ne i64 %25, 0, !dbg !1038
  %27 = call i1 @llvm.expect.i1(i1 %26, i1 false), !dbg !1038
  br i1 %27, label %panic53, label %checkok63, !dbg !1038

checkok63:                                        ; preds = %checkok52
  %28 = load ptr, ptr %22, align 8, !dbg !1038
  store ptr %28, ptr %entry46, align 8, !dbg !1038
  %29 = load ptr, ptr %entry46, align 8, !dbg !1039
  %i2nb64 = icmp eq ptr %29, null, !dbg !1039
  br i1 %i2nb64, label %if.then65, label %if.exit66, !dbg !1039

if.then65:                                        ; preds = %checkok63
  br label %loop.inc, !dbg !1039

if.exit66:                                        ; preds = %checkok63
    #dbg_declare(ptr %next, !1040, !DIExpression(), !1041)
  %30 = load ptr, ptr %entry46, align 8, !dbg !1041
  %ptradd67 = getelementptr inbounds i8, ptr %30, i64 32, !dbg !1041
  %31 = load ptr, ptr %ptradd67, align 8, !dbg !1041
  store ptr %31, ptr %next, align 8, !dbg !1041
  br label %loop.cond68, !dbg !1042

loop.cond68:                                      ; preds = %loop.body69, %if.exit66
  %32 = load ptr, ptr %next, align 8, !dbg !1043
  %i2b = icmp ne ptr %32, null, !dbg !1043
  br i1 %i2b, label %loop.body69, label %loop.exit, !dbg !1043

loop.body69:                                      ; preds = %loop.cond68
    #dbg_declare(ptr %to_delete, !1045, !DIExpression(), !1047)
  %33 = load ptr, ptr %next, align 8, !dbg !1047
  store ptr %33, ptr %to_delete, align 8, !dbg !1047
  %34 = load ptr, ptr %next, align 8, !dbg !1048
  %ptradd70 = getelementptr inbounds i8, ptr %34, i64 32, !dbg !1048
  %35 = load ptr, ptr %ptradd70, align 8, !dbg !1048
  store ptr %35, ptr %next, align 8, !dbg !1048
  %36 = load ptr, ptr %map, align 8, !dbg !1049
  %37 = load ptr, ptr %to_delete, align 8, !dbg !1049
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_entry"(ptr %36, ptr %37), !dbg !1049
  br label %loop.cond68, !dbg !1049

loop.exit:                                        ; preds = %loop.cond68
  %38 = load ptr, ptr %map, align 8, !dbg !1050
  %39 = load ptr, ptr %entry46, align 8, !dbg !1050
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_entry"(ptr %38, ptr %39), !dbg !1050
  %40 = load ptr, ptr %entry_ref, align 8, !dbg !1051
  %checknull71 = icmp eq ptr %40, null, !dbg !1051
  %41 = call i1 @llvm.expect.i1(i1 %checknull71, i1 false), !dbg !1051
  br i1 %41, label %panic72, label %checkok76, !dbg !1051

checkok76:                                        ; preds = %loop.exit
  %42 = ptrtoint ptr %40 to i64, !dbg !1051
  %43 = urem i64 %42, 8, !dbg !1051
  %44 = icmp ne i64 %43, 0, !dbg !1051
  %45 = call i1 @llvm.expect.i1(i1 %44, i1 false), !dbg !1051
  br i1 %45, label %panic77, label %checkok87, !dbg !1051

checkok87:                                        ; preds = %checkok76
  store ptr null, ptr %40, align 8, !dbg !1051
  br label %loop.inc, !dbg !1051

loop.inc:                                         ; preds = %checkok87, %if.then65
  %46 = load i64, ptr %.anon, align 8, !dbg !1030
  %addnuw = add nuw i64 %46, 1, !dbg !1030
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1030
  br label %loop.cond, !dbg !1030

loop.exit88:                                      ; preds = %loop.cond
  %47 = load ptr, ptr %map, align 8, !dbg !1052
  %ptradd89 = getelementptr inbounds i8, ptr %47, i64 32, !dbg !1052
  store i32 0, ptr %ptradd89, align 8, !dbg !1052
  ret void, !dbg !1052

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 260) #5, !dbg !1028
  unreachable, !dbg !1028

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg6, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 263) #5, !dbg !1030
  unreachable, !dbg !1030

panic8:                                           ; preds = %checkok7
  store i64 8, ptr %taddr, align 8
  %50 = insertvalue %any undef, ptr %taddr, 0
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %8, ptr %taddr9, align 8
  %52 = insertvalue %any undef, ptr %taddr9, 0
  %53 = insertvalue %any %52, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg12, align 8
  store %any %51, ptr %varargslots, align 16
  %ptradd13 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %53, ptr %ptradd13, align 16
  %54 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %54, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 263, ptr align 8 %indirectarg14) #5, !dbg !1030
  unreachable, !dbg !1030

panic18:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg21, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 263) #5, !dbg !1035
  unreachable, !dbg !1035

panic23:                                          ; preds = %checkok22
  store i64 8, ptr %taddr24, align 8
  %56 = insertvalue %any undef, ptr %taddr24, 0
  %57 = insertvalue %any %56, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %15, ptr %taddr25, align 8
  %58 = insertvalue %any undef, ptr %taddr25, 0
  %59 = insertvalue %any %58, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg28, align 8
  store %any %57, ptr %varargslots29, align 16
  %ptradd30 = getelementptr inbounds i8, ptr %varargslots29, i64 16
  store %any %59, ptr %ptradd30, align 16
  %60 = insertvalue %"any[]" undef, ptr %varargslots29, 0
  %"$$temp31" = insertvalue %"any[]" %60, i64 2, 1
  store %"any[]" %"$$temp31", ptr %indirectarg32, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 263, ptr align 8 %indirectarg32) #5, !dbg !1035
  unreachable, !dbg !1035

panic35:                                          ; preds = %checkok33
  store i64 %18, ptr %taddr36, align 8
  %61 = insertvalue %any undef, ptr %taddr36, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %20, ptr %taddr37, align 8
  %63 = insertvalue %any undef, ptr %taddr37, 0
  %64 = insertvalue %any %63, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg40, align 8
  store %any %62, ptr %varargslots41, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %varargslots41, i64 16
  store %any %64, ptr %ptradd42, align 16
  %65 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp43" = insertvalue %"any[]" %65, i64 2, 1
  store %"any[]" %"$$temp43", ptr %indirectarg44, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 263, ptr align 8 %indirectarg44) #5, !dbg !1035
  unreachable, !dbg !1035

panic48:                                          ; preds = %checkok45
  store %"char[]" { ptr @.panic_msg.43, i64 50 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg51, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 265) #5, !dbg !1038
  unreachable, !dbg !1038

panic53:                                          ; preds = %checkok52
  store i64 8, ptr %taddr54, align 8
  %67 = insertvalue %any undef, ptr %taddr54, 0
  %68 = insertvalue %any %67, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %25, ptr %taddr55, align 8
  %69 = insertvalue %any undef, ptr %taddr55, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg58, align 8
  store %any %68, ptr %varargslots59, align 16
  %ptradd60 = getelementptr inbounds i8, ptr %varargslots59, i64 16
  store %any %70, ptr %ptradd60, align 16
  %71 = insertvalue %"any[]" undef, ptr %varargslots59, 0
  %"$$temp61" = insertvalue %"any[]" %71, i64 2, 1
  store %"any[]" %"$$temp61", ptr %indirectarg62, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 265, ptr align 8 %indirectarg62) #5, !dbg !1038
  unreachable, !dbg !1038

panic72:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.43, i64 50 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg75, align 8
  %72 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %72(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 275) #5, !dbg !1051
  unreachable, !dbg !1051

panic77:                                          ; preds = %checkok76
  store i64 8, ptr %taddr78, align 8
  %73 = insertvalue %any undef, ptr %taddr78, 0
  %74 = insertvalue %any %73, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %43, ptr %taddr79, align 8
  %75 = insertvalue %any undef, ptr %taddr79, 0
  %76 = insertvalue %any %75, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg80, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg82, align 8
  store %any %74, ptr %varargslots83, align 16
  %ptradd84 = getelementptr inbounds i8, ptr %varargslots83, i64 16
  store %any %76, ptr %ptradd84, align 16
  %77 = insertvalue %"any[]" undef, ptr %varargslots83, 0
  %"$$temp85" = insertvalue %"any[]" %77, i64 2, 1
  store %"any[]" %"$$temp85", ptr %indirectarg86, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg80, ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, i32 275, ptr align 8 %indirectarg86) #5, !dbg !1051
  unreachable, !dbg !1051
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free"(ptr %0) #0 comdat !dbg !1053 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1054
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1054
  br i1 %2, label %panic, label %checkok, !dbg !1054

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1055, !DIExpression(), !1056)
  %3 = load ptr, ptr %map, align 8, !dbg !1057
  %4 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized"(ptr %3), !dbg !1057
  %5 = trunc i8 %4 to i1, !dbg !1057
  br i1 %5, label %if.exit, label %if.else, !dbg !1057

if.else:                                          ; preds = %checkok
  ret void, !dbg !1057

if.exit:                                          ; preds = %checkok
  %6 = load ptr, ptr %map, align 8, !dbg !1058
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.clear"(ptr %6), !dbg !1058
  %7 = load ptr, ptr %map, align 8, !dbg !1059
  %8 = load ptr, ptr %7, align 8, !dbg !1059
  %9 = load ptr, ptr %map, align 8, !dbg !1059
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_internal"(ptr %9, ptr %8) #6, !dbg !1059
  %10 = load ptr, ptr %map, align 8, !dbg !1060
  store %"Entry*[]" zeroinitializer, ptr %10, align 8, !dbg !1060
  ret void, !dbg !1060

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.44, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 280) #5, !dbg !1056
  unreachable, !dbg !1056
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.tkeys"(ptr noalias sret(%"char[][]") align 8 %0, ptr %1) #0 comdat !dbg !1061 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %sretparam = alloca %"char[][]", align 8
  %indirectarg3 = alloca %any, align 8
  %2 = icmp eq ptr %1, null, !dbg !1064
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1064
  br i1 %3, label %panic, label %checkok, !dbg !1064

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1065, !DIExpression(), !1066)
  %4 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1067
  %5 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %4, i32 16, i1 false)
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.keys"(ptr sret(%"char[][]") align 8 %sretparam, ptr %5, ptr align 8 %indirectarg3) #6, !dbg !1067
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1067
  ret void, !dbg !1067

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.45, i64 5 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 288) #5, !dbg !1066
  unreachable, !dbg !1066
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.keys"(ptr noalias sret(%"char[][]") align 8 %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1068 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %list = alloca %"char[][]", align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator4 = alloca %any, align 8
  %elements5 = alloca i64, align 8
  %allocator6 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr31 = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg35 = alloca %"any[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [1 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %index = alloca i64, align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %taddr50 = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots55 = alloca [2 x %any], align 16
  %indirectarg58 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %entry62 = alloca ptr, align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %taddr70 = alloca i64, align 8
  %taddr71 = alloca i64, align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %varargslots75 = alloca [2 x %any], align 16
  %indirectarg78 = alloca %"any[]", align 8
  %taddr82 = alloca i64, align 8
  %taddr83 = alloca i64, align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %varargslots87 = alloca [2 x %any], align 16
  %indirectarg90 = alloca %"any[]", align 8
  %taddr93 = alloca i64, align 8
  %taddr94 = alloca i64, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %varargslots98 = alloca [2 x %any], align 16
  %indirectarg101 = alloca %"any[]", align 8
  %sretparam = alloca %"char[]", align 8
  %indirectarg106 = alloca %"char[]", align 8
  %indirectarg107 = alloca %any, align 8
  %taddr112 = alloca i64, align 8
  %taddr113 = alloca i64, align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg116 = alloca %"char[]", align 8
  %varargslots117 = alloca [2 x %any], align 16
  %indirectarg120 = alloca %"any[]", align 8
  %taddr124 = alloca i64, align 8
  %taddr125 = alloca i64, align 8
  %indirectarg126 = alloca %"char[]", align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %varargslots129 = alloca [2 x %any], align 16
  %indirectarg132 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1071
  %3 = icmp eq ptr %1, null, !dbg !1071
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1071
  br i1 %4, label %panic, label %checkok, !dbg !1071

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1072, !DIExpression(), !1073)
    #dbg_declare(ptr %2, !1074, !DIExpression(), !1073)
  %5 = load ptr, ptr %self, align 8, !dbg !1075
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !1075
  %6 = load i32, ptr %ptradd, align 8, !dbg !1075
  %i2nb = icmp eq i32 %6, 0, !dbg !1075
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1075

if.then:                                          ; preds = %checkok
  store %"char[][]" zeroinitializer, ptr %0, align 8, !dbg !1075
  ret void, !dbg !1075

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %list, !1076, !DIExpression(), !1077)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %2, i32 16, i1 false)
  %7 = load ptr, ptr %self, align 8, !dbg !1077
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 32, !dbg !1077
  %8 = load i32, ptr %ptradd3, align 8, !dbg !1077
  %zext = zext i32 %8 to i64, !dbg !1077
  store i64 %zext, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator4, ptr align 8 %allocator, i32 16, i1 false)
  %9 = load i64, ptr %elements, align 8
  store i64 %9, ptr %elements5, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator6, ptr align 8 %allocator4, i32 16, i1 false)
  %10 = load i64, ptr %elements5, align 8, !dbg !1078
  %mul = mul i64 16, %10, !dbg !1078
  store i64 %mul, ptr %size, align 8
  %11 = load i64, ptr %size, align 8, !dbg !1082
  %i2nb7 = icmp eq i64 %11, 0, !dbg !1082
  br i1 %i2nb7, label %if.then8, label %if.exit9, !dbg !1082

if.then8:                                         ; preds = %if.exit
  store ptr null, ptr %blockret, align 8, !dbg !1082
  br label %expr_block.exit, !dbg !1082

if.exit9:                                         ; preds = %if.exit
  %12 = load i64, ptr %size, align 8, !dbg !1084
  br i1 true, label %or.phi, label %or.rhs, !dbg !1085

or.rhs:                                           ; preds = %if.exit9
  store i64 0, ptr %x, align 8
  %13 = load i64, ptr %x, align 8, !dbg !1086
  %neq = icmp ne i64 0, %13, !dbg !1086
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1086

and.rhs:                                          ; preds = %or.rhs
  %14 = load i64, ptr %x, align 8, !dbg !1086
  %15 = load i64, ptr %x, align 8, !dbg !1086
  %sub = sub i64 %15, 1, !dbg !1086
  %and = and i64 %14, %sub, !dbg !1086
  %eq = icmp eq i64 %and, 0, !dbg !1086
  br label %and.phi, !dbg !1086

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1086
  br label %or.phi, !dbg !1086

or.phi:                                           ; preds = %and.phi, %if.exit9
  %val10 = phi i1 [ true, %if.exit9 ], [ %val, %and.phi ], !dbg !1086
  br i1 %val10, label %assert_ok, label %assert_fail, !dbg !1086

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg13, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 86) #5, !dbg !1084
  unreachable, !dbg !1084

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok18, label %assert_fail14, !dbg !1084

assert_fail14:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg17, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 86) #5, !dbg !1084
  unreachable, !dbg !1084

assert_ok18:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %12, !dbg !1084
  br i1 %lt, label %assert_ok23, label %assert_fail19, !dbg !1084

assert_fail19:                                    ; preds = %assert_ok18
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg22, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 86) #5, !dbg !1084
  unreachable, !dbg !1084

assert_ok23:                                      ; preds = %assert_ok18
  %ptradd24 = getelementptr inbounds i8, ptr %allocator6, i64 8, !dbg !1084
  %19 = load i64, ptr %ptradd24, align 8, !dbg !1084
  %20 = inttoptr i64 %19 to ptr, !dbg !1084
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1071
  %21 = icmp eq ptr %20, %type, !dbg !1071
  br i1 %21, label %cache_hit, label %cache_miss, !dbg !1071

cache_miss:                                       ; preds = %assert_ok23
  %ptradd25 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !1071
  %22 = load ptr, ptr %ptradd25, align 8, !dbg !1071
  %23 = call ptr @.dyn_search(ptr %22, ptr @"$sel.acquire"), !dbg !1071
  store ptr %23, ptr %.inlinecache, align 8, !dbg !1071
  store ptr %20, ptr %.cachedtype, align 8, !dbg !1071
  br label %24, !dbg !1071

cache_hit:                                        ; preds = %assert_ok23
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1071
  br label %24, !dbg !1071

24:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %23, %cache_miss ], !dbg !1071
  %25 = icmp eq ptr %fn_phi, null, !dbg !1071
  br i1 %25, label %missing_function, label %match, !dbg !1071

missing_function:                                 ; preds = %24
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg28, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 86) #5, !dbg !1084
  unreachable, !dbg !1084

match:                                            ; preds = %24
  %27 = load ptr, ptr %allocator6, align 8
  %28 = call i64 %fn_phi(ptr %retparam, ptr %27, i64 %12, i32 0, i64 0), !dbg !1084
  %not_err = icmp eq i64 %28, 0, !dbg !1084
  %29 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1084
  br i1 %29, label %after_check, label %assign_optional, !dbg !1084

assign_optional:                                  ; preds = %match
  store i64 %28, ptr %error_var, align 8, !dbg !1084
  br label %panic_block, !dbg !1084

after_check:                                      ; preds = %match
  %30 = load ptr, ptr %retparam, align 8, !dbg !1084
  store ptr %30, ptr %blockret, align 8, !dbg !1084
  br label %expr_block.exit, !dbg !1084

expr_block.exit:                                  ; preds = %after_check, %if.then8
  %31 = load ptr, ptr %blockret, align 8, !dbg !1084
  store ptr %31, ptr %taddr, align 8
  %32 = load ptr, ptr %taddr, align 8
  %33 = load i64, ptr %elements5, align 8, !dbg !1078
  %add = add i64 0, %33, !dbg !1078
  %gt = icmp ugt i64 0, %add, !dbg !1078
  %sub29 = sub i64 %add, 0, !dbg !1078
  %34 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !1078
  br i1 %34, label %panic30, label %checkok36, !dbg !1078

checkok36:                                        ; preds = %expr_block.exit
  %size37 = sub i64 %add, 0, !dbg !1078
  %35 = insertvalue %"char[][]" undef, ptr %32, 0, !dbg !1078
  %36 = insertvalue %"char[][]" %35, i64 %size37, 1, !dbg !1078
  br label %noerr_block, !dbg !1078

panic_block:                                      ; preds = %assign_optional
  %37 = insertvalue %any undef, ptr %error_var, 0, !dbg !1078
  %38 = insertvalue %any %37, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1078
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg40, align 8
  store %any %38, ptr %varargslots41, align 16
  %39 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp42" = insertvalue %"any[]" %39, i64 1, 1
  store %"any[]" %"$$temp42", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 287, ptr align 8 %indirectarg43) #5, !dbg !1080
  unreachable, !dbg !1080

noerr_block:                                      ; preds = %checkok36
  store %"char[][]" %36, ptr %list, align 8, !dbg !1080
    #dbg_declare(ptr %index, !1088, !DIExpression(), !1089)
  store i64 0, ptr %index, align 8, !dbg !1089
  %40 = load ptr, ptr %self, align 8, !dbg !1090
  %checknull = icmp eq ptr %40, null, !dbg !1090
  %41 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1090
  br i1 %41, label %panic44, label %checkok48, !dbg !1090

checkok48:                                        ; preds = %noerr_block
  %42 = ptrtoint ptr %40 to i64, !dbg !1090
  %43 = urem i64 %42, 8, !dbg !1090
  %44 = icmp ne i64 %43, 0, !dbg !1090
  %45 = call i1 @llvm.expect.i1(i1 %44, i1 false), !dbg !1090
  br i1 %45, label %panic49, label %checkok59, !dbg !1090

checkok59:                                        ; preds = %checkok48
  %ptradd60 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !1090
  %46 = load i64, ptr %ptradd60, align 8, !dbg !1090
    #dbg_declare(ptr %.anon, !1092, !DIExpression(), !1090)
  store i64 0, ptr %.anon, align 8, !dbg !1090
  br label %loop.cond, !dbg !1090

loop.cond:                                        ; preds = %loop.exit, %checkok59
  %47 = load i64, ptr %.anon, align 8, !dbg !1090
  %lt61 = icmp ult i64 %47, %46, !dbg !1090
  br i1 %lt61, label %loop.body, label %loop.exit135, !dbg !1090

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry62, !1093, !DIExpression(), !1095)
  %checknull63 = icmp eq ptr %40, null, !dbg !1095
  %48 = call i1 @llvm.expect.i1(i1 %checknull63, i1 false), !dbg !1095
  br i1 %48, label %panic64, label %checkok68, !dbg !1095

checkok68:                                        ; preds = %loop.body
  %49 = ptrtoint ptr %40 to i64, !dbg !1095
  %50 = urem i64 %49, 8, !dbg !1095
  %51 = icmp ne i64 %50, 0, !dbg !1095
  %52 = call i1 @llvm.expect.i1(i1 %51, i1 false), !dbg !1095
  br i1 %52, label %panic69, label %checkok79, !dbg !1095

checkok79:                                        ; preds = %checkok68
  %ptradd80 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !1095
  %53 = load i64, ptr %ptradd80, align 8, !dbg !1095
  %54 = load ptr, ptr %40, align 8, !dbg !1095
  %55 = load i64, ptr %.anon, align 8, !dbg !1095
  %ge = icmp uge i64 %55, %53, !dbg !1095
  %56 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1095
  br i1 %56, label %panic81, label %checkok91, !dbg !1095

checkok91:                                        ; preds = %checkok79
  %ptroffset = getelementptr inbounds [8 x i8], ptr %54, i64 %55, !dbg !1095
  %57 = ptrtoint ptr %ptroffset to i64, !dbg !1095
  %58 = urem i64 %57, 8, !dbg !1095
  %59 = icmp ne i64 %58, 0, !dbg !1095
  %60 = call i1 @llvm.expect.i1(i1 %59, i1 false), !dbg !1095
  br i1 %60, label %panic92, label %checkok102, !dbg !1095

checkok102:                                       ; preds = %checkok91
  %61 = load ptr, ptr %ptroffset, align 8, !dbg !1095
  store ptr %61, ptr %entry62, align 8, !dbg !1095
  br label %loop.cond103, !dbg !1096

loop.cond103:                                     ; preds = %checkok133, %checkok102
  %62 = load ptr, ptr %entry62, align 8, !dbg !1098
  %i2b = icmp ne ptr %62, null, !dbg !1098
  br i1 %i2b, label %loop.body104, label %loop.exit, !dbg !1098

loop.body104:                                     ; preds = %loop.cond103
  %63 = load ptr, ptr %entry62, align 8, !dbg !1100
  %ptradd105 = getelementptr inbounds i8, ptr %63, i64 8, !dbg !1100
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg106, ptr align 8 %ptradd105, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg107, ptr align 8 %2, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %sretparam, ptr align 8 %indirectarg106, ptr align 8 %indirectarg107), !dbg !1100
  %ptradd108 = getelementptr inbounds i8, ptr %list, i64 8, !dbg !1100
  %64 = load i64, ptr %ptradd108, align 8, !dbg !1100
  %65 = load ptr, ptr %list, align 8, !dbg !1100
  %66 = load i64, ptr %index, align 8, !dbg !1100
  %add109 = add i64 %66, 1, !dbg !1100
  store i64 %add109, ptr %index, align 8, !dbg !1100
  %ge110 = icmp uge i64 %66, %64, !dbg !1100
  %67 = call i1 @llvm.expect.i1(i1 %ge110, i1 false), !dbg !1100
  br i1 %67, label %panic111, label %checkok121, !dbg !1100

checkok121:                                       ; preds = %loop.body104
  %ptroffset122 = getelementptr inbounds [16 x i8], ptr %65, i64 %66, !dbg !1100
  %68 = ptrtoint ptr %ptroffset122 to i64, !dbg !1100
  %69 = urem i64 %68, 8, !dbg !1100
  %70 = icmp ne i64 %69, 0, !dbg !1100
  %71 = call i1 @llvm.expect.i1(i1 %70, i1 false), !dbg !1100
  br i1 %71, label %panic123, label %checkok133, !dbg !1100

checkok133:                                       ; preds = %checkok121
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptroffset122, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1100
  %72 = load ptr, ptr %entry62, align 8, !dbg !1102
  %ptradd134 = getelementptr inbounds i8, ptr %72, i64 32, !dbg !1102
  %73 = load ptr, ptr %ptradd134, align 8, !dbg !1102
  store ptr %73, ptr %entry62, align 8, !dbg !1102
  br label %loop.cond103, !dbg !1102

loop.exit:                                        ; preds = %loop.cond103
  %74 = load i64, ptr %.anon, align 8, !dbg !1090
  %addnuw = add nuw i64 %74, 1, !dbg !1090
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1090
  br label %loop.cond, !dbg !1090

loop.exit135:                                     ; preds = %loop.cond
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %list, i32 16, i1 false), !dbg !1103
  ret void, !dbg !1103

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg2, align 8
  %75 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %75(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 293) #5, !dbg !1073
  unreachable, !dbg !1073

panic30:                                          ; preds = %expr_block.exit
  store i64 %sub29, ptr %taddr31, align 8
  %76 = insertvalue %any undef, ptr %taddr31, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg34, align 8
  store %any %77, ptr %varargslots, align 16
  %78 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %78, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg35, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 304, ptr align 8 %indirectarg35) #5, !dbg !1078
  unreachable, !dbg !1078

panic44:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.47, i64 51 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg47, align 8
  %79 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %79(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 299) #5, !dbg !1090
  unreachable, !dbg !1090

panic49:                                          ; preds = %checkok48
  store i64 8, ptr %taddr50, align 8
  %80 = insertvalue %any undef, ptr %taddr50, 0
  %81 = insertvalue %any %80, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %43, ptr %taddr51, align 8
  %82 = insertvalue %any undef, ptr %taddr51, 0
  %83 = insertvalue %any %82, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg54, align 8
  store %any %81, ptr %varargslots55, align 16
  %ptradd56 = getelementptr inbounds i8, ptr %varargslots55, i64 16
  store %any %83, ptr %ptradd56, align 16
  %84 = insertvalue %"any[]" undef, ptr %varargslots55, 0
  %"$$temp57" = insertvalue %"any[]" %84, i64 2, 1
  store %"any[]" %"$$temp57", ptr %indirectarg58, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 299, ptr align 8 %indirectarg58) #5, !dbg !1090
  unreachable, !dbg !1090

panic64:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.47, i64 51 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg67, align 8
  %85 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %85(ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, i32 299) #5, !dbg !1095
  unreachable, !dbg !1095

panic69:                                          ; preds = %checkok68
  store i64 8, ptr %taddr70, align 8
  %86 = insertvalue %any undef, ptr %taddr70, 0
  %87 = insertvalue %any %86, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %50, ptr %taddr71, align 8
  %88 = insertvalue %any undef, ptr %taddr71, 0
  %89 = insertvalue %any %88, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg74, align 8
  store %any %87, ptr %varargslots75, align 16
  %ptradd76 = getelementptr inbounds i8, ptr %varargslots75, i64 16
  store %any %89, ptr %ptradd76, align 16
  %90 = insertvalue %"any[]" undef, ptr %varargslots75, 0
  %"$$temp77" = insertvalue %"any[]" %90, i64 2, 1
  store %"any[]" %"$$temp77", ptr %indirectarg78, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, i32 299, ptr align 8 %indirectarg78) #5, !dbg !1095
  unreachable, !dbg !1095

panic81:                                          ; preds = %checkok79
  store i64 %53, ptr %taddr82, align 8
  %91 = insertvalue %any undef, ptr %taddr82, 0
  %92 = insertvalue %any %91, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %55, ptr %taddr83, align 8
  %93 = insertvalue %any undef, ptr %taddr83, 0
  %94 = insertvalue %any %93, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg86, align 8
  store %any %92, ptr %varargslots87, align 16
  %ptradd88 = getelementptr inbounds i8, ptr %varargslots87, i64 16
  store %any %94, ptr %ptradd88, align 16
  %95 = insertvalue %"any[]" undef, ptr %varargslots87, 0
  %"$$temp89" = insertvalue %"any[]" %95, i64 2, 1
  store %"any[]" %"$$temp89", ptr %indirectarg90, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 299, ptr align 8 %indirectarg90) #5, !dbg !1095
  unreachable, !dbg !1095

panic92:                                          ; preds = %checkok91
  store i64 8, ptr %taddr93, align 8
  %96 = insertvalue %any undef, ptr %taddr93, 0
  %97 = insertvalue %any %96, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %58, ptr %taddr94, align 8
  %98 = insertvalue %any undef, ptr %taddr94, 0
  %99 = insertvalue %any %98, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg97, align 8
  store %any %97, ptr %varargslots98, align 16
  %ptradd99 = getelementptr inbounds i8, ptr %varargslots98, i64 16
  store %any %99, ptr %ptradd99, align 16
  %100 = insertvalue %"any[]" undef, ptr %varargslots98, 0
  %"$$temp100" = insertvalue %"any[]" %100, i64 2, 1
  store %"any[]" %"$$temp100", ptr %indirectarg101, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 299, ptr align 8 %indirectarg101) #5, !dbg !1095
  unreachable, !dbg !1095

panic111:                                         ; preds = %loop.body104
  store i64 %64, ptr %taddr112, align 8
  %101 = insertvalue %any undef, ptr %taddr112, 0
  %102 = insertvalue %any %101, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %66, ptr %taddr113, align 8
  %103 = insertvalue %any undef, ptr %taddr113, 0
  %104 = insertvalue %any %103, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg115, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg116, align 8
  store %any %102, ptr %varargslots117, align 16
  %ptradd118 = getelementptr inbounds i8, ptr %varargslots117, i64 16
  store %any %104, ptr %ptradd118, align 16
  %105 = insertvalue %"any[]" undef, ptr %varargslots117, 0
  %"$$temp119" = insertvalue %"any[]" %105, i64 2, 1
  store %"any[]" %"$$temp119", ptr %indirectarg120, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, ptr align 8 %indirectarg116, i32 304, ptr align 8 %indirectarg120) #5, !dbg !1100
  unreachable, !dbg !1100

panic123:                                         ; preds = %checkok121
  store i64 8, ptr %taddr124, align 8
  %106 = insertvalue %any undef, ptr %taddr124, 0
  %107 = insertvalue %any %106, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %69, ptr %taddr125, align 8
  %108 = insertvalue %any undef, ptr %taddr125, 0
  %109 = insertvalue %any %108, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg126, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg128, align 8
  store %any %107, ptr %varargslots129, align 16
  %ptradd130 = getelementptr inbounds i8, ptr %varargslots129, i64 16
  store %any %109, ptr %ptradd130, align 16
  %110 = insertvalue %"any[]" undef, ptr %varargslots129, 0
  %"$$temp131" = insertvalue %"any[]" %110, i64 2, 1
  store %"any[]" %"$$temp131", ptr %indirectarg132, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg126, ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, i32 304, ptr align 8 %indirectarg132) #5, !dbg !1100
  unreachable, !dbg !1100
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.tvalues"(ptr noalias sret(%"MenuItem*[]") align 8 %0, ptr %1) #0 comdat !dbg !1104 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %sretparam = alloca %"MenuItem*[]", align 8
  %indirectarg3 = alloca %any, align 8
  %2 = icmp eq ptr %1, null, !dbg !1107
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1107
  br i1 %3, label %panic, label %checkok, !dbg !1107

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !1108, !DIExpression(), !1109)
  %4 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1110
  %5 = load ptr, ptr %map, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %4, i32 16, i1 false)
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.values"(ptr sret(%"MenuItem*[]") align 8 %sretparam, ptr %5, ptr align 8 %indirectarg3) #6, !dbg !1110
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1110
  ret void, !dbg !1110

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.48, i64 7 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 335) #5, !dbg !1109
  unreachable, !dbg !1109
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.values"(ptr noalias sret(%"MenuItem*[]") align 8 %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1111 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %list = alloca %"MenuItem*[]", align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator4 = alloca %any, align 8
  %elements5 = alloca i64, align 8
  %allocator6 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr31 = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg35 = alloca %"any[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [1 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %index = alloca i64, align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %taddr50 = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots55 = alloca [2 x %any], align 16
  %indirectarg58 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %entry62 = alloca ptr, align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %taddr70 = alloca i64, align 8
  %taddr71 = alloca i64, align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %varargslots75 = alloca [2 x %any], align 16
  %indirectarg78 = alloca %"any[]", align 8
  %taddr82 = alloca i64, align 8
  %taddr83 = alloca i64, align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %varargslots87 = alloca [2 x %any], align 16
  %indirectarg90 = alloca %"any[]", align 8
  %taddr93 = alloca i64, align 8
  %taddr94 = alloca i64, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %varargslots98 = alloca [2 x %any], align 16
  %indirectarg101 = alloca %"any[]", align 8
  %taddr110 = alloca i64, align 8
  %taddr111 = alloca i64, align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg114 = alloca %"char[]", align 8
  %varargslots115 = alloca [2 x %any], align 16
  %indirectarg118 = alloca %"any[]", align 8
  %taddr122 = alloca i64, align 8
  %taddr123 = alloca i64, align 8
  %indirectarg124 = alloca %"char[]", align 8
  %indirectarg125 = alloca %"char[]", align 8
  %indirectarg126 = alloca %"char[]", align 8
  %varargslots127 = alloca [2 x %any], align 16
  %indirectarg130 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1114
  %3 = icmp eq ptr %1, null, !dbg !1114
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1114
  br i1 %4, label %panic, label %checkok, !dbg !1114

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1115, !DIExpression(), !1116)
    #dbg_declare(ptr %2, !1117, !DIExpression(), !1116)
  %5 = load ptr, ptr %self, align 8, !dbg !1118
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !1118
  %6 = load i32, ptr %ptradd, align 8, !dbg !1118
  %i2nb = icmp eq i32 %6, 0, !dbg !1118
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1118

if.then:                                          ; preds = %checkok
  store %"MenuItem*[]" zeroinitializer, ptr %0, align 8, !dbg !1118
  ret void, !dbg !1118

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %list, !1119, !DIExpression(), !1120)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %2, i32 16, i1 false)
  %7 = load ptr, ptr %self, align 8, !dbg !1120
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 32, !dbg !1120
  %8 = load i32, ptr %ptradd3, align 8, !dbg !1120
  %zext = zext i32 %8 to i64, !dbg !1120
  store i64 %zext, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator4, ptr align 8 %allocator, i32 16, i1 false)
  %9 = load i64, ptr %elements, align 8
  store i64 %9, ptr %elements5, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator6, ptr align 8 %allocator4, i32 16, i1 false)
  %10 = load i64, ptr %elements5, align 8, !dbg !1121
  %mul = mul i64 8, %10, !dbg !1121
  store i64 %mul, ptr %size, align 8
  %11 = load i64, ptr %size, align 8, !dbg !1125
  %i2nb7 = icmp eq i64 %11, 0, !dbg !1125
  br i1 %i2nb7, label %if.then8, label %if.exit9, !dbg !1125

if.then8:                                         ; preds = %if.exit
  store ptr null, ptr %blockret, align 8, !dbg !1125
  br label %expr_block.exit, !dbg !1125

if.exit9:                                         ; preds = %if.exit
  %12 = load i64, ptr %size, align 8, !dbg !1127
  br i1 true, label %or.phi, label %or.rhs, !dbg !1128

or.rhs:                                           ; preds = %if.exit9
  store i64 0, ptr %x, align 8
  %13 = load i64, ptr %x, align 8, !dbg !1129
  %neq = icmp ne i64 0, %13, !dbg !1129
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1129

and.rhs:                                          ; preds = %or.rhs
  %14 = load i64, ptr %x, align 8, !dbg !1129
  %15 = load i64, ptr %x, align 8, !dbg !1129
  %sub = sub i64 %15, 1, !dbg !1129
  %and = and i64 %14, %sub, !dbg !1129
  %eq = icmp eq i64 %and, 0, !dbg !1129
  br label %and.phi, !dbg !1129

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1129
  br label %or.phi, !dbg !1129

or.phi:                                           ; preds = %and.phi, %if.exit9
  %val10 = phi i1 [ true, %if.exit9 ], [ %val, %and.phi ], !dbg !1129
  br i1 %val10, label %assert_ok, label %assert_fail, !dbg !1129

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg13, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 86) #5, !dbg !1127
  unreachable, !dbg !1127

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok18, label %assert_fail14, !dbg !1127

assert_fail14:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg17, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 86) #5, !dbg !1127
  unreachable, !dbg !1127

assert_ok18:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %12, !dbg !1127
  br i1 %lt, label %assert_ok23, label %assert_fail19, !dbg !1127

assert_fail19:                                    ; preds = %assert_ok18
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg22, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 86) #5, !dbg !1127
  unreachable, !dbg !1127

assert_ok23:                                      ; preds = %assert_ok18
  %ptradd24 = getelementptr inbounds i8, ptr %allocator6, i64 8, !dbg !1127
  %19 = load i64, ptr %ptradd24, align 8, !dbg !1127
  %20 = inttoptr i64 %19 to ptr, !dbg !1127
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1114
  %21 = icmp eq ptr %20, %type, !dbg !1114
  br i1 %21, label %cache_hit, label %cache_miss, !dbg !1114

cache_miss:                                       ; preds = %assert_ok23
  %ptradd25 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !1114
  %22 = load ptr, ptr %ptradd25, align 8, !dbg !1114
  %23 = call ptr @.dyn_search(ptr %22, ptr @"$sel.acquire"), !dbg !1114
  store ptr %23, ptr %.inlinecache, align 8, !dbg !1114
  store ptr %20, ptr %.cachedtype, align 8, !dbg !1114
  br label %24, !dbg !1114

cache_hit:                                        ; preds = %assert_ok23
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1114
  br label %24, !dbg !1114

24:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %23, %cache_miss ], !dbg !1114
  %25 = icmp eq ptr %fn_phi, null, !dbg !1114
  br i1 %25, label %missing_function, label %match, !dbg !1114

missing_function:                                 ; preds = %24
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg28, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 86) #5, !dbg !1127
  unreachable, !dbg !1127

match:                                            ; preds = %24
  %27 = load ptr, ptr %allocator6, align 8
  %28 = call i64 %fn_phi(ptr %retparam, ptr %27, i64 %12, i32 0, i64 0), !dbg !1127
  %not_err = icmp eq i64 %28, 0, !dbg !1127
  %29 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1127
  br i1 %29, label %after_check, label %assign_optional, !dbg !1127

assign_optional:                                  ; preds = %match
  store i64 %28, ptr %error_var, align 8, !dbg !1127
  br label %panic_block, !dbg !1127

after_check:                                      ; preds = %match
  %30 = load ptr, ptr %retparam, align 8, !dbg !1127
  store ptr %30, ptr %blockret, align 8, !dbg !1127
  br label %expr_block.exit, !dbg !1127

expr_block.exit:                                  ; preds = %after_check, %if.then8
  %31 = load ptr, ptr %blockret, align 8, !dbg !1127
  store ptr %31, ptr %taddr, align 8
  %32 = load ptr, ptr %taddr, align 8
  %33 = load i64, ptr %elements5, align 8, !dbg !1121
  %add = add i64 0, %33, !dbg !1121
  %gt = icmp ugt i64 0, %add, !dbg !1121
  %sub29 = sub i64 %add, 0, !dbg !1121
  %34 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !1121
  br i1 %34, label %panic30, label %checkok36, !dbg !1121

checkok36:                                        ; preds = %expr_block.exit
  %size37 = sub i64 %add, 0, !dbg !1121
  %35 = insertvalue %"MenuItem*[]" undef, ptr %32, 0, !dbg !1121
  %36 = insertvalue %"MenuItem*[]" %35, i64 %size37, 1, !dbg !1121
  br label %noerr_block, !dbg !1121

panic_block:                                      ; preds = %assign_optional
  %37 = insertvalue %any undef, ptr %error_var, 0, !dbg !1121
  %38 = insertvalue %any %37, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1121
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg40, align 8
  store %any %38, ptr %varargslots41, align 16
  %39 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp42" = insertvalue %"any[]" %39, i64 1, 1
  store %"any[]" %"$$temp42", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 287, ptr align 8 %indirectarg43) #5, !dbg !1123
  unreachable, !dbg !1123

noerr_block:                                      ; preds = %checkok36
  store %"MenuItem*[]" %36, ptr %list, align 8, !dbg !1123
    #dbg_declare(ptr %index, !1131, !DIExpression(), !1132)
  store i64 0, ptr %index, align 8, !dbg !1132
  %40 = load ptr, ptr %self, align 8, !dbg !1133
  %checknull = icmp eq ptr %40, null, !dbg !1133
  %41 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1133
  br i1 %41, label %panic44, label %checkok48, !dbg !1133

checkok48:                                        ; preds = %noerr_block
  %42 = ptrtoint ptr %40 to i64, !dbg !1133
  %43 = urem i64 %42, 8, !dbg !1133
  %44 = icmp ne i64 %43, 0, !dbg !1133
  %45 = call i1 @llvm.expect.i1(i1 %44, i1 false), !dbg !1133
  br i1 %45, label %panic49, label %checkok59, !dbg !1133

checkok59:                                        ; preds = %checkok48
  %ptradd60 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !1133
  %46 = load i64, ptr %ptradd60, align 8, !dbg !1133
    #dbg_declare(ptr %.anon, !1135, !DIExpression(), !1133)
  store i64 0, ptr %.anon, align 8, !dbg !1133
  br label %loop.cond, !dbg !1133

loop.cond:                                        ; preds = %loop.exit, %checkok59
  %47 = load i64, ptr %.anon, align 8, !dbg !1133
  %lt61 = icmp ult i64 %47, %46, !dbg !1133
  br i1 %lt61, label %loop.body, label %loop.exit133, !dbg !1133

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry62, !1136, !DIExpression(), !1138)
  %checknull63 = icmp eq ptr %40, null, !dbg !1138
  %48 = call i1 @llvm.expect.i1(i1 %checknull63, i1 false), !dbg !1138
  br i1 %48, label %panic64, label %checkok68, !dbg !1138

checkok68:                                        ; preds = %loop.body
  %49 = ptrtoint ptr %40 to i64, !dbg !1138
  %50 = urem i64 %49, 8, !dbg !1138
  %51 = icmp ne i64 %50, 0, !dbg !1138
  %52 = call i1 @llvm.expect.i1(i1 %51, i1 false), !dbg !1138
  br i1 %52, label %panic69, label %checkok79, !dbg !1138

checkok79:                                        ; preds = %checkok68
  %ptradd80 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !1138
  %53 = load i64, ptr %ptradd80, align 8, !dbg !1138
  %54 = load ptr, ptr %40, align 8, !dbg !1138
  %55 = load i64, ptr %.anon, align 8, !dbg !1138
  %ge = icmp uge i64 %55, %53, !dbg !1138
  %56 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1138
  br i1 %56, label %panic81, label %checkok91, !dbg !1138

checkok91:                                        ; preds = %checkok79
  %ptroffset = getelementptr inbounds [8 x i8], ptr %54, i64 %55, !dbg !1138
  %57 = ptrtoint ptr %ptroffset to i64, !dbg !1138
  %58 = urem i64 %57, 8, !dbg !1138
  %59 = icmp ne i64 %58, 0, !dbg !1138
  %60 = call i1 @llvm.expect.i1(i1 %59, i1 false), !dbg !1138
  br i1 %60, label %panic92, label %checkok102, !dbg !1138

checkok102:                                       ; preds = %checkok91
  %61 = load ptr, ptr %ptroffset, align 8, !dbg !1138
  store ptr %61, ptr %entry62, align 8, !dbg !1138
  br label %loop.cond103, !dbg !1139

loop.cond103:                                     ; preds = %checkok131, %checkok102
  %62 = load ptr, ptr %entry62, align 8, !dbg !1141
  %i2b = icmp ne ptr %62, null, !dbg !1141
  br i1 %i2b, label %loop.body104, label %loop.exit, !dbg !1141

loop.body104:                                     ; preds = %loop.cond103
  %63 = load ptr, ptr %entry62, align 8, !dbg !1143
  %ptradd105 = getelementptr inbounds i8, ptr %63, i64 24, !dbg !1143
  %ptradd106 = getelementptr inbounds i8, ptr %list, i64 8, !dbg !1143
  %64 = load i64, ptr %ptradd106, align 8, !dbg !1143
  %65 = load ptr, ptr %list, align 8, !dbg !1143
  %66 = load i64, ptr %index, align 8, !dbg !1143
  %add107 = add i64 %66, 1, !dbg !1143
  store i64 %add107, ptr %index, align 8, !dbg !1143
  %ge108 = icmp uge i64 %66, %64, !dbg !1143
  %67 = call i1 @llvm.expect.i1(i1 %ge108, i1 false), !dbg !1143
  br i1 %67, label %panic109, label %checkok119, !dbg !1143

checkok119:                                       ; preds = %loop.body104
  %ptroffset120 = getelementptr inbounds [8 x i8], ptr %65, i64 %66, !dbg !1143
  %68 = ptrtoint ptr %ptroffset120 to i64, !dbg !1143
  %69 = urem i64 %68, 8, !dbg !1143
  %70 = icmp ne i64 %69, 0, !dbg !1143
  %71 = call i1 @llvm.expect.i1(i1 %70, i1 false), !dbg !1143
  br i1 %71, label %panic121, label %checkok131, !dbg !1143

checkok131:                                       ; preds = %checkok119
  %72 = load ptr, ptr %ptradd105, align 8, !dbg !1143
  store ptr %72, ptr %ptroffset120, align 8, !dbg !1143
  %73 = load ptr, ptr %entry62, align 8, !dbg !1145
  %ptradd132 = getelementptr inbounds i8, ptr %73, i64 32, !dbg !1145
  %74 = load ptr, ptr %ptradd132, align 8, !dbg !1145
  store ptr %74, ptr %entry62, align 8, !dbg !1145
  br label %loop.cond103, !dbg !1145

loop.exit:                                        ; preds = %loop.cond103
  %75 = load i64, ptr %.anon, align 8, !dbg !1133
  %addnuw = add nuw i64 %75, 1, !dbg !1133
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1133
  br label %loop.cond, !dbg !1133

loop.exit133:                                     ; preds = %loop.cond
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %list, i32 16, i1 false), !dbg !1146
  ret void, !dbg !1146

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg2, align 8
  %76 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %76(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 340) #5, !dbg !1116
  unreachable, !dbg !1116

panic30:                                          ; preds = %expr_block.exit
  store i64 %sub29, ptr %taddr31, align 8
  %77 = insertvalue %any undef, ptr %taddr31, 0
  %78 = insertvalue %any %77, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg34, align 8
  store %any %78, ptr %varargslots, align 16
  %79 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %79, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg35, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 304, ptr align 8 %indirectarg35) #5, !dbg !1121
  unreachable, !dbg !1121

panic44:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.47, i64 51 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg47, align 8
  %80 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %80(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 345) #5, !dbg !1133
  unreachable, !dbg !1133

panic49:                                          ; preds = %checkok48
  store i64 8, ptr %taddr50, align 8
  %81 = insertvalue %any undef, ptr %taddr50, 0
  %82 = insertvalue %any %81, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %43, ptr %taddr51, align 8
  %83 = insertvalue %any undef, ptr %taddr51, 0
  %84 = insertvalue %any %83, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg54, align 8
  store %any %82, ptr %varargslots55, align 16
  %ptradd56 = getelementptr inbounds i8, ptr %varargslots55, i64 16
  store %any %84, ptr %ptradd56, align 16
  %85 = insertvalue %"any[]" undef, ptr %varargslots55, 0
  %"$$temp57" = insertvalue %"any[]" %85, i64 2, 1
  store %"any[]" %"$$temp57", ptr %indirectarg58, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 345, ptr align 8 %indirectarg58) #5, !dbg !1133
  unreachable, !dbg !1133

panic64:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.47, i64 51 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg67, align 8
  %86 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %86(ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, i32 345) #5, !dbg !1138
  unreachable, !dbg !1138

panic69:                                          ; preds = %checkok68
  store i64 8, ptr %taddr70, align 8
  %87 = insertvalue %any undef, ptr %taddr70, 0
  %88 = insertvalue %any %87, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %50, ptr %taddr71, align 8
  %89 = insertvalue %any undef, ptr %taddr71, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg74, align 8
  store %any %88, ptr %varargslots75, align 16
  %ptradd76 = getelementptr inbounds i8, ptr %varargslots75, i64 16
  store %any %90, ptr %ptradd76, align 16
  %91 = insertvalue %"any[]" undef, ptr %varargslots75, 0
  %"$$temp77" = insertvalue %"any[]" %91, i64 2, 1
  store %"any[]" %"$$temp77", ptr %indirectarg78, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, i32 345, ptr align 8 %indirectarg78) #5, !dbg !1138
  unreachable, !dbg !1138

panic81:                                          ; preds = %checkok79
  store i64 %53, ptr %taddr82, align 8
  %92 = insertvalue %any undef, ptr %taddr82, 0
  %93 = insertvalue %any %92, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %55, ptr %taddr83, align 8
  %94 = insertvalue %any undef, ptr %taddr83, 0
  %95 = insertvalue %any %94, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg86, align 8
  store %any %93, ptr %varargslots87, align 16
  %ptradd88 = getelementptr inbounds i8, ptr %varargslots87, i64 16
  store %any %95, ptr %ptradd88, align 16
  %96 = insertvalue %"any[]" undef, ptr %varargslots87, 0
  %"$$temp89" = insertvalue %"any[]" %96, i64 2, 1
  store %"any[]" %"$$temp89", ptr %indirectarg90, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 345, ptr align 8 %indirectarg90) #5, !dbg !1138
  unreachable, !dbg !1138

panic92:                                          ; preds = %checkok91
  store i64 8, ptr %taddr93, align 8
  %97 = insertvalue %any undef, ptr %taddr93, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %58, ptr %taddr94, align 8
  %99 = insertvalue %any undef, ptr %taddr94, 0
  %100 = insertvalue %any %99, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg97, align 8
  store %any %98, ptr %varargslots98, align 16
  %ptradd99 = getelementptr inbounds i8, ptr %varargslots98, i64 16
  store %any %100, ptr %ptradd99, align 16
  %101 = insertvalue %"any[]" undef, ptr %varargslots98, 0
  %"$$temp100" = insertvalue %"any[]" %101, i64 2, 1
  store %"any[]" %"$$temp100", ptr %indirectarg101, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 345, ptr align 8 %indirectarg101) #5, !dbg !1138
  unreachable, !dbg !1138

panic109:                                         ; preds = %loop.body104
  store i64 %64, ptr %taddr110, align 8
  %102 = insertvalue %any undef, ptr %taddr110, 0
  %103 = insertvalue %any %102, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %66, ptr %taddr111, align 8
  %104 = insertvalue %any undef, ptr %taddr111, 0
  %105 = insertvalue %any %104, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg113, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg114, align 8
  store %any %103, ptr %varargslots115, align 16
  %ptradd116 = getelementptr inbounds i8, ptr %varargslots115, i64 16
  store %any %105, ptr %ptradd116, align 16
  %106 = insertvalue %"any[]" undef, ptr %varargslots115, 0
  %"$$temp117" = insertvalue %"any[]" %106, i64 2, 1
  store %"any[]" %"$$temp117", ptr %indirectarg118, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, ptr align 8 %indirectarg114, i32 349, ptr align 8 %indirectarg118) #5, !dbg !1143
  unreachable, !dbg !1143

panic121:                                         ; preds = %checkok119
  store i64 8, ptr %taddr122, align 8
  %107 = insertvalue %any undef, ptr %taddr122, 0
  %108 = insertvalue %any %107, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %69, ptr %taddr123, align 8
  %109 = insertvalue %any undef, ptr %taddr123, 0
  %110 = insertvalue %any %109, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg124, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg125, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg126, align 8
  store %any %108, ptr %varargslots127, align 16
  %ptradd128 = getelementptr inbounds i8, ptr %varargslots127, i64 16
  store %any %110, ptr %ptradd128, align 16
  %111 = insertvalue %"any[]" undef, ptr %varargslots127, 0
  %"$$temp129" = insertvalue %"any[]" %111, i64 2, 1
  store %"any[]" %"$$temp129", ptr %indirectarg130, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg124, ptr align 8 %indirectarg125, ptr align 8 %indirectarg126, i32 349, ptr align 8 %indirectarg130) #5, !dbg !1143
  unreachable, !dbg !1143
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.iter"(ptr noalias sret(%HashMapIterator) align 8 %0, ptr %1) #0 comdat !dbg !1147 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %literal = alloca %HashMapIterator, align 8
  %2 = icmp eq ptr %1, null, !dbg !1156
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1156
  br i1 %3, label %panic, label %checkok, !dbg !1156

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1157, !DIExpression(), !1158)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %4 = load ptr, ptr %self, align 8, !dbg !1159
  store ptr %4, ptr %literal, align 8, !dbg !1159
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 12, !dbg !1159
  store i32 -1, ptr %ptradd, align 4, !dbg !1159
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !1159
  ret void, !dbg !1159

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.50, i64 4 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 370) #5, !dbg !1158
  unreachable, !dbg !1158
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.value_iter"(ptr noalias sret(%HashMapIterator) align 8 %0, ptr %1) #0 comdat !dbg !1160 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %literal = alloca %HashMapIterator, align 8
  %2 = icmp eq ptr %1, null, !dbg !1164
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1164
  br i1 %3, label %panic, label %checkok, !dbg !1164

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1165, !DIExpression(), !1166)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %4 = load ptr, ptr %self, align 8, !dbg !1167
  store ptr %4, ptr %literal, align 8, !dbg !1167
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 12, !dbg !1167
  store i32 -1, ptr %ptradd, align 4, !dbg !1167
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !1167
  ret void, !dbg !1167

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.51, i64 10 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 375) #5, !dbg !1166
  unreachable, !dbg !1166
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.key_iter"(ptr noalias sret(%HashMapIterator) align 8 %0, ptr %1) #0 comdat !dbg !1168 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %literal = alloca %HashMapIterator, align 8
  %2 = icmp eq ptr %1, null, !dbg !1172
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1172
  br i1 %3, label %panic, label %checkok, !dbg !1172

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1173, !DIExpression(), !1174)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %4 = load ptr, ptr %self, align 8, !dbg !1175
  store ptr %4, ptr %literal, align 8, !dbg !1175
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 12, !dbg !1175
  store i32 -1, ptr %ptradd, align 4, !dbg !1175
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !1175
  ret void, !dbg !1175

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.52, i64 8 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 380) #5, !dbg !1174
  unreachable, !dbg !1174
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.add_entry"(ptr %0, i32 %1, ptr align 8 %2, ptr %3, i32 %4) #0 !dbg !1176 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %value = alloca ptr, align 8
  %bucket_index = alloca i32, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %any, align 8
  %entry5 = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %val = alloca ptr, align 8
  %allocator7 = alloca %any, align 8
  %size = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator8 = alloca %any, align 8
  %size9 = alloca i64, align 8
  %blockret10 = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg34 = alloca %"any[]", align 8
  %.assign_list = alloca %Entry, align 8
  %taddr = alloca i64, align 8
  %taddr40 = alloca i64, align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %varargslots44 = alloca [2 x %any], align 16
  %indirectarg47 = alloca %"any[]", align 8
  %taddr50 = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots55 = alloca [2 x %any], align 16
  %indirectarg58 = alloca %"any[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %taddr66 = alloca i64, align 8
  %taddr67 = alloca i64, align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %varargslots71 = alloca [2 x %any], align 16
  %indirectarg74 = alloca %"any[]", align 8
  %taddr80 = alloca i64, align 8
  %taddr81 = alloca i64, align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %varargslots85 = alloca [2 x %any], align 16
  %indirectarg88 = alloca %"any[]", align 8
  %taddr92 = alloca i64, align 8
  %taddr93 = alloca i64, align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %varargslots97 = alloca [2 x %any], align 16
  %indirectarg100 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1179
  %5 = icmp eq ptr %0, null, !dbg !1179
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1179
  br i1 %6, label %panic, label %checkok, !dbg !1179

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1180, !DIExpression(), !1181)
  store i32 %1, ptr %hash, align 4
    #dbg_declare(ptr %hash, !1182, !DIExpression(), !1181)
    #dbg_declare(ptr %2, !1183, !DIExpression(), !1181)
  store ptr %3, ptr %value, align 8
    #dbg_declare(ptr %value, !1184, !DIExpression(), !1181)
  store i32 %4, ptr %bucket_index, align 4
    #dbg_declare(ptr %bucket_index, !1185, !DIExpression(), !1181)
  %7 = load ptr, ptr %map, align 8, !dbg !1186
  %ptradd = getelementptr inbounds i8, ptr %7, i64 16, !dbg !1186
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg4, ptr align 8 %ptradd, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %2, ptr align 8 %indirectarg3, ptr align 8 %indirectarg4), !dbg !1186
    #dbg_declare(ptr %entry5, !1187, !DIExpression(), !1188)
  %8 = load ptr, ptr %map, align 8, !dbg !1188
  %ptradd6 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !1188
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd6, i32 16, i1 false)
    #dbg_declare(ptr %val, !1189, !DIExpression(), !1191)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator7, ptr align 8 %allocator, i32 16, i1 false)
  store i64 40, ptr %size, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator8, ptr align 8 %allocator7, i32 16, i1 false)
  %9 = load i64, ptr %size, align 8
  store i64 %9, ptr %size9, align 8
  %10 = load i64, ptr %size9, align 8, !dbg !1192
  %i2nb = icmp eq i64 %10, 0, !dbg !1192
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1192

if.then:                                          ; preds = %checkok
  store ptr null, ptr %blockret10, align 8, !dbg !1192
  br label %expr_block.exit, !dbg !1192

if.exit:                                          ; preds = %checkok
  %11 = load i64, ptr %size9, align 8, !dbg !1196
  br i1 true, label %or.phi, label %or.rhs, !dbg !1197

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x, align 8
  %12 = load i64, ptr %x, align 8, !dbg !1198
  %neq = icmp ne i64 0, %12, !dbg !1198
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1198

and.rhs:                                          ; preds = %or.rhs
  %13 = load i64, ptr %x, align 8, !dbg !1198
  %14 = load i64, ptr %x, align 8, !dbg !1198
  %sub = sub i64 %14, 1, !dbg !1198
  %and = and i64 %13, %sub, !dbg !1198
  %eq = icmp eq i64 %and, 0, !dbg !1198
  br label %and.phi, !dbg !1198

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val11 = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1198
  br label %or.phi, !dbg !1198

or.phi:                                           ; preds = %and.phi, %if.exit
  %val12 = phi i1 [ true, %if.exit ], [ %val11, %and.phi ], !dbg !1198
  br i1 %val12, label %assert_ok, label %assert_fail, !dbg !1198

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg15, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 86) #5, !dbg !1196
  unreachable, !dbg !1196

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok20, label %assert_fail16, !dbg !1196

assert_fail16:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg19, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 86) #5, !dbg !1196
  unreachable, !dbg !1196

assert_ok20:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %11, !dbg !1196
  br i1 %lt, label %assert_ok25, label %assert_fail21, !dbg !1196

assert_fail21:                                    ; preds = %assert_ok20
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg24, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 86) #5, !dbg !1196
  unreachable, !dbg !1196

assert_ok25:                                      ; preds = %assert_ok20
  %ptradd26 = getelementptr inbounds i8, ptr %allocator8, i64 8, !dbg !1196
  %18 = load i64, ptr %ptradd26, align 8, !dbg !1196
  %19 = inttoptr i64 %18 to ptr, !dbg !1196
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1179
  %20 = icmp eq ptr %19, %type, !dbg !1179
  br i1 %20, label %cache_hit, label %cache_miss, !dbg !1179

cache_miss:                                       ; preds = %assert_ok25
  %ptradd27 = getelementptr inbounds i8, ptr %19, i64 16, !dbg !1179
  %21 = load ptr, ptr %ptradd27, align 8, !dbg !1179
  %22 = call ptr @.dyn_search(ptr %21, ptr @"$sel.acquire"), !dbg !1179
  store ptr %22, ptr %.inlinecache, align 8, !dbg !1179
  store ptr %19, ptr %.cachedtype, align 8, !dbg !1179
  br label %23, !dbg !1179

cache_hit:                                        ; preds = %assert_ok25
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1179
  br label %23, !dbg !1179

23:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %22, %cache_miss ], !dbg !1179
  %24 = icmp eq ptr %fn_phi, null, !dbg !1179
  br i1 %24, label %missing_function, label %match, !dbg !1179

missing_function:                                 ; preds = %23
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg30, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 86) #5, !dbg !1196
  unreachable, !dbg !1196

match:                                            ; preds = %23
  %26 = load ptr, ptr %allocator8, align 8
  %27 = call i64 %fn_phi(ptr %retparam, ptr %26, i64 %11, i32 0, i64 0), !dbg !1196
  %not_err = icmp eq i64 %27, 0, !dbg !1196
  %28 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1196
  br i1 %28, label %after_check, label %assign_optional, !dbg !1196

assign_optional:                                  ; preds = %match
  store i64 %27, ptr %error_var, align 8, !dbg !1196
  br label %panic_block, !dbg !1196

after_check:                                      ; preds = %match
  %29 = load ptr, ptr %retparam, align 8, !dbg !1196
  store ptr %29, ptr %blockret10, align 8, !dbg !1196
  br label %expr_block.exit, !dbg !1196

expr_block.exit:                                  ; preds = %after_check, %if.then
  br label %noerr_block, !dbg !1196

panic_block:                                      ; preds = %assign_optional
  %30 = insertvalue %any undef, ptr %error_var, 0, !dbg !1196
  %31 = insertvalue %any %30, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1196
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg33, align 8
  store %any %31, ptr %varargslots, align 16
  %32 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %32, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg34, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 75, ptr align 8 %indirectarg34) #5, !dbg !1194
  unreachable, !dbg !1194

noerr_block:                                      ; preds = %expr_block.exit
  %33 = load ptr, ptr %blockret10, align 8, !dbg !1194
  store ptr %33, ptr %val, align 8, !dbg !1194
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 40, i1 false)
  %34 = load i32, ptr %hash, align 4, !dbg !1200
  store i32 %34, ptr %.assign_list, align 8, !dbg !1200
  %ptradd35 = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !1200
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd35, ptr align 8 %2, i32 16, i1 false), !dbg !1200
  %ptradd36 = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !1200
  %35 = load ptr, ptr %value, align 8, !dbg !1200
  store ptr %35, ptr %ptradd36, align 8, !dbg !1200
  %ptradd37 = getelementptr inbounds i8, ptr %.assign_list, i64 32, !dbg !1200
  %36 = load ptr, ptr %map, align 8, !dbg !1200
  %ptradd38 = getelementptr inbounds i8, ptr %36, i64 8, !dbg !1200
  %37 = load i64, ptr %ptradd38, align 8, !dbg !1200
  %38 = load ptr, ptr %36, align 8, !dbg !1200
  %39 = load i32, ptr %bucket_index, align 4, !dbg !1200
  %zext = zext i32 %39 to i64, !dbg !1200
  %ge = icmp uge i64 %zext, %37, !dbg !1200
  %40 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1200
  br i1 %40, label %panic39, label %checkok48, !dbg !1200

checkok48:                                        ; preds = %noerr_block
  %ptroffset = getelementptr inbounds [8 x i8], ptr %38, i64 %zext, !dbg !1200
  %41 = ptrtoint ptr %ptroffset to i64, !dbg !1200
  %42 = urem i64 %41, 8, !dbg !1200
  %43 = icmp ne i64 %42, 0, !dbg !1200
  %44 = call i1 @llvm.expect.i1(i1 %43, i1 false), !dbg !1200
  br i1 %44, label %panic49, label %checkok59, !dbg !1200

checkok59:                                        ; preds = %checkok48
  %45 = load ptr, ptr %ptroffset, align 8, !dbg !1200
  store ptr %45, ptr %ptradd37, align 8, !dbg !1200
  %46 = load ptr, ptr %val, align 8, !dbg !1201
  %checknull = icmp eq ptr %46, null, !dbg !1201
  %47 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1201
  br i1 %47, label %panic60, label %checkok64, !dbg !1201

checkok64:                                        ; preds = %checkok59
  %48 = ptrtoint ptr %46 to i64, !dbg !1201
  %49 = urem i64 %48, 8, !dbg !1201
  %50 = icmp ne i64 %49, 0, !dbg !1201
  %51 = call i1 @llvm.expect.i1(i1 %50, i1 false), !dbg !1201
  br i1 %51, label %panic65, label %checkok75, !dbg !1201

checkok75:                                        ; preds = %checkok64
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %46, ptr align 8 %.assign_list, i32 40, i1 false), !dbg !1201
  %52 = load ptr, ptr %val, align 8, !dbg !1202
  store ptr %52, ptr %entry5, align 8, !dbg !1202
  %53 = load ptr, ptr %map, align 8, !dbg !1203
  %ptradd76 = getelementptr inbounds i8, ptr %53, i64 8, !dbg !1203
  %54 = load i64, ptr %ptradd76, align 8, !dbg !1203
  %55 = load ptr, ptr %53, align 8, !dbg !1203
  %56 = load i32, ptr %bucket_index, align 4, !dbg !1203
  %zext77 = zext i32 %56 to i64, !dbg !1203
  %ge78 = icmp uge i64 %zext77, %54, !dbg !1203
  %57 = call i1 @llvm.expect.i1(i1 %ge78, i1 false), !dbg !1203
  br i1 %57, label %panic79, label %checkok89, !dbg !1203

checkok89:                                        ; preds = %checkok75
  %ptroffset90 = getelementptr inbounds [8 x i8], ptr %55, i64 %zext77, !dbg !1203
  %58 = ptrtoint ptr %ptroffset90 to i64, !dbg !1203
  %59 = urem i64 %58, 8, !dbg !1203
  %60 = icmp ne i64 %59, 0, !dbg !1203
  %61 = call i1 @llvm.expect.i1(i1 %60, i1 false), !dbg !1203
  br i1 %61, label %panic91, label %checkok101, !dbg !1203

checkok101:                                       ; preds = %checkok89
  %62 = load ptr, ptr %entry5, align 8, !dbg !1203
  store ptr %62, ptr %ptroffset90, align 8, !dbg !1203
  %63 = load ptr, ptr %map, align 8, !dbg !1204
  %ptradd102 = getelementptr inbounds i8, ptr %63, i64 32, !dbg !1204
  %64 = load i32, ptr %ptradd102, align 8, !dbg !1204
  %add = add i32 %64, 1, !dbg !1204
  store i32 %add, ptr %ptradd102, align 8, !dbg !1204
  %65 = load ptr, ptr %map, align 8, !dbg !1204
  %ptradd103 = getelementptr inbounds i8, ptr %65, i64 36, !dbg !1204
  %66 = load i32, ptr %ptradd103, align 4, !dbg !1204
  %ge104 = icmp uge i32 %64, %66, !dbg !1204
  br i1 %ge104, label %if.then105, label %if.exit107, !dbg !1204

if.then105:                                       ; preds = %checkok101
  %67 = load ptr, ptr %map, align 8, !dbg !1205
  %ptradd106 = getelementptr inbounds i8, ptr %67, i64 8, !dbg !1205
  %68 = load i64, ptr %ptradd106, align 8, !dbg !1205
  %mul = mul i64 %68, 2, !dbg !1205
  %trunc = trunc i64 %mul to i32, !dbg !1205
  %69 = load ptr, ptr %map, align 8, !dbg !1205
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.resize"(ptr %69, i32 %trunc), !dbg !1205
  br label %if.exit107, !dbg !1205

if.exit107:                                       ; preds = %if.then105, %checkok101
  ret void, !dbg !1205

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg2, align 8
  %70 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %70(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 387) #5, !dbg !1181
  unreachable, !dbg !1181

panic39:                                          ; preds = %noerr_block
  store i64 %37, ptr %taddr, align 8
  %71 = insertvalue %any undef, ptr %taddr, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr40, align 8
  %73 = insertvalue %any undef, ptr %taddr40, 0
  %74 = insertvalue %any %73, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg43, align 8
  store %any %72, ptr %varargslots44, align 16
  %ptradd45 = getelementptr inbounds i8, ptr %varargslots44, i64 16
  store %any %74, ptr %ptradd45, align 16
  %75 = insertvalue %"any[]" undef, ptr %varargslots44, 0
  %"$$temp46" = insertvalue %"any[]" %75, i64 2, 1
  store %"any[]" %"$$temp46", ptr %indirectarg47, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 392, ptr align 8 %indirectarg47) #5, !dbg !1200
  unreachable, !dbg !1200

panic49:                                          ; preds = %checkok48
  store i64 8, ptr %taddr50, align 8
  %76 = insertvalue %any undef, ptr %taddr50, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr51, align 8
  %78 = insertvalue %any undef, ptr %taddr51, 0
  %79 = insertvalue %any %78, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg54, align 8
  store %any %77, ptr %varargslots55, align 16
  %ptradd56 = getelementptr inbounds i8, ptr %varargslots55, i64 16
  store %any %79, ptr %ptradd56, align 16
  %80 = insertvalue %"any[]" undef, ptr %varargslots55, 0
  %"$$temp57" = insertvalue %"any[]" %80, i64 2, 1
  store %"any[]" %"$$temp57", ptr %indirectarg58, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 392, ptr align 8 %indirectarg58) #5, !dbg !1200
  unreachable, !dbg !1200

panic60:                                          ; preds = %checkok59
  store %"char[]" { ptr @.panic_msg.54, i64 44 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg63, align 8
  %81 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %81(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 178) #5, !dbg !1201
  unreachable, !dbg !1201

panic65:                                          ; preds = %checkok64
  store i64 8, ptr %taddr66, align 8
  %82 = insertvalue %any undef, ptr %taddr66, 0
  %83 = insertvalue %any %82, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %49, ptr %taddr67, align 8
  %84 = insertvalue %any undef, ptr %taddr67, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg70, align 8
  store %any %83, ptr %varargslots71, align 16
  %ptradd72 = getelementptr inbounds i8, ptr %varargslots71, i64 16
  store %any %85, ptr %ptradd72, align 16
  %86 = insertvalue %"any[]" undef, ptr %varargslots71, 0
  %"$$temp73" = insertvalue %"any[]" %86, i64 2, 1
  store %"any[]" %"$$temp73", ptr %indirectarg74, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 178, ptr align 8 %indirectarg74) #5, !dbg !1201
  unreachable, !dbg !1201

panic79:                                          ; preds = %checkok75
  store i64 %54, ptr %taddr80, align 8
  %87 = insertvalue %any undef, ptr %taddr80, 0
  %88 = insertvalue %any %87, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext77, ptr %taddr81, align 8
  %89 = insertvalue %any undef, ptr %taddr81, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg82, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg84, align 8
  store %any %88, ptr %varargslots85, align 16
  %ptradd86 = getelementptr inbounds i8, ptr %varargslots85, i64 16
  store %any %90, ptr %ptradd86, align 16
  %91 = insertvalue %"any[]" undef, ptr %varargslots85, 0
  %"$$temp87" = insertvalue %"any[]" %91, i64 2, 1
  store %"any[]" %"$$temp87", ptr %indirectarg88, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg82, ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, i32 393, ptr align 8 %indirectarg88) #5, !dbg !1203
  unreachable, !dbg !1203

panic91:                                          ; preds = %checkok89
  store i64 8, ptr %taddr92, align 8
  %92 = insertvalue %any undef, ptr %taddr92, 0
  %93 = insertvalue %any %92, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %59, ptr %taddr93, align 8
  %94 = insertvalue %any undef, ptr %taddr93, 0
  %95 = insertvalue %any %94, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg94, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg96, align 8
  store %any %93, ptr %varargslots97, align 16
  %ptradd98 = getelementptr inbounds i8, ptr %varargslots97, i64 16
  store %any %95, ptr %ptradd98, align 16
  %96 = insertvalue %"any[]" undef, ptr %varargslots97, 0
  %"$$temp99" = insertvalue %"any[]" %96, i64 2, 1
  store %"any[]" %"$$temp99", ptr %indirectarg100, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg94, ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, i32 393, ptr align 8 %indirectarg100) #5, !dbg !1203
  unreachable, !dbg !1203
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.resize"(ptr %0, i32 %1) #0 !dbg !1207 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %new_capacity = alloca i32, align 4
  %old_table = alloca %"Entry*[]", align 8
  %old_capacity = alloca i32, align 4
  %new_table = alloca %"Entry*[]", align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator5 = alloca %any, align 8
  %elements6 = alloca i64, align 8
  %allocator7 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr32 = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg36 = alloca %"any[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots42 = alloca [1 x %any], align 16
  %indirectarg44 = alloca %"any[]", align 8
  %indirectarg45 = alloca %"Entry*[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1210
  %2 = icmp eq ptr %0, null, !dbg !1210
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1210
  br i1 %3, label %panic, label %checkok, !dbg !1210

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1211, !DIExpression(), !1212)
  store i32 %1, ptr %new_capacity, align 4
    #dbg_declare(ptr %new_capacity, !1213, !DIExpression(), !1212)
    #dbg_declare(ptr %old_table, !1214, !DIExpression(), !1215)
  %4 = load ptr, ptr %map, align 8, !dbg !1215
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %old_table, ptr align 8 %4, i32 16, i1 false), !dbg !1215
    #dbg_declare(ptr %old_capacity, !1216, !DIExpression(), !1217)
  %ptradd = getelementptr inbounds i8, ptr %old_table, i64 8, !dbg !1217
  %5 = load i64, ptr %ptradd, align 8, !dbg !1217
  %trunc = trunc i64 %5 to i32, !dbg !1217
  store i32 %trunc, ptr %old_capacity, align 4, !dbg !1217
  %6 = load i32, ptr %old_capacity, align 4, !dbg !1218
  %eq = icmp eq i32 %6, -2147483648, !dbg !1218
  br i1 %eq, label %if.then, label %if.exit, !dbg !1218

if.then:                                          ; preds = %checkok
  %7 = load ptr, ptr %map, align 8, !dbg !1219
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 36, !dbg !1219
  store i32 -1, ptr %ptradd3, align 4, !dbg !1219
  ret void, !dbg !1221

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %new_table, !1222, !DIExpression(), !1223)
  %8 = load ptr, ptr %map, align 8, !dbg !1223
  %ptradd4 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !1223
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd4, i32 16, i1 false)
  %9 = load i32, ptr %new_capacity, align 4, !dbg !1223
  %zext = zext i32 %9 to i64, !dbg !1223
  store i64 %zext, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator5, ptr align 8 %allocator, i32 16, i1 false)
  %10 = load i64, ptr %elements, align 8
  store i64 %10, ptr %elements6, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator7, ptr align 8 %allocator5, i32 16, i1 false)
  %11 = load i64, ptr %elements6, align 8, !dbg !1224
  %mul = mul i64 8, %11, !dbg !1224
  store i64 %mul, ptr %size, align 8
  %12 = load i64, ptr %size, align 8, !dbg !1228
  %i2nb = icmp eq i64 %12, 0, !dbg !1228
  br i1 %i2nb, label %if.then8, label %if.exit9, !dbg !1228

if.then8:                                         ; preds = %if.exit
  store ptr null, ptr %blockret, align 8, !dbg !1228
  br label %expr_block.exit, !dbg !1228

if.exit9:                                         ; preds = %if.exit
  %13 = load i64, ptr %size, align 8, !dbg !1230
  br i1 true, label %or.phi, label %or.rhs, !dbg !1231

or.rhs:                                           ; preds = %if.exit9
  store i64 0, ptr %x, align 8
  %14 = load i64, ptr %x, align 8, !dbg !1232
  %neq = icmp ne i64 0, %14, !dbg !1232
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1232

and.rhs:                                          ; preds = %or.rhs
  %15 = load i64, ptr %x, align 8, !dbg !1232
  %16 = load i64, ptr %x, align 8, !dbg !1232
  %sub = sub i64 %16, 1, !dbg !1232
  %and = and i64 %15, %sub, !dbg !1232
  %eq10 = icmp eq i64 %and, 0, !dbg !1232
  br label %and.phi, !dbg !1232

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq10, %and.rhs ], !dbg !1232
  br label %or.phi, !dbg !1232

or.phi:                                           ; preds = %and.phi, %if.exit9
  %val11 = phi i1 [ true, %if.exit9 ], [ %val, %and.phi ], !dbg !1232
  br i1 %val11, label %assert_ok, label %assert_fail, !dbg !1232

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg14, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 98) #5, !dbg !1230
  unreachable, !dbg !1230

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok19, label %assert_fail15, !dbg !1230

assert_fail15:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg18, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 98) #5, !dbg !1230
  unreachable, !dbg !1230

assert_ok19:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %13, !dbg !1230
  br i1 %lt, label %assert_ok24, label %assert_fail20, !dbg !1230

assert_fail20:                                    ; preds = %assert_ok19
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg23, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 98) #5, !dbg !1230
  unreachable, !dbg !1230

assert_ok24:                                      ; preds = %assert_ok19
  %ptradd25 = getelementptr inbounds i8, ptr %allocator7, i64 8, !dbg !1230
  %20 = load i64, ptr %ptradd25, align 8, !dbg !1230
  %21 = inttoptr i64 %20 to ptr, !dbg !1230
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1210
  %22 = icmp eq ptr %21, %type, !dbg !1210
  br i1 %22, label %cache_hit, label %cache_miss, !dbg !1210

cache_miss:                                       ; preds = %assert_ok24
  %ptradd26 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !1210
  %23 = load ptr, ptr %ptradd26, align 8, !dbg !1210
  %24 = call ptr @.dyn_search(ptr %23, ptr @"$sel.acquire"), !dbg !1210
  store ptr %24, ptr %.inlinecache, align 8, !dbg !1210
  store ptr %21, ptr %.cachedtype, align 8, !dbg !1210
  br label %25, !dbg !1210

cache_hit:                                        ; preds = %assert_ok24
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1210
  br label %25, !dbg !1210

25:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %24, %cache_miss ], !dbg !1210
  %26 = icmp eq ptr %fn_phi, null, !dbg !1210
  br i1 %26, label %missing_function, label %match, !dbg !1210

missing_function:                                 ; preds = %25
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg29, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 98) #5, !dbg !1230
  unreachable, !dbg !1230

match:                                            ; preds = %25
  %28 = load ptr, ptr %allocator7, align 8
  %29 = call i64 %fn_phi(ptr %retparam, ptr %28, i64 %13, i32 1, i64 0), !dbg !1230
  %not_err = icmp eq i64 %29, 0, !dbg !1230
  %30 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1230
  br i1 %30, label %after_check, label %assign_optional, !dbg !1230

assign_optional:                                  ; preds = %match
  store i64 %29, ptr %error_var, align 8, !dbg !1230
  br label %panic_block, !dbg !1230

after_check:                                      ; preds = %match
  %31 = load ptr, ptr %retparam, align 8, !dbg !1230
  store ptr %31, ptr %blockret, align 8, !dbg !1230
  br label %expr_block.exit, !dbg !1230

expr_block.exit:                                  ; preds = %after_check, %if.then8
  %32 = load ptr, ptr %blockret, align 8, !dbg !1230
  store ptr %32, ptr %taddr, align 8
  %33 = load ptr, ptr %taddr, align 8
  %34 = load i64, ptr %elements6, align 8, !dbg !1224
  %add = add i64 0, %34, !dbg !1224
  %gt = icmp ugt i64 0, %add, !dbg !1224
  %sub30 = sub i64 %add, 0, !dbg !1224
  %35 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !1224
  br i1 %35, label %panic31, label %checkok37, !dbg !1224

checkok37:                                        ; preds = %expr_block.exit
  %size38 = sub i64 %add, 0, !dbg !1224
  %36 = insertvalue %"Entry*[]" undef, ptr %33, 0, !dbg !1224
  %37 = insertvalue %"Entry*[]" %36, i64 %size38, 1, !dbg !1224
  br label %noerr_block, !dbg !1224

panic_block:                                      ; preds = %assign_optional
  %38 = insertvalue %any undef, ptr %error_var, 0, !dbg !1224
  %39 = insertvalue %any %38, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1224
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg41, align 8
  store %any %39, ptr %varargslots42, align 16
  %40 = insertvalue %"any[]" undef, ptr %varargslots42, 0
  %"$$temp43" = insertvalue %"any[]" %40, i64 1, 1
  store %"any[]" %"$$temp43", ptr %indirectarg44, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 262, ptr align 8 %indirectarg44) #5, !dbg !1226
  unreachable, !dbg !1226

noerr_block:                                      ; preds = %checkok37
  store %"Entry*[]" %37, ptr %new_table, align 8, !dbg !1226
  %41 = load ptr, ptr %map, align 8, !dbg !1234
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg45, ptr align 8 %new_table, i32 16, i1 false)
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.transfer"(ptr %41, ptr align 8 %indirectarg45), !dbg !1234
  %42 = load ptr, ptr %map, align 8, !dbg !1235
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %42, ptr align 8 %new_table, i32 16, i1 false), !dbg !1235
  %43 = load ptr, ptr %old_table, align 8, !dbg !1236
  %44 = load ptr, ptr %map, align 8, !dbg !1236
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_internal"(ptr %44, ptr %43) #6, !dbg !1236
  %45 = load i32, ptr %new_capacity, align 4, !dbg !1237
  %uifp = uitofp i32 %45 to float, !dbg !1237
  %46 = load ptr, ptr %map, align 8, !dbg !1237
  %ptradd46 = getelementptr inbounds i8, ptr %46, i64 40, !dbg !1237
  %47 = load float, ptr %ptradd46, align 8, !dbg !1237
  %fmul = fmul float %uifp, %47, !dbg !1237
  %fpui = fptoui float %fmul to i32, !dbg !1237
  %48 = load ptr, ptr %map, align 8, !dbg !1237
  %ptradd47 = getelementptr inbounds i8, ptr %48, i64 36, !dbg !1237
  store i32 %fpui, ptr %ptradd47, align 4, !dbg !1237
  ret void, !dbg !1237

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg2, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 400) #5, !dbg !1212
  unreachable, !dbg !1212

panic31:                                          ; preds = %expr_block.exit
  store i64 %sub30, ptr %taddr32, align 8
  %50 = insertvalue %any undef, ptr %taddr32, 0
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg35, align 8
  store %any %51, ptr %varargslots, align 16
  %52 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %52, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg36, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 270, ptr align 8 %indirectarg36) #5, !dbg !1224
  unreachable, !dbg !1224
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format"(ptr %0, ptr %1, ptr %2) #0 comdat !dbg !1238 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %f = alloca ptr, align 8
  %len = alloca i64, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr10 = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %map = alloca %HashMap, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %taddr24 = alloca i64, align 8
  %taddr25 = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %varargslots29 = alloca [2 x %any], align 16
  %indirectarg32 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %entry35 = alloca ptr, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %taddr43 = alloca i64, align 8
  %taddr44 = alloca i64, align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %varargslots48 = alloca [2 x %any], align 16
  %indirectarg51 = alloca %"any[]", align 8
  %taddr55 = alloca i64, align 8
  %taddr56 = alloca i64, align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %varargslots60 = alloca [2 x %any], align 16
  %indirectarg63 = alloca %"any[]", align 8
  %taddr66 = alloca i64, align 8
  %taddr67 = alloca i64, align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %varargslots71 = alloca [2 x %any], align 16
  %indirectarg74 = alloca %"any[]", align 8
  %entry78 = alloca ptr, align 8
  %error_var81 = alloca i64, align 8
  %retparam82 = alloca i64, align 8
  %indirectarg83 = alloca %"char[]", align 8
  %error_var91 = alloca i64, align 8
  %varargslots92 = alloca [2 x %any], align 16
  %retparam97 = alloca i64, align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"any[]", align 8
  %reterr = alloca i64, align 8
  %retparam108 = alloca i64, align 8
  %indirectarg109 = alloca %"char[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !1258
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1258
  br i1 %4, label %panic, label %checkok, !dbg !1258

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1259, !DIExpression(), !1260)
  store ptr %2, ptr %f, align 8
    #dbg_declare(ptr %f, !1261, !DIExpression(), !1260)
    #dbg_declare(ptr %len, !1262, !DIExpression(), !1263)
  store i64 0, ptr %len, align 8, !dbg !1263
  %5 = load i64, ptr %len, align 8, !dbg !1264
  %6 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str, i64 2 }, ptr %indirectarg3, align 8
  %7 = call i64 @std.io.Formatter.print(ptr %retparam, ptr %6, ptr align 8 %indirectarg3), !dbg !1264
  %not_err = icmp eq i64 %7, 0, !dbg !1264
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1264
  br i1 %8, label %after_check, label %assign_optional, !dbg !1264

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %error_var, align 8, !dbg !1264
  br label %guard_block, !dbg !1264

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !1264

guard_block:                                      ; preds = %assign_optional
  %9 = load i64, ptr %error_var, align 8, !dbg !1264
  ret i64 %9, !dbg !1264

noerr_block:                                      ; preds = %after_check
  %10 = load i64, ptr %retparam, align 8, !dbg !1264
  %add = add i64 %5, %10, !dbg !1264
  store i64 %add, ptr %len, align 8, !dbg !1264
  %11 = load ptr, ptr %self, align 8, !dbg !1265
  %checknull = icmp eq ptr %11, null, !dbg !1265
  %12 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1265
  br i1 %12, label %panic4, label %checkok8, !dbg !1265

checkok8:                                         ; preds = %noerr_block
  %13 = ptrtoint ptr %11 to i64, !dbg !1265
  %14 = urem i64 %13, 8, !dbg !1265
  %15 = icmp ne i64 %14, 0, !dbg !1265
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false), !dbg !1265
  br i1 %16, label %panic9, label %checkok15, !dbg !1265

checkok15:                                        ; preds = %checkok8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %map, ptr align 8 %11, i32 48, i1 false)
  %ptradd16 = getelementptr inbounds i8, ptr %map, i64 32, !dbg !1266
  %17 = load i32, ptr %ptradd16, align 8, !dbg !1266
  %i2nb = icmp eq i32 %17, 0, !dbg !1266
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1266

if.then:                                          ; preds = %checkok15
  br label %expr_block.exit, !dbg !1266

if.exit:                                          ; preds = %checkok15
  %checknull17 = icmp eq ptr %map, null, !dbg !1268
  %18 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !1268
  br i1 %18, label %panic18, label %checkok22, !dbg !1268

checkok22:                                        ; preds = %if.exit
  %19 = ptrtoint ptr %map to i64, !dbg !1268
  %20 = urem i64 %19, 8, !dbg !1268
  %21 = icmp ne i64 %20, 0, !dbg !1268
  %22 = call i1 @llvm.expect.i1(i1 %21, i1 false), !dbg !1268
  br i1 %22, label %panic23, label %checkok33, !dbg !1268

checkok33:                                        ; preds = %checkok22
  %ptradd34 = getelementptr inbounds i8, ptr %map, i64 8, !dbg !1268
  %23 = load i64, ptr %ptradd34, align 8, !dbg !1268
    #dbg_declare(ptr %.anon, !1270, !DIExpression(), !1268)
  store i64 0, ptr %.anon, align 8, !dbg !1268
  br label %loop.cond, !dbg !1268

loop.cond:                                        ; preds = %loop.exit, %checkok33
  %24 = load i64, ptr %.anon, align 8, !dbg !1268
  %lt = icmp ult i64 %24, %23, !dbg !1268
  br i1 %lt, label %loop.body, label %loop.exit107, !dbg !1268

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry35, !1271, !DIExpression(), !1273)
  %checknull36 = icmp eq ptr %map, null, !dbg !1273
  %25 = call i1 @llvm.expect.i1(i1 %checknull36, i1 false), !dbg !1273
  br i1 %25, label %panic37, label %checkok41, !dbg !1273

checkok41:                                        ; preds = %loop.body
  %26 = ptrtoint ptr %map to i64, !dbg !1273
  %27 = urem i64 %26, 8, !dbg !1273
  %28 = icmp ne i64 %27, 0, !dbg !1273
  %29 = call i1 @llvm.expect.i1(i1 %28, i1 false), !dbg !1273
  br i1 %29, label %panic42, label %checkok52, !dbg !1273

checkok52:                                        ; preds = %checkok41
  %ptradd53 = getelementptr inbounds i8, ptr %map, i64 8, !dbg !1273
  %30 = load i64, ptr %ptradd53, align 8, !dbg !1273
  %31 = load ptr, ptr %map, align 8, !dbg !1273
  %32 = load i64, ptr %.anon, align 8, !dbg !1273
  %ge = icmp uge i64 %32, %30, !dbg !1273
  %33 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1273
  br i1 %33, label %panic54, label %checkok64, !dbg !1273

checkok64:                                        ; preds = %checkok52
  %ptroffset = getelementptr inbounds [8 x i8], ptr %31, i64 %32, !dbg !1273
  %34 = ptrtoint ptr %ptroffset to i64, !dbg !1273
  %35 = urem i64 %34, 8, !dbg !1273
  %36 = icmp ne i64 %35, 0, !dbg !1273
  %37 = call i1 @llvm.expect.i1(i1 %36, i1 false), !dbg !1273
  br i1 %37, label %panic65, label %checkok75, !dbg !1273

checkok75:                                        ; preds = %checkok64
  %38 = load ptr, ptr %ptroffset, align 8, !dbg !1273
  store ptr %38, ptr %entry35, align 8, !dbg !1273
  br label %loop.cond76, !dbg !1274

loop.cond76:                                      ; preds = %noerr_block104, %checkok75
  %39 = load ptr, ptr %entry35, align 8, !dbg !1276
  %i2b = icmp ne ptr %39, null, !dbg !1276
  br i1 %i2b, label %loop.body77, label %loop.exit, !dbg !1276

loop.body77:                                      ; preds = %loop.cond76
    #dbg_declare(ptr %entry78, !1278, !DIExpression(), !1265)
  %40 = load ptr, ptr %entry35, align 8, !dbg !1279
  store ptr %40, ptr %entry78, align 8, !dbg !1279
  %41 = load i64, ptr %len, align 8, !dbg !1282
  %lt79 = icmp ult i64 2, %41, !dbg !1282
  br i1 %lt79, label %if.then80, label %if.exit90, !dbg !1282

if.then80:                                        ; preds = %loop.body77
  %42 = load i64, ptr %len, align 8, !dbg !1282
  %43 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.58, i64 2 }, ptr %indirectarg83, align 8
  %44 = call i64 @std.io.Formatter.print(ptr %retparam82, ptr %43, ptr align 8 %indirectarg83), !dbg !1282
  %not_err84 = icmp eq i64 %44, 0, !dbg !1282
  %45 = call i1 @llvm.expect.i1(i1 %not_err84, i1 true), !dbg !1282
  br i1 %45, label %after_check86, label %assign_optional85, !dbg !1282

assign_optional85:                                ; preds = %if.then80
  store i64 %44, ptr %error_var81, align 8, !dbg !1282
  br label %guard_block87, !dbg !1282

after_check86:                                    ; preds = %if.then80
  br label %noerr_block88, !dbg !1282

guard_block87:                                    ; preds = %assign_optional85
  %46 = load i64, ptr %error_var81, align 8, !dbg !1282
  ret i64 %46, !dbg !1282

noerr_block88:                                    ; preds = %after_check86
  %47 = load i64, ptr %retparam82, align 8, !dbg !1282
  %add89 = add i64 %42, %47, !dbg !1282
  store i64 %add89, ptr %len, align 8, !dbg !1282
  br label %if.exit90, !dbg !1282

if.exit90:                                        ; preds = %noerr_block88, %loop.body77
  %48 = load i64, ptr %len, align 8, !dbg !1284
  %49 = load ptr, ptr %entry78, align 8, !dbg !1284
  %ptradd93 = getelementptr inbounds i8, ptr %49, i64 8, !dbg !1284
  %50 = insertvalue %any undef, ptr %ptradd93, 0, !dbg !1284
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.String" to i64), 1, !dbg !1284
  store %any %51, ptr %varargslots92, align 16, !dbg !1284
  %52 = load ptr, ptr %entry78, align 8, !dbg !1284
  %ptradd94 = getelementptr inbounds i8, ptr %52, i64 24, !dbg !1284
  %53 = insertvalue %any undef, ptr %ptradd94, 0, !dbg !1284
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.p$cforms.MenuItem" to i64), 1, !dbg !1284
  %ptradd95 = getelementptr inbounds i8, ptr %varargslots92, i64 16, !dbg !1284
  store %any %54, ptr %ptradd95, align 16, !dbg !1284
  %55 = insertvalue %"any[]" undef, ptr %varargslots92, 0, !dbg !1284
  %"$$temp96" = insertvalue %"any[]" %55, i64 2, 1, !dbg !1284
  %56 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.59, i64 6 }, ptr %indirectarg98, align 8
  store %"any[]" %"$$temp96", ptr %indirectarg99, align 8
  %57 = call i64 @std.io.Formatter.printf(ptr %retparam97, ptr %56, ptr align 8 %indirectarg98, ptr align 8 %indirectarg99), !dbg !1284
  %not_err100 = icmp eq i64 %57, 0, !dbg !1284
  %58 = call i1 @llvm.expect.i1(i1 %not_err100, i1 true), !dbg !1284
  br i1 %58, label %after_check102, label %assign_optional101, !dbg !1284

assign_optional101:                               ; preds = %if.exit90
  store i64 %57, ptr %error_var91, align 8, !dbg !1284
  br label %guard_block103, !dbg !1284

after_check102:                                   ; preds = %if.exit90
  br label %noerr_block104, !dbg !1284

guard_block103:                                   ; preds = %assign_optional101
  %59 = load i64, ptr %error_var91, align 8, !dbg !1284
  ret i64 %59, !dbg !1284

noerr_block104:                                   ; preds = %after_check102
  %60 = load i64, ptr %retparam97, align 8, !dbg !1284
  %add105 = add i64 %48, %60, !dbg !1284
  store i64 %add105, ptr %len, align 8, !dbg !1284
  %61 = load ptr, ptr %entry35, align 8, !dbg !1285
  %ptradd106 = getelementptr inbounds i8, ptr %61, i64 32, !dbg !1285
  %62 = load ptr, ptr %ptradd106, align 8, !dbg !1285
  store ptr %62, ptr %entry35, align 8, !dbg !1285
  br label %loop.cond76, !dbg !1285

loop.exit:                                        ; preds = %loop.cond76
  %63 = load i64, ptr %.anon, align 8, !dbg !1268
  %addnuw = add nuw i64 %63, 1, !dbg !1268
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1268
  br label %loop.cond, !dbg !1268

loop.exit107:                                     ; preds = %loop.cond
  br label %expr_block.exit, !dbg !1268

expr_block.exit:                                  ; preds = %loop.exit107, %if.then
  %64 = load i64, ptr %len, align 8, !dbg !1286
  %65 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.61, i64 2 }, ptr %indirectarg109, align 8
  %66 = call i64 @std.io.Formatter.print(ptr %retparam108, ptr %65, ptr align 8 %indirectarg109), !dbg !1286
  %not_err110 = icmp eq i64 %66, 0, !dbg !1286
  %67 = call i1 @llvm.expect.i1(i1 %not_err110, i1 true), !dbg !1286
  br i1 %67, label %after_check112, label %assign_optional111, !dbg !1286

assign_optional111:                               ; preds = %expr_block.exit
  store i64 %66, ptr %reterr, align 8, !dbg !1286
  br label %err_retblock, !dbg !1286

after_check112:                                   ; preds = %expr_block.exit
  %68 = load i64, ptr %retparam108, align 8, !dbg !1286
  %add113 = add i64 %64, %68, !dbg !1286
  store i64 %add113, ptr %0, align 8, !dbg !1286
  ret i64 0, !dbg !1286

err_retblock:                                     ; preds = %assign_optional111
  %69 = load i64, ptr %reterr, align 8, !dbg !1286
  ret i64 %69, !dbg !1286

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg2, align 8
  %70 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %70(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 416) #5, !dbg !1260
  unreachable, !dbg !1260

panic4:                                           ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.57, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg7, align 8
  %71 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %71(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 420) #5, !dbg !1265
  unreachable, !dbg !1265

panic9:                                           ; preds = %checkok8
  store i64 8, ptr %taddr, align 8
  %72 = insertvalue %any undef, ptr %taddr, 0
  %73 = insertvalue %any %72, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %14, ptr %taddr10, align 8
  %74 = insertvalue %any undef, ptr %taddr10, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg13, align 8
  store %any %73, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %75, ptr %ptradd, align 16
  %76 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %76, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 420, ptr align 8 %indirectarg14) #5, !dbg !1265
  unreachable, !dbg !1265

panic18:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg21, align 8
  %77 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %77(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 325) #5, !dbg !1268
  unreachable, !dbg !1268

panic23:                                          ; preds = %checkok22
  store i64 8, ptr %taddr24, align 8
  %78 = insertvalue %any undef, ptr %taddr24, 0
  %79 = insertvalue %any %78, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %20, ptr %taddr25, align 8
  %80 = insertvalue %any undef, ptr %taddr25, 0
  %81 = insertvalue %any %80, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg28, align 8
  store %any %79, ptr %varargslots29, align 16
  %ptradd30 = getelementptr inbounds i8, ptr %varargslots29, i64 16
  store %any %81, ptr %ptradd30, align 16
  %82 = insertvalue %"any[]" undef, ptr %varargslots29, 0
  %"$$temp31" = insertvalue %"any[]" %82, i64 2, 1
  store %"any[]" %"$$temp31", ptr %indirectarg32, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 325, ptr align 8 %indirectarg32) #5, !dbg !1268
  unreachable, !dbg !1268

panic37:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg40, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 325) #5, !dbg !1273
  unreachable, !dbg !1273

panic42:                                          ; preds = %checkok41
  store i64 8, ptr %taddr43, align 8
  %84 = insertvalue %any undef, ptr %taddr43, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %27, ptr %taddr44, align 8
  %86 = insertvalue %any undef, ptr %taddr44, 0
  %87 = insertvalue %any %86, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg47, align 8
  store %any %85, ptr %varargslots48, align 16
  %ptradd49 = getelementptr inbounds i8, ptr %varargslots48, i64 16
  store %any %87, ptr %ptradd49, align 16
  %88 = insertvalue %"any[]" undef, ptr %varargslots48, 0
  %"$$temp50" = insertvalue %"any[]" %88, i64 2, 1
  store %"any[]" %"$$temp50", ptr %indirectarg51, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 325, ptr align 8 %indirectarg51) #5, !dbg !1273
  unreachable, !dbg !1273

panic54:                                          ; preds = %checkok52
  store i64 %30, ptr %taddr55, align 8
  %89 = insertvalue %any undef, ptr %taddr55, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %32, ptr %taddr56, align 8
  %91 = insertvalue %any undef, ptr %taddr56, 0
  %92 = insertvalue %any %91, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg59, align 8
  store %any %90, ptr %varargslots60, align 16
  %ptradd61 = getelementptr inbounds i8, ptr %varargslots60, i64 16
  store %any %92, ptr %ptradd61, align 16
  %93 = insertvalue %"any[]" undef, ptr %varargslots60, 0
  %"$$temp62" = insertvalue %"any[]" %93, i64 2, 1
  store %"any[]" %"$$temp62", ptr %indirectarg63, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 325, ptr align 8 %indirectarg63) #5, !dbg !1273
  unreachable, !dbg !1273

panic65:                                          ; preds = %checkok64
  store i64 8, ptr %taddr66, align 8
  %94 = insertvalue %any undef, ptr %taddr66, 0
  %95 = insertvalue %any %94, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %35, ptr %taddr67, align 8
  %96 = insertvalue %any undef, ptr %taddr67, 0
  %97 = insertvalue %any %96, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg70, align 8
  store %any %95, ptr %varargslots71, align 16
  %ptradd72 = getelementptr inbounds i8, ptr %varargslots71, i64 16
  store %any %97, ptr %ptradd72, align 16
  %98 = insertvalue %"any[]" undef, ptr %varargslots71, 0
  %"$$temp73" = insertvalue %"any[]" %98, i64 2, 1
  store %"any[]" %"$$temp73", ptr %indirectarg74, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 325, ptr align 8 %indirectarg74) #5, !dbg !1273
  unreachable, !dbg !1273
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.transfer"(ptr %0, ptr align 8 %1) #0 !dbg !1287 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %src = alloca %"Entry*[]", align 8
  %new_capacity = alloca i32, align 4
  %.anon = alloca i64, align 8
  %j = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr7 = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg12 = alloca %"any[]", align 8
  %taddr15 = alloca i64, align 8
  %taddr16 = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %varargslots20 = alloca [2 x %any], align 16
  %indirectarg23 = alloca %"any[]", align 8
  %next = alloca ptr, align 8
  %i = alloca i32, align 4
  %hash = alloca i32, align 4
  %capacity = alloca i32, align 4
  %taddr31 = alloca i64, align 8
  %taddr32 = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %varargslots36 = alloca [2 x %any], align 16
  %indirectarg39 = alloca %"any[]", align 8
  %taddr43 = alloca i64, align 8
  %taddr44 = alloca i64, align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %varargslots48 = alloca [2 x %any], align 16
  %indirectarg51 = alloca %"any[]", align 8
  %taddr58 = alloca i64, align 8
  %taddr59 = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %varargslots63 = alloca [2 x %any], align 16
  %indirectarg66 = alloca %"any[]", align 8
  %taddr70 = alloca i64, align 8
  %taddr71 = alloca i64, align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %varargslots75 = alloca [2 x %any], align 16
  %indirectarg78 = alloca %"any[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1290
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1290
  br i1 %3, label %panic, label %checkok, !dbg !1290

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1291, !DIExpression(), !1292)
    #dbg_declare(ptr %1, !1293, !DIExpression(), !1292)
    #dbg_declare(ptr %src, !1294, !DIExpression(), !1295)
  %4 = load ptr, ptr %map, align 8, !dbg !1295
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %src, ptr align 8 %4, i32 16, i1 false), !dbg !1295
    #dbg_declare(ptr %new_capacity, !1296, !DIExpression(), !1297)
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1297
  %5 = load i64, ptr %ptradd, align 8, !dbg !1297
  %trunc = trunc i64 %5 to i32, !dbg !1297
  store i32 %trunc, ptr %new_capacity, align 4, !dbg !1297
  %ptradd3 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !1298
  %6 = load i64, ptr %ptradd3, align 8, !dbg !1298
    #dbg_declare(ptr %.anon, !1300, !DIExpression(), !1298)
  store i64 0, ptr %.anon, align 8, !dbg !1298
  br label %loop.cond, !dbg !1298

loop.cond:                                        ; preds = %loop.inc, %checkok
  %7 = load i64, ptr %.anon, align 8, !dbg !1298
  %lt = icmp ult i64 %7, %6, !dbg !1298
  br i1 %lt, label %loop.body, label %loop.exit80, !dbg !1298

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %j, !1301, !DIExpression(), !1303)
  %8 = load i64, ptr %.anon, align 8, !dbg !1303
  %trunc4 = trunc i64 %8 to i32, !dbg !1303
  store i32 %trunc4, ptr %j, align 4, !dbg !1303
    #dbg_declare(ptr %e, !1304, !DIExpression(), !1303)
  %ptradd5 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !1303
  %9 = load i64, ptr %ptradd5, align 8, !dbg !1303
  %10 = load ptr, ptr %src, align 8, !dbg !1303
  %11 = load i64, ptr %.anon, align 8, !dbg !1303
  %ge = icmp uge i64 %11, %9, !dbg !1303
  %12 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1303
  br i1 %12, label %panic6, label %checkok13, !dbg !1303

checkok13:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [8 x i8], ptr %10, i64 %11, !dbg !1303
  %13 = ptrtoint ptr %ptroffset to i64, !dbg !1303
  %14 = urem i64 %13, 8, !dbg !1303
  %15 = icmp ne i64 %14, 0, !dbg !1303
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false), !dbg !1303
  br i1 %16, label %panic14, label %checkok24, !dbg !1303

checkok24:                                        ; preds = %checkok13
  %17 = load ptr, ptr %ptroffset, align 8, !dbg !1303
  store ptr %17, ptr %e, align 8, !dbg !1303
  %18 = load ptr, ptr %e, align 8, !dbg !1305
  %i2nb = icmp eq ptr %18, null, !dbg !1305
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1305

if.then:                                          ; preds = %checkok24
  br label %loop.inc, !dbg !1305

if.exit:                                          ; preds = %checkok24
  br label %loop.body26, !dbg !1307

loop.cond25:                                      ; preds = %checkok79
  %19 = load ptr, ptr %e, align 8, !dbg !1308
  %i2b = icmp ne ptr %19, null, !dbg !1308
  br i1 %i2b, label %loop.body26, label %loop.exit, !dbg !1308

loop.body26:                                      ; preds = %loop.cond25, %if.exit
    #dbg_declare(ptr %next, !1310, !DIExpression(), !1312)
  %20 = load ptr, ptr %e, align 8, !dbg !1312
  %ptradd27 = getelementptr inbounds i8, ptr %20, i64 32, !dbg !1312
  %21 = load ptr, ptr %ptradd27, align 8, !dbg !1312
  store ptr %21, ptr %next, align 8, !dbg !1312
    #dbg_declare(ptr %i, !1313, !DIExpression(), !1314)
  %22 = load ptr, ptr %e, align 8, !dbg !1314
  %23 = load i32, ptr %22, align 8
  store i32 %23, ptr %hash, align 4
  %24 = load i32, ptr %new_capacity, align 4
  store i32 %24, ptr %capacity, align 4
  %25 = load i32, ptr %hash, align 4, !dbg !1315
  %26 = load i32, ptr %capacity, align 4, !dbg !1315
  %sub = sub i32 %26, 1, !dbg !1315
  %and = and i32 %25, %sub, !dbg !1315
  store i32 %and, ptr %i, align 4, !dbg !1315
  %ptradd28 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1317
  %27 = load i64, ptr %ptradd28, align 8, !dbg !1317
  %28 = load ptr, ptr %1, align 8, !dbg !1317
  %29 = load i32, ptr %i, align 4, !dbg !1317
  %zext = zext i32 %29 to i64, !dbg !1317
  %ge29 = icmp uge i64 %zext, %27, !dbg !1317
  %30 = call i1 @llvm.expect.i1(i1 %ge29, i1 false), !dbg !1317
  br i1 %30, label %panic30, label %checkok40, !dbg !1317

checkok40:                                        ; preds = %loop.body26
  %ptroffset41 = getelementptr inbounds [8 x i8], ptr %28, i64 %zext, !dbg !1317
  %31 = ptrtoint ptr %ptroffset41 to i64, !dbg !1317
  %32 = urem i64 %31, 8, !dbg !1317
  %33 = icmp ne i64 %32, 0, !dbg !1317
  %34 = call i1 @llvm.expect.i1(i1 %33, i1 false), !dbg !1317
  br i1 %34, label %panic42, label %checkok52, !dbg !1317

checkok52:                                        ; preds = %checkok40
  %35 = load ptr, ptr %e, align 8, !dbg !1317
  %ptradd53 = getelementptr inbounds i8, ptr %35, i64 32, !dbg !1317
  %36 = load ptr, ptr %ptroffset41, align 8, !dbg !1317
  store ptr %36, ptr %ptradd53, align 8, !dbg !1317
  %ptradd54 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1318
  %37 = load i64, ptr %ptradd54, align 8, !dbg !1318
  %38 = load ptr, ptr %1, align 8, !dbg !1318
  %39 = load i32, ptr %i, align 4, !dbg !1318
  %zext55 = zext i32 %39 to i64, !dbg !1318
  %ge56 = icmp uge i64 %zext55, %37, !dbg !1318
  %40 = call i1 @llvm.expect.i1(i1 %ge56, i1 false), !dbg !1318
  br i1 %40, label %panic57, label %checkok67, !dbg !1318

checkok67:                                        ; preds = %checkok52
  %ptroffset68 = getelementptr inbounds [8 x i8], ptr %38, i64 %zext55, !dbg !1318
  %41 = ptrtoint ptr %ptroffset68 to i64, !dbg !1318
  %42 = urem i64 %41, 8, !dbg !1318
  %43 = icmp ne i64 %42, 0, !dbg !1318
  %44 = call i1 @llvm.expect.i1(i1 %43, i1 false), !dbg !1318
  br i1 %44, label %panic69, label %checkok79, !dbg !1318

checkok79:                                        ; preds = %checkok67
  %45 = load ptr, ptr %e, align 8, !dbg !1318
  store ptr %45, ptr %ptroffset68, align 8, !dbg !1318
  %46 = load ptr, ptr %next, align 8, !dbg !1319
  store ptr %46, ptr %e, align 8, !dbg !1319
  br label %loop.cond25, !dbg !1319

loop.exit:                                        ; preds = %loop.cond25
  br label %loop.inc, !dbg !1319

loop.inc:                                         ; preds = %loop.exit, %if.then
  %47 = load i64, ptr %.anon, align 8, !dbg !1298
  %addnuw = add nuw i64 %47, 1, !dbg !1298
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1298
  br label %loop.cond, !dbg !1298

loop.exit80:                                      ; preds = %loop.cond
  ret void, !dbg !1298

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 428) #5, !dbg !1292
  unreachable, !dbg !1292

panic6:                                           ; preds = %loop.body
  store i64 %9, ptr %taddr, align 8
  %49 = insertvalue %any undef, ptr %taddr, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %11, ptr %taddr7, align 8
  %51 = insertvalue %any undef, ptr %taddr7, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg10, align 8
  store %any %50, ptr %varargslots, align 16
  %ptradd11 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %52, ptr %ptradd11, align 16
  %53 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %53, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg12, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 432, ptr align 8 %indirectarg12) #5, !dbg !1303
  unreachable, !dbg !1303

panic14:                                          ; preds = %checkok13
  store i64 8, ptr %taddr15, align 8
  %54 = insertvalue %any undef, ptr %taddr15, 0
  %55 = insertvalue %any %54, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %14, ptr %taddr16, align 8
  %56 = insertvalue %any undef, ptr %taddr16, 0
  %57 = insertvalue %any %56, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg19, align 8
  store %any %55, ptr %varargslots20, align 16
  %ptradd21 = getelementptr inbounds i8, ptr %varargslots20, i64 16
  store %any %57, ptr %ptradd21, align 16
  %58 = insertvalue %"any[]" undef, ptr %varargslots20, 0
  %"$$temp22" = insertvalue %"any[]" %58, i64 2, 1
  store %"any[]" %"$$temp22", ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 432, ptr align 8 %indirectarg23) #5, !dbg !1303
  unreachable, !dbg !1303

panic30:                                          ; preds = %loop.body26
  store i64 %27, ptr %taddr31, align 8
  %59 = insertvalue %any undef, ptr %taddr31, 0
  %60 = insertvalue %any %59, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr32, align 8
  %61 = insertvalue %any undef, ptr %taddr32, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg35, align 8
  store %any %60, ptr %varargslots36, align 16
  %ptradd37 = getelementptr inbounds i8, ptr %varargslots36, i64 16
  store %any %62, ptr %ptradd37, align 16
  %63 = insertvalue %"any[]" undef, ptr %varargslots36, 0
  %"$$temp38" = insertvalue %"any[]" %63, i64 2, 1
  store %"any[]" %"$$temp38", ptr %indirectarg39, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 439, ptr align 8 %indirectarg39) #5, !dbg !1317
  unreachable, !dbg !1317

panic42:                                          ; preds = %checkok40
  store i64 8, ptr %taddr43, align 8
  %64 = insertvalue %any undef, ptr %taddr43, 0
  %65 = insertvalue %any %64, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %32, ptr %taddr44, align 8
  %66 = insertvalue %any undef, ptr %taddr44, 0
  %67 = insertvalue %any %66, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg47, align 8
  store %any %65, ptr %varargslots48, align 16
  %ptradd49 = getelementptr inbounds i8, ptr %varargslots48, i64 16
  store %any %67, ptr %ptradd49, align 16
  %68 = insertvalue %"any[]" undef, ptr %varargslots48, 0
  %"$$temp50" = insertvalue %"any[]" %68, i64 2, 1
  store %"any[]" %"$$temp50", ptr %indirectarg51, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 439, ptr align 8 %indirectarg51) #5, !dbg !1317
  unreachable, !dbg !1317

panic57:                                          ; preds = %checkok52
  store i64 %37, ptr %taddr58, align 8
  %69 = insertvalue %any undef, ptr %taddr58, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext55, ptr %taddr59, align 8
  %71 = insertvalue %any undef, ptr %taddr59, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg62, align 8
  store %any %70, ptr %varargslots63, align 16
  %ptradd64 = getelementptr inbounds i8, ptr %varargslots63, i64 16
  store %any %72, ptr %ptradd64, align 16
  %73 = insertvalue %"any[]" undef, ptr %varargslots63, 0
  %"$$temp65" = insertvalue %"any[]" %73, i64 2, 1
  store %"any[]" %"$$temp65", ptr %indirectarg66, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 440, ptr align 8 %indirectarg66) #5, !dbg !1318
  unreachable, !dbg !1318

panic69:                                          ; preds = %checkok67
  store i64 8, ptr %taddr70, align 8
  %74 = insertvalue %any undef, ptr %taddr70, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr71, align 8
  %76 = insertvalue %any undef, ptr %taddr71, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg74, align 8
  store %any %75, ptr %varargslots75, align 16
  %ptradd76 = getelementptr inbounds i8, ptr %varargslots75, i64 16
  store %any %77, ptr %ptradd76, align 16
  %78 = insertvalue %"any[]" undef, ptr %varargslots75, 0
  %"$$temp77" = insertvalue %"any[]" %78, i64 2, 1
  store %"any[]" %"$$temp77", ptr %indirectarg78, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, i32 440, ptr align 8 %indirectarg78) #5, !dbg !1318
  unreachable, !dbg !1318
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.put_all_for_create"(ptr %0, ptr %1) #0 !dbg !1320 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %other_map = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr9 = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %e = alloca ptr, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %taddr24 = alloca i64, align 8
  %taddr25 = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %varargslots29 = alloca [2 x %any], align 16
  %indirectarg32 = alloca %"any[]", align 8
  %taddr36 = alloca i64, align 8
  %taddr37 = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [2 x %any], align 16
  %indirectarg44 = alloca %"any[]", align 8
  %taddr47 = alloca i64, align 8
  %taddr48 = alloca i64, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %varargslots52 = alloca [2 x %any], align 16
  %indirectarg55 = alloca %"any[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1323
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1323
  br i1 %3, label %panic, label %checkok, !dbg !1323

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1324, !DIExpression(), !1325)
  store ptr %1, ptr %other_map, align 8
    #dbg_declare(ptr %other_map, !1326, !DIExpression(), !1325)
  %4 = load ptr, ptr %other_map, align 8, !dbg !1327
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !1327
  %5 = load i32, ptr %ptradd, align 8, !dbg !1327
  %i2nb = icmp eq i32 %5, 0, !dbg !1327
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1327

if.then:                                          ; preds = %checkok
  ret void, !dbg !1327

if.exit:                                          ; preds = %checkok
  %6 = load ptr, ptr %other_map, align 8, !dbg !1328
  %checknull = icmp eq ptr %6, null, !dbg !1328
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1328
  br i1 %7, label %panic3, label %checkok7, !dbg !1328

checkok7:                                         ; preds = %if.exit
  %8 = ptrtoint ptr %6 to i64, !dbg !1328
  %9 = urem i64 %8, 8, !dbg !1328
  %10 = icmp ne i64 %9, 0, !dbg !1328
  %11 = call i1 @llvm.expect.i1(i1 %10, i1 false), !dbg !1328
  br i1 %11, label %panic8, label %checkok15, !dbg !1328

checkok15:                                        ; preds = %checkok7
  %ptradd16 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1328
  %12 = load i64, ptr %ptradd16, align 8, !dbg !1328
    #dbg_declare(ptr %.anon, !1330, !DIExpression(), !1328)
  store i64 0, ptr %.anon, align 8, !dbg !1328
  br label %loop.cond, !dbg !1328

loop.cond:                                        ; preds = %loop.exit, %checkok15
  %13 = load i64, ptr %.anon, align 8, !dbg !1328
  %lt = icmp ult i64 %13, %12, !dbg !1328
  br i1 %lt, label %loop.body, label %loop.exit63, !dbg !1328

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %e, !1331, !DIExpression(), !1333)
  %checknull17 = icmp eq ptr %6, null, !dbg !1333
  %14 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !1333
  br i1 %14, label %panic18, label %checkok22, !dbg !1333

checkok22:                                        ; preds = %loop.body
  %15 = ptrtoint ptr %6 to i64, !dbg !1333
  %16 = urem i64 %15, 8, !dbg !1333
  %17 = icmp ne i64 %16, 0, !dbg !1333
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 false), !dbg !1333
  br i1 %18, label %panic23, label %checkok33, !dbg !1333

checkok33:                                        ; preds = %checkok22
  %ptradd34 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1333
  %19 = load i64, ptr %ptradd34, align 8, !dbg !1333
  %20 = load ptr, ptr %6, align 8, !dbg !1333
  %21 = load i64, ptr %.anon, align 8, !dbg !1333
  %ge = icmp uge i64 %21, %19, !dbg !1333
  %22 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1333
  br i1 %22, label %panic35, label %checkok45, !dbg !1333

checkok45:                                        ; preds = %checkok33
  %ptroffset = getelementptr inbounds [8 x i8], ptr %20, i64 %21, !dbg !1333
  %23 = ptrtoint ptr %ptroffset to i64, !dbg !1333
  %24 = urem i64 %23, 8, !dbg !1333
  %25 = icmp ne i64 %24, 0, !dbg !1333
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 false), !dbg !1333
  br i1 %26, label %panic46, label %checkok56, !dbg !1333

checkok56:                                        ; preds = %checkok45
  %27 = load ptr, ptr %ptroffset, align 8, !dbg !1333
  store ptr %27, ptr %e, align 8, !dbg !1333
  br label %loop.cond57, !dbg !1334

loop.cond57:                                      ; preds = %loop.body58, %checkok56
  %28 = load ptr, ptr %e, align 8, !dbg !1336
  %i2b = icmp ne ptr %28, null, !dbg !1336
  br i1 %i2b, label %loop.body58, label %loop.exit, !dbg !1336

loop.body58:                                      ; preds = %loop.cond57
  %29 = load ptr, ptr %e, align 8, !dbg !1338
  %ptradd59 = getelementptr inbounds i8, ptr %29, i64 8, !dbg !1338
  %30 = load ptr, ptr %e, align 8, !dbg !1338
  %ptradd60 = getelementptr inbounds i8, ptr %30, i64 24, !dbg !1338
  %31 = load ptr, ptr %map, align 8, !dbg !1338
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg61, ptr align 8 %ptradd59, i32 16, i1 false)
  %32 = load ptr, ptr %ptradd60, align 8
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.put_for_create"(ptr %31, ptr align 8 %indirectarg61, ptr %32), !dbg !1338
  %33 = load ptr, ptr %e, align 8, !dbg !1340
  %ptradd62 = getelementptr inbounds i8, ptr %33, i64 32, !dbg !1340
  %34 = load ptr, ptr %ptradd62, align 8, !dbg !1340
  store ptr %34, ptr %e, align 8, !dbg !1340
  br label %loop.cond57, !dbg !1340

loop.exit:                                        ; preds = %loop.cond57
  %35 = load i64, ptr %.anon, align 8, !dbg !1328
  %addnuw = add nuw i64 %35, 1, !dbg !1328
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1328
  br label %loop.cond, !dbg !1328

loop.exit63:                                      ; preds = %loop.cond
  ret void, !dbg !1328

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg2, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 447) #5, !dbg !1325
  unreachable, !dbg !1325

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.64, i64 56 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg6, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 450) #5, !dbg !1328
  unreachable, !dbg !1328

panic8:                                           ; preds = %checkok7
  store i64 8, ptr %taddr, align 8
  %38 = insertvalue %any undef, ptr %taddr, 0
  %39 = insertvalue %any %38, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %9, ptr %taddr9, align 8
  %40 = insertvalue %any undef, ptr %taddr9, 0
  %41 = insertvalue %any %40, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg12, align 8
  store %any %39, ptr %varargslots, align 16
  %ptradd13 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %41, ptr %ptradd13, align 16
  %42 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %42, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 450, ptr align 8 %indirectarg14) #5, !dbg !1328
  unreachable, !dbg !1328

panic18:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.64, i64 56 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg21, align 8
  %43 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %43(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 450) #5, !dbg !1333
  unreachable, !dbg !1333

panic23:                                          ; preds = %checkok22
  store i64 8, ptr %taddr24, align 8
  %44 = insertvalue %any undef, ptr %taddr24, 0
  %45 = insertvalue %any %44, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %16, ptr %taddr25, align 8
  %46 = insertvalue %any undef, ptr %taddr25, 0
  %47 = insertvalue %any %46, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg28, align 8
  store %any %45, ptr %varargslots29, align 16
  %ptradd30 = getelementptr inbounds i8, ptr %varargslots29, i64 16
  store %any %47, ptr %ptradd30, align 16
  %48 = insertvalue %"any[]" undef, ptr %varargslots29, 0
  %"$$temp31" = insertvalue %"any[]" %48, i64 2, 1
  store %"any[]" %"$$temp31", ptr %indirectarg32, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 450, ptr align 8 %indirectarg32) #5, !dbg !1333
  unreachable, !dbg !1333

panic35:                                          ; preds = %checkok33
  store i64 %19, ptr %taddr36, align 8
  %49 = insertvalue %any undef, ptr %taddr36, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %21, ptr %taddr37, align 8
  %51 = insertvalue %any undef, ptr %taddr37, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg40, align 8
  store %any %50, ptr %varargslots41, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %varargslots41, i64 16
  store %any %52, ptr %ptradd42, align 16
  %53 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp43" = insertvalue %"any[]" %53, i64 2, 1
  store %"any[]" %"$$temp43", ptr %indirectarg44, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 450, ptr align 8 %indirectarg44) #5, !dbg !1333
  unreachable, !dbg !1333

panic46:                                          ; preds = %checkok45
  store i64 8, ptr %taddr47, align 8
  %54 = insertvalue %any undef, ptr %taddr47, 0
  %55 = insertvalue %any %54, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %24, ptr %taddr48, align 8
  %56 = insertvalue %any undef, ptr %taddr48, 0
  %57 = insertvalue %any %56, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg51, align 8
  store %any %55, ptr %varargslots52, align 16
  %ptradd53 = getelementptr inbounds i8, ptr %varargslots52, i64 16
  store %any %57, ptr %ptradd53, align 16
  %58 = insertvalue %"any[]" undef, ptr %varargslots52, 0
  %"$$temp54" = insertvalue %"any[]" %58, i64 2, 1
  store %"any[]" %"$$temp54", ptr %indirectarg55, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 450, ptr align 8 %indirectarg55) #5, !dbg !1333
  unreachable, !dbg !1333
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.put_for_create"(ptr %0, ptr align 8 %1, ptr %2) #0 !dbg !1341 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %value = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %i = alloca i32, align 4
  %hash4 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr7 = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg12 = alloca %"any[]", align 8
  %taddr15 = alloca i64, align 8
  %taddr16 = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %varargslots20 = alloca [2 x %any], align 16
  %indirectarg23 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !1344
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1344
  br i1 %4, label %panic, label %checkok, !dbg !1344

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1345, !DIExpression(), !1346)
    #dbg_declare(ptr %1, !1347, !DIExpression(), !1346)
  store ptr %2, ptr %value, align 8
    #dbg_declare(ptr %value, !1348, !DIExpression(), !1346)
    #dbg_declare(ptr %hash, !1349, !DIExpression(), !1350)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %5 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !1351
  %6 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %5) #6, !dbg !1350
  store i32 %6, ptr %hash, align 4, !dbg !1350
    #dbg_declare(ptr %i, !1353, !DIExpression(), !1354)
  %7 = load i32, ptr %hash, align 4
  store i32 %7, ptr %hash4, align 4
  %8 = load ptr, ptr %map, align 8, !dbg !1354
  %ptradd = getelementptr inbounds i8, ptr %8, i64 8, !dbg !1354
  %9 = load i64, ptr %ptradd, align 8, !dbg !1354
  %trunc = trunc i64 %9 to i32, !dbg !1354
  store i32 %trunc, ptr %capacity, align 4
  %10 = load i32, ptr %hash4, align 4, !dbg !1355
  %11 = load i32, ptr %capacity, align 4, !dbg !1355
  %sub = sub i32 %11, 1, !dbg !1355
  %and = and i32 %10, %sub, !dbg !1355
  store i32 %and, ptr %i, align 4, !dbg !1355
    #dbg_declare(ptr %e, !1357, !DIExpression(), !1359)
  %12 = load ptr, ptr %map, align 8, !dbg !1359
  %ptradd5 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !1359
  %13 = load i64, ptr %ptradd5, align 8, !dbg !1359
  %14 = load ptr, ptr %12, align 8, !dbg !1359
  %15 = load i32, ptr %i, align 4, !dbg !1359
  %zext = zext i32 %15 to i64, !dbg !1359
  %ge = icmp uge i64 %zext, %13, !dbg !1359
  %16 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1359
  br i1 %16, label %panic6, label %checkok13, !dbg !1359

checkok13:                                        ; preds = %checkok
  %ptroffset = getelementptr inbounds [8 x i8], ptr %14, i64 %zext, !dbg !1359
  %17 = ptrtoint ptr %ptroffset to i64, !dbg !1359
  %18 = urem i64 %17, 8, !dbg !1359
  %19 = icmp ne i64 %18, 0, !dbg !1359
  %20 = call i1 @llvm.expect.i1(i1 %19, i1 false), !dbg !1359
  br i1 %20, label %panic14, label %checkok24, !dbg !1359

checkok24:                                        ; preds = %checkok13
  %21 = load ptr, ptr %ptroffset, align 8, !dbg !1359
  store ptr %21, ptr %e, align 8, !dbg !1359
  br label %loop.cond, !dbg !1359

loop.cond:                                        ; preds = %if.exit, %checkok24
  %22 = load ptr, ptr %e, align 8, !dbg !1359
  %neq = icmp ne ptr %22, null, !dbg !1359
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !1359

loop.body:                                        ; preds = %loop.cond
  %23 = load ptr, ptr %e, align 8, !dbg !1360
  %24 = load i32, ptr %23, align 8, !dbg !1360
  %25 = load i32, ptr %hash, align 4, !dbg !1360
  %eq = icmp eq i32 %24, %25, !dbg !1360
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !1360

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %1, i32 16, i1 false)
  %26 = load ptr, ptr %e, align 8, !dbg !1360
  %ptradd25 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !1360
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd25, i32 16, i1 false)
  %27 = load %"char[]", ptr %a, align 8, !dbg !1362
  %28 = load %"char[]", ptr %b, align 8, !dbg !1362
  %29 = extractvalue %"char[]" %27, 1, !dbg !1362
  %30 = extractvalue %"char[]" %28, 1, !dbg !1362
  %31 = extractvalue %"char[]" %27, 0, !dbg !1362
  %32 = extractvalue %"char[]" %28, 0, !dbg !1362
  %eq26 = icmp eq i64 %29, %30, !dbg !1362
  br i1 %eq26, label %slice_cmp_values, label %slice_cmp_exit, !dbg !1362

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %33 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %33, %29
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd27 = getelementptr inbounds i8, ptr %31, i64 %33
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %33
  %34 = load i8, ptr %ptradd27, align 1
  %35 = load i8, ptr %ptradd28, align 1
  %eq29 = icmp eq i8 %34, %35
  %36 = add i64 %33, 1
  store i64 %36, ptr %cmp.idx, align 8
  br i1 %eq29, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then, label %if.exit

if.then:                                          ; preds = %and.phi
  %37 = load ptr, ptr %e, align 8, !dbg !1364
  %ptradd30 = getelementptr inbounds i8, ptr %37, i64 24, !dbg !1364
  %38 = load ptr, ptr %value, align 8, !dbg !1364
  store ptr %38, ptr %ptradd30, align 8, !dbg !1364
  ret void, !dbg !1366

if.exit:                                          ; preds = %and.phi
  %39 = load ptr, ptr %e, align 8, !dbg !1359
  %ptradd31 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !1359
  %40 = load ptr, ptr %ptradd31, align 8, !dbg !1359
  store ptr %40, ptr %e, align 8, !dbg !1359
  br label %loop.cond, !dbg !1359

loop.exit:                                        ; preds = %loop.cond
  %41 = load i32, ptr %i, align 4, !dbg !1367
  %42 = load ptr, ptr %map, align 8, !dbg !1367
  %43 = load i32, ptr %hash, align 4, !dbg !1367
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg32, ptr align 8 %1, i32 16, i1 false)
  %44 = load ptr, ptr %value, align 8
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.create_entry"(ptr %42, i32 %43, ptr align 8 %indirectarg32, ptr %44, i32 %41), !dbg !1367
  ret void, !dbg !1367

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.65, i64 14 }, ptr %indirectarg2, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 460) #5, !dbg !1346
  unreachable, !dbg !1346

panic6:                                           ; preds = %checkok
  store i64 %13, ptr %taddr, align 8
  %46 = insertvalue %any undef, ptr %taddr, 0
  %47 = insertvalue %any %46, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr7, align 8
  %48 = insertvalue %any undef, ptr %taddr7, 0
  %49 = insertvalue %any %48, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.65, i64 14 }, ptr %indirectarg10, align 8
  store %any %47, ptr %varargslots, align 16
  %ptradd11 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %49, ptr %ptradd11, align 16
  %50 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %50, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg12, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 464, ptr align 8 %indirectarg12) #5, !dbg !1359
  unreachable, !dbg !1359

panic14:                                          ; preds = %checkok13
  store i64 8, ptr %taddr15, align 8
  %51 = insertvalue %any undef, ptr %taddr15, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %18, ptr %taddr16, align 8
  %53 = insertvalue %any undef, ptr %taddr16, 0
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.65, i64 14 }, ptr %indirectarg19, align 8
  store %any %52, ptr %varargslots20, align 16
  %ptradd21 = getelementptr inbounds i8, ptr %varargslots20, i64 16
  store %any %54, ptr %ptradd21, align 16
  %55 = insertvalue %"any[]" undef, ptr %varargslots20, 0
  %"$$temp22" = insertvalue %"any[]" %55, i64 2, 1
  store %"any[]" %"$$temp22", ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 464, ptr align 8 %indirectarg23) #5, !dbg !1359
  unreachable, !dbg !1359
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_internal"(ptr %0, ptr %1) #0 !dbg !1368 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %ptr3 = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1371
  %2 = icmp eq ptr %0, null, !dbg !1371
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1371
  br i1 %3, label %panic, label %checkok, !dbg !1371

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1372, !DIExpression(), !1373)
  store ptr %1, ptr %ptr, align 8
    #dbg_declare(ptr %ptr, !1374, !DIExpression(), !1373)
  %4 = load ptr, ptr %map, align 8, !dbg !1375
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !1375
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd, i32 16, i1 false)
  %5 = load ptr, ptr %ptr, align 8
  store ptr %5, ptr %ptr3, align 8
  %6 = load ptr, ptr %ptr3, align 8, !dbg !1376
  %i2nb = icmp eq ptr %6, null, !dbg !1376
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1376

if.then:                                          ; preds = %checkok
  br label %expr_block.exit, !dbg !1376

if.exit:                                          ; preds = %checkok
  %7 = load ptr, ptr %ptr3, align 8, !dbg !1378
  %neq = icmp ne ptr %7, null, !dbg !1378
  br i1 %neq, label %assert_ok, label %assert_fail, !dbg !1378

assert_fail:                                      ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.67, i64 75 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.66, i64 13 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 123) #5, !dbg !1378
  unreachable, !dbg !1378

assert_ok:                                        ; preds = %if.exit
  %ptradd7 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !1378
  %9 = load i64, ptr %ptradd7, align 8, !dbg !1378
  %10 = inttoptr i64 %9 to ptr, !dbg !1378
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1371
  %11 = icmp eq ptr %10, %type, !dbg !1371
  br i1 %11, label %cache_hit, label %cache_miss, !dbg !1371

cache_miss:                                       ; preds = %assert_ok
  %ptradd8 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !1371
  %12 = load ptr, ptr %ptradd8, align 8, !dbg !1371
  %13 = call ptr @.dyn_search(ptr %12, ptr @"$sel.release"), !dbg !1371
  store ptr %13, ptr %.inlinecache, align 8, !dbg !1371
  store ptr %10, ptr %.cachedtype, align 8, !dbg !1371
  br label %14, !dbg !1371

cache_hit:                                        ; preds = %assert_ok
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1371
  br label %14, !dbg !1371

14:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %13, %cache_miss ], !dbg !1371
  %15 = icmp eq ptr %fn_phi, null, !dbg !1371
  br i1 %15, label %missing_function, label %match, !dbg !1371

missing_function:                                 ; preds = %14
  store %"char[]" { ptr @.panic_msg.68, i64 44 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.66, i64 13 }, ptr %indirectarg11, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 123) #5, !dbg !1378
  unreachable, !dbg !1378

match:                                            ; preds = %14
  %17 = load ptr, ptr %allocator, align 8, !dbg !1378
  call void %fn_phi(ptr %17, ptr %7, i8 zeroext 0), !dbg !1378
  br label %expr_block.exit, !dbg !1378

expr_block.exit:                                  ; preds = %match, %if.then
  ret void, !dbg !1378

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.66, i64 13 }, ptr %indirectarg2, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 475) #5, !dbg !1373
  unreachable, !dbg !1373
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.remove_entry_for_key"(ptr %0, ptr align 8 %1) #0 !dbg !1379 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %i = alloca i32, align 4
  %hash4 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %prev = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr8 = alloca i64, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %taddr16 = alloca i64, align 8
  %taddr17 = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %varargslots21 = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %e = alloca ptr, align 8
  %next = alloca ptr, align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %taddr41 = alloca i64, align 8
  %taddr42 = alloca i64, align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %varargslots46 = alloca [2 x %any], align 16
  %indirectarg49 = alloca %"any[]", align 8
  %taddr53 = alloca i64, align 8
  %taddr54 = alloca i64, align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %varargslots58 = alloca [2 x %any], align 16
  %indirectarg61 = alloca %"any[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1380
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1380
  br i1 %3, label %panic, label %checkok, !dbg !1380

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1381, !DIExpression(), !1382)
    #dbg_declare(ptr %1, !1383, !DIExpression(), !1382)
  %4 = load ptr, ptr %map, align 8, !dbg !1384
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !1384
  %5 = load i32, ptr %ptradd, align 8, !dbg !1384
  %i2nb = icmp eq i32 %5, 0, !dbg !1384
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1384

if.then:                                          ; preds = %checkok
  ret i8 0, !dbg !1384

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %hash, !1385, !DIExpression(), !1386)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %6 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !1387
  %7 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %6) #6, !dbg !1386
  store i32 %7, ptr %hash, align 4, !dbg !1386
    #dbg_declare(ptr %i, !1389, !DIExpression(), !1390)
  %8 = load i32, ptr %hash, align 4
  store i32 %8, ptr %hash4, align 4
  %9 = load ptr, ptr %map, align 8, !dbg !1390
  %ptradd5 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1390
  %10 = load i64, ptr %ptradd5, align 8, !dbg !1390
  %trunc = trunc i64 %10 to i32, !dbg !1390
  store i32 %trunc, ptr %capacity, align 4
  %11 = load i32, ptr %hash4, align 4, !dbg !1391
  %12 = load i32, ptr %capacity, align 4, !dbg !1391
  %sub = sub i32 %12, 1, !dbg !1391
  %and = and i32 %11, %sub, !dbg !1391
  store i32 %and, ptr %i, align 4, !dbg !1391
    #dbg_declare(ptr %prev, !1393, !DIExpression(), !1394)
  %13 = load ptr, ptr %map, align 8, !dbg !1394
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1394
  %14 = load i64, ptr %ptradd6, align 8, !dbg !1394
  %15 = load ptr, ptr %13, align 8, !dbg !1394
  %16 = load i32, ptr %i, align 4, !dbg !1394
  %zext = zext i32 %16 to i64, !dbg !1394
  %ge = icmp uge i64 %zext, %14, !dbg !1394
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1394
  br i1 %17, label %panic7, label %checkok14, !dbg !1394

checkok14:                                        ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %15, i64 %zext, !dbg !1394
  %18 = ptrtoint ptr %ptroffset to i64, !dbg !1394
  %19 = urem i64 %18, 8, !dbg !1394
  %20 = icmp ne i64 %19, 0, !dbg !1394
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false), !dbg !1394
  br i1 %21, label %panic15, label %checkok25, !dbg !1394

checkok25:                                        ; preds = %checkok14
  %22 = load ptr, ptr %ptroffset, align 8, !dbg !1394
  store ptr %22, ptr %prev, align 8, !dbg !1394
    #dbg_declare(ptr %e, !1395, !DIExpression(), !1396)
  %23 = load ptr, ptr %prev, align 8, !dbg !1396
  store ptr %23, ptr %e, align 8, !dbg !1396
  br label %loop.cond, !dbg !1397

loop.cond:                                        ; preds = %if.exit65, %checkok25
  %24 = load ptr, ptr %e, align 8, !dbg !1398
  %i2b = icmp ne ptr %24, null, !dbg !1398
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !1398

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %next, !1400, !DIExpression(), !1402)
  %25 = load ptr, ptr %e, align 8, !dbg !1402
  %ptradd26 = getelementptr inbounds i8, ptr %25, i64 32, !dbg !1402
  %26 = load ptr, ptr %ptradd26, align 8, !dbg !1402
  store ptr %26, ptr %next, align 8, !dbg !1402
  %27 = load ptr, ptr %e, align 8, !dbg !1403
  %28 = load i32, ptr %27, align 8, !dbg !1403
  %29 = load i32, ptr %hash, align 4, !dbg !1403
  %eq = icmp eq i32 %28, %29, !dbg !1403
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !1403

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %1, i32 16, i1 false)
  %30 = load ptr, ptr %e, align 8, !dbg !1403
  %ptradd27 = getelementptr inbounds i8, ptr %30, i64 8, !dbg !1403
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd27, i32 16, i1 false)
  %31 = load %"char[]", ptr %a, align 8, !dbg !1404
  %32 = load %"char[]", ptr %b, align 8, !dbg !1404
  %33 = extractvalue %"char[]" %31, 1, !dbg !1404
  %34 = extractvalue %"char[]" %32, 1, !dbg !1404
  %35 = extractvalue %"char[]" %31, 0, !dbg !1404
  %36 = extractvalue %"char[]" %32, 0, !dbg !1404
  %eq28 = icmp eq i64 %33, %34, !dbg !1404
  br i1 %eq28, label %slice_cmp_values, label %slice_cmp_exit, !dbg !1404

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %37 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %37, %33
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd29 = getelementptr inbounds i8, ptr %35, i64 %37
  %ptradd30 = getelementptr inbounds i8, ptr %36, i64 %37
  %38 = load i8, ptr %ptradd29, align 1
  %39 = load i8, ptr %ptradd30, align 1
  %eq31 = icmp eq i8 %38, %39
  %40 = add i64 %37, 1
  store i64 %40, ptr %cmp.idx, align 8
  br i1 %eq31, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then32, label %if.exit65

if.then32:                                        ; preds = %and.phi
  %41 = load ptr, ptr %map, align 8, !dbg !1406
  %ptradd33 = getelementptr inbounds i8, ptr %41, i64 32, !dbg !1406
  %42 = load i32, ptr %ptradd33, align 8, !dbg !1406
  %sub34 = sub i32 %42, 1, !dbg !1406
  store i32 %sub34, ptr %ptradd33, align 8, !dbg !1406
  %43 = load ptr, ptr %prev, align 8, !dbg !1408
  %44 = load ptr, ptr %e, align 8, !dbg !1408
  %eq35 = icmp eq ptr %43, %44, !dbg !1408
  br i1 %eq35, label %if.then36, label %if.else, !dbg !1408

if.then36:                                        ; preds = %if.then32
  %45 = load ptr, ptr %map, align 8, !dbg !1409
  %ptradd37 = getelementptr inbounds i8, ptr %45, i64 8, !dbg !1409
  %46 = load i64, ptr %ptradd37, align 8, !dbg !1409
  %47 = load ptr, ptr %45, align 8, !dbg !1409
  %48 = load i32, ptr %i, align 4, !dbg !1409
  %zext38 = zext i32 %48 to i64, !dbg !1409
  %ge39 = icmp uge i64 %zext38, %46, !dbg !1409
  %49 = call i1 @llvm.expect.i1(i1 %ge39, i1 false), !dbg !1409
  br i1 %49, label %panic40, label %checkok50, !dbg !1409

checkok50:                                        ; preds = %if.then36
  %ptroffset51 = getelementptr inbounds [8 x i8], ptr %47, i64 %zext38, !dbg !1409
  %50 = ptrtoint ptr %ptroffset51 to i64, !dbg !1409
  %51 = urem i64 %50, 8, !dbg !1409
  %52 = icmp ne i64 %51, 0, !dbg !1409
  %53 = call i1 @llvm.expect.i1(i1 %52, i1 false), !dbg !1409
  br i1 %53, label %panic52, label %checkok62, !dbg !1409

checkok62:                                        ; preds = %checkok50
  %54 = load ptr, ptr %next, align 8, !dbg !1409
  store ptr %54, ptr %ptroffset51, align 8, !dbg !1409
  br label %if.exit64, !dbg !1409

if.else:                                          ; preds = %if.then32
  %55 = load ptr, ptr %prev, align 8, !dbg !1411
  %ptradd63 = getelementptr inbounds i8, ptr %55, i64 32, !dbg !1411
  %56 = load ptr, ptr %next, align 8, !dbg !1411
  store ptr %56, ptr %ptradd63, align 8, !dbg !1411
  br label %if.exit64, !dbg !1411

if.exit64:                                        ; preds = %if.else, %checkok62
  %57 = load ptr, ptr %map, align 8, !dbg !1413
  %58 = load ptr, ptr %e, align 8, !dbg !1413
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_entry"(ptr %57, ptr %58), !dbg !1413
  ret i8 1, !dbg !1414

if.exit65:                                        ; preds = %and.phi
  %59 = load ptr, ptr %e, align 8, !dbg !1415
  store ptr %59, ptr %prev, align 8, !dbg !1415
  %60 = load ptr, ptr %next, align 8, !dbg !1416
  store ptr %60, ptr %e, align 8, !dbg !1416
  br label %loop.cond, !dbg !1416

loop.exit:                                        ; preds = %loop.cond
  ret i8 0, !dbg !1417

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg2, align 8
  %61 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %61(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 480) #5, !dbg !1382
  unreachable, !dbg !1382

panic7:                                           ; preds = %if.exit
  store i64 %14, ptr %taddr, align 8
  %62 = insertvalue %any undef, ptr %taddr, 0
  %63 = insertvalue %any %62, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr8, align 8
  %64 = insertvalue %any undef, ptr %taddr8, 0
  %65 = insertvalue %any %64, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg11, align 8
  store %any %63, ptr %varargslots, align 16
  %ptradd12 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %65, ptr %ptradd12, align 16
  %66 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %66, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 485, ptr align 8 %indirectarg13) #5, !dbg !1394
  unreachable, !dbg !1394

panic15:                                          ; preds = %checkok14
  store i64 8, ptr %taddr16, align 8
  %67 = insertvalue %any undef, ptr %taddr16, 0
  %68 = insertvalue %any %67, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr17, align 8
  %69 = insertvalue %any undef, ptr %taddr17, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg20, align 8
  store %any %68, ptr %varargslots21, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots21, i64 16
  store %any %70, ptr %ptradd22, align 16
  %71 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp23" = insertvalue %"any[]" %71, i64 2, 1
  store %"any[]" %"$$temp23", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 485, ptr align 8 %indirectarg24) #5, !dbg !1394
  unreachable, !dbg !1394

panic40:                                          ; preds = %if.then36
  store i64 %46, ptr %taddr41, align 8
  %72 = insertvalue %any undef, ptr %taddr41, 0
  %73 = insertvalue %any %72, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext38, ptr %taddr42, align 8
  %74 = insertvalue %any undef, ptr %taddr42, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg45, align 8
  store %any %73, ptr %varargslots46, align 16
  %ptradd47 = getelementptr inbounds i8, ptr %varargslots46, i64 16
  store %any %75, ptr %ptradd47, align 16
  %76 = insertvalue %"any[]" undef, ptr %varargslots46, 0
  %"$$temp48" = insertvalue %"any[]" %76, i64 2, 1
  store %"any[]" %"$$temp48", ptr %indirectarg49, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 495, ptr align 8 %indirectarg49) #5, !dbg !1409
  unreachable, !dbg !1409

panic52:                                          ; preds = %checkok50
  store i64 8, ptr %taddr53, align 8
  %77 = insertvalue %any undef, ptr %taddr53, 0
  %78 = insertvalue %any %77, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %51, ptr %taddr54, align 8
  %79 = insertvalue %any undef, ptr %taddr54, 0
  %80 = insertvalue %any %79, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg57, align 8
  store %any %78, ptr %varargslots58, align 16
  %ptradd59 = getelementptr inbounds i8, ptr %varargslots58, i64 16
  store %any %80, ptr %ptradd59, align 16
  %81 = insertvalue %"any[]" undef, ptr %varargslots58, 0
  %"$$temp60" = insertvalue %"any[]" %81, i64 2, 1
  store %"any[]" %"$$temp60", ptr %indirectarg61, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 495, ptr align 8 %indirectarg61) #5, !dbg !1409
  unreachable, !dbg !1409
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.create_entry"(ptr %0, i32 %1, ptr align 8 %2, ptr %3, i32 %4) #0 !dbg !1418 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %value = alloca ptr, align 8
  %bucket_index = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg7 = alloca %"any[]", align 8
  %taddr10 = alloca i64, align 8
  %taddr11 = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %varargslots15 = alloca [2 x %any], align 16
  %indirectarg18 = alloca %"any[]", align 8
  %taddr21 = alloca i64, align 8
  %taddr22 = alloca i64, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %varargslots26 = alloca [2 x %any], align 16
  %indirectarg29 = alloca %"any[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %any, align 8
  %entry34 = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %val = alloca ptr, align 8
  %allocator36 = alloca %any, align 8
  %size = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator37 = alloca %any, align 8
  %size38 = alloca i64, align 8
  %blockret39 = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %varargslots64 = alloca [1 x %any], align 16
  %indirectarg66 = alloca %"any[]", align 8
  %.assign_list = alloca %Entry, align 8
  %taddr74 = alloca i64, align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %varargslots78 = alloca [1 x %any], align 16
  %indirectarg80 = alloca %"any[]", align 8
  %taddr84 = alloca i64, align 8
  %taddr85 = alloca i64, align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %varargslots89 = alloca [2 x %any], align 16
  %indirectarg92 = alloca %"any[]", align 8
  %taddr96 = alloca i64, align 8
  %taddr97 = alloca i64, align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %varargslots101 = alloca [2 x %any], align 16
  %indirectarg104 = alloca %"any[]", align 8
  %indirectarg107 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %taddr112 = alloca i64, align 8
  %taddr113 = alloca i64, align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg116 = alloca %"char[]", align 8
  %varargslots117 = alloca [2 x %any], align 16
  %indirectarg120 = alloca %"any[]", align 8
  %taddr126 = alloca i64, align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %varargslots130 = alloca [1 x %any], align 16
  %indirectarg132 = alloca %"any[]", align 8
  %taddr136 = alloca i64, align 8
  %taddr137 = alloca i64, align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg140 = alloca %"char[]", align 8
  %varargslots141 = alloca [2 x %any], align 16
  %indirectarg144 = alloca %"any[]", align 8
  %taddr148 = alloca i64, align 8
  %taddr149 = alloca i64, align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %indirectarg152 = alloca %"char[]", align 8
  %varargslots153 = alloca [2 x %any], align 16
  %indirectarg156 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1421
  %5 = icmp eq ptr %0, null, !dbg !1421
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1421
  br i1 %6, label %panic, label %checkok, !dbg !1421

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1422, !DIExpression(), !1423)
  store i32 %1, ptr %hash, align 4
    #dbg_declare(ptr %hash, !1424, !DIExpression(), !1423)
    #dbg_declare(ptr %2, !1425, !DIExpression(), !1423)
  store ptr %3, ptr %value, align 8
    #dbg_declare(ptr %value, !1426, !DIExpression(), !1423)
  store i32 %4, ptr %bucket_index, align 4
    #dbg_declare(ptr %bucket_index, !1427, !DIExpression(), !1423)
    #dbg_declare(ptr %e, !1428, !DIExpression(), !1429)
  %7 = load ptr, ptr %map, align 8, !dbg !1429
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !1429
  %8 = load i64, ptr %ptradd, align 8, !dbg !1429
  %9 = load ptr, ptr %7, align 8, !dbg !1429
  %10 = load i32, ptr %bucket_index, align 4, !dbg !1429
  %sext = sext i32 %10 to i64, !dbg !1429
  %lt = icmp slt i64 %sext, 0, !dbg !1429
  %11 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !1429
  br i1 %11, label %panic3, label %checkok8, !dbg !1429

checkok8:                                         ; preds = %checkok
  %ge = icmp sge i64 %sext, %8, !dbg !1429
  %12 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1429
  br i1 %12, label %panic9, label %checkok19, !dbg !1429

checkok19:                                        ; preds = %checkok8
  %ptroffset = getelementptr inbounds [8 x i8], ptr %9, i64 %sext, !dbg !1429
  %13 = ptrtoint ptr %ptroffset to i64, !dbg !1429
  %14 = urem i64 %13, 8, !dbg !1429
  %15 = icmp ne i64 %14, 0, !dbg !1429
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false), !dbg !1429
  br i1 %16, label %panic20, label %checkok30, !dbg !1429

checkok30:                                        ; preds = %checkok19
  %17 = load ptr, ptr %ptroffset, align 8, !dbg !1429
  store ptr %17, ptr %e, align 8, !dbg !1429
  %18 = load ptr, ptr %map, align 8, !dbg !1430
  %ptradd31 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !1430
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg32, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg33, ptr align 8 %ptradd31, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %2, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33), !dbg !1430
    #dbg_declare(ptr %entry34, !1431, !DIExpression(), !1432)
  %19 = load ptr, ptr %map, align 8, !dbg !1432
  %ptradd35 = getelementptr inbounds i8, ptr %19, i64 16, !dbg !1432
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd35, i32 16, i1 false)
    #dbg_declare(ptr %val, !1433, !DIExpression(), !1435)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator36, ptr align 8 %allocator, i32 16, i1 false)
  store i64 40, ptr %size, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator37, ptr align 8 %allocator36, i32 16, i1 false)
  %20 = load i64, ptr %size, align 8
  store i64 %20, ptr %size38, align 8
  %21 = load i64, ptr %size38, align 8, !dbg !1436
  %i2nb = icmp eq i64 %21, 0, !dbg !1436
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1436

if.then:                                          ; preds = %checkok30
  store ptr null, ptr %blockret39, align 8, !dbg !1436
  br label %expr_block.exit, !dbg !1436

if.exit:                                          ; preds = %checkok30
  %22 = load i64, ptr %size38, align 8, !dbg !1440
  br i1 true, label %or.phi, label %or.rhs, !dbg !1441

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x, align 8
  %23 = load i64, ptr %x, align 8, !dbg !1442
  %neq = icmp ne i64 0, %23, !dbg !1442
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1442

and.rhs:                                          ; preds = %or.rhs
  %24 = load i64, ptr %x, align 8, !dbg !1442
  %25 = load i64, ptr %x, align 8, !dbg !1442
  %sub = sub i64 %25, 1, !dbg !1442
  %and = and i64 %24, %sub, !dbg !1442
  %eq = icmp eq i64 %and, 0, !dbg !1442
  br label %and.phi, !dbg !1442

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val40 = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1442
  br label %or.phi, !dbg !1442

or.phi:                                           ; preds = %and.phi, %if.exit
  %val41 = phi i1 [ true, %if.exit ], [ %val40, %and.phi ], !dbg !1442
  br i1 %val41, label %assert_ok, label %assert_fail, !dbg !1442

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg44, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 86) #5, !dbg !1440
  unreachable, !dbg !1440

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok49, label %assert_fail45, !dbg !1440

assert_fail45:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg48, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 86) #5, !dbg !1440
  unreachable, !dbg !1440

assert_ok49:                                      ; preds = %assert_ok
  %lt50 = icmp ult i64 0, %22, !dbg !1440
  br i1 %lt50, label %assert_ok55, label %assert_fail51, !dbg !1440

assert_fail51:                                    ; preds = %assert_ok49
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg54, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 86) #5, !dbg !1440
  unreachable, !dbg !1440

assert_ok55:                                      ; preds = %assert_ok49
  %ptradd56 = getelementptr inbounds i8, ptr %allocator37, i64 8, !dbg !1440
  %29 = load i64, ptr %ptradd56, align 8, !dbg !1440
  %30 = inttoptr i64 %29 to ptr, !dbg !1440
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1421
  %31 = icmp eq ptr %30, %type, !dbg !1421
  br i1 %31, label %cache_hit, label %cache_miss, !dbg !1421

cache_miss:                                       ; preds = %assert_ok55
  %ptradd57 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !1421
  %32 = load ptr, ptr %ptradd57, align 8, !dbg !1421
  %33 = call ptr @.dyn_search(ptr %32, ptr @"$sel.acquire"), !dbg !1421
  store ptr %33, ptr %.inlinecache, align 8, !dbg !1421
  store ptr %30, ptr %.cachedtype, align 8, !dbg !1421
  br label %34, !dbg !1421

cache_hit:                                        ; preds = %assert_ok55
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1421
  br label %34, !dbg !1421

34:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %33, %cache_miss ], !dbg !1421
  %35 = icmp eq ptr %fn_phi, null, !dbg !1421
  br i1 %35, label %missing_function, label %match, !dbg !1421

missing_function:                                 ; preds = %34
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg60, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 86) #5, !dbg !1440
  unreachable, !dbg !1440

match:                                            ; preds = %34
  %37 = load ptr, ptr %allocator37, align 8
  %38 = call i64 %fn_phi(ptr %retparam, ptr %37, i64 %22, i32 0, i64 0), !dbg !1440
  %not_err = icmp eq i64 %38, 0, !dbg !1440
  %39 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1440
  br i1 %39, label %after_check, label %assign_optional, !dbg !1440

assign_optional:                                  ; preds = %match
  store i64 %38, ptr %error_var, align 8, !dbg !1440
  br label %panic_block, !dbg !1440

after_check:                                      ; preds = %match
  %40 = load ptr, ptr %retparam, align 8, !dbg !1440
  store ptr %40, ptr %blockret39, align 8, !dbg !1440
  br label %expr_block.exit, !dbg !1440

expr_block.exit:                                  ; preds = %after_check, %if.then
  br label %noerr_block, !dbg !1440

panic_block:                                      ; preds = %assign_optional
  %41 = insertvalue %any undef, ptr %error_var, 0, !dbg !1440
  %42 = insertvalue %any %41, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1440
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg63, align 8
  store %any %42, ptr %varargslots64, align 16
  %43 = insertvalue %"any[]" undef, ptr %varargslots64, 0
  %"$$temp65" = insertvalue %"any[]" %43, i64 1, 1
  store %"any[]" %"$$temp65", ptr %indirectarg66, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 75, ptr align 8 %indirectarg66) #5, !dbg !1438
  unreachable, !dbg !1438

noerr_block:                                      ; preds = %expr_block.exit
  %44 = load ptr, ptr %blockret39, align 8, !dbg !1438
  store ptr %44, ptr %val, align 8, !dbg !1438
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 40, i1 false)
  %45 = load i32, ptr %hash, align 4, !dbg !1444
  store i32 %45, ptr %.assign_list, align 8, !dbg !1444
  %ptradd67 = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !1444
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd67, ptr align 8 %2, i32 16, i1 false), !dbg !1444
  %ptradd68 = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !1444
  %46 = load ptr, ptr %value, align 8, !dbg !1444
  store ptr %46, ptr %ptradd68, align 8, !dbg !1444
  %ptradd69 = getelementptr inbounds i8, ptr %.assign_list, i64 32, !dbg !1444
  %47 = load ptr, ptr %map, align 8, !dbg !1444
  %ptradd70 = getelementptr inbounds i8, ptr %47, i64 8, !dbg !1444
  %48 = load i64, ptr %ptradd70, align 8, !dbg !1444
  %49 = load ptr, ptr %47, align 8, !dbg !1444
  %50 = load i32, ptr %bucket_index, align 4, !dbg !1444
  %sext71 = sext i32 %50 to i64, !dbg !1444
  %lt72 = icmp slt i64 %sext71, 0, !dbg !1444
  %51 = call i1 @llvm.expect.i1(i1 %lt72, i1 false), !dbg !1444
  br i1 %51, label %panic73, label %checkok81, !dbg !1444

checkok81:                                        ; preds = %noerr_block
  %ge82 = icmp sge i64 %sext71, %48, !dbg !1444
  %52 = call i1 @llvm.expect.i1(i1 %ge82, i1 false), !dbg !1444
  br i1 %52, label %panic83, label %checkok93, !dbg !1444

checkok93:                                        ; preds = %checkok81
  %ptroffset94 = getelementptr inbounds [8 x i8], ptr %49, i64 %sext71, !dbg !1444
  %53 = ptrtoint ptr %ptroffset94 to i64, !dbg !1444
  %54 = urem i64 %53, 8, !dbg !1444
  %55 = icmp ne i64 %54, 0, !dbg !1444
  %56 = call i1 @llvm.expect.i1(i1 %55, i1 false), !dbg !1444
  br i1 %56, label %panic95, label %checkok105, !dbg !1444

checkok105:                                       ; preds = %checkok93
  %57 = load ptr, ptr %ptroffset94, align 8, !dbg !1444
  store ptr %57, ptr %ptradd69, align 8, !dbg !1444
  %58 = load ptr, ptr %val, align 8, !dbg !1445
  %checknull = icmp eq ptr %58, null, !dbg !1445
  %59 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1445
  br i1 %59, label %panic106, label %checkok110, !dbg !1445

checkok110:                                       ; preds = %checkok105
  %60 = ptrtoint ptr %58 to i64, !dbg !1445
  %61 = urem i64 %60, 8, !dbg !1445
  %62 = icmp ne i64 %61, 0, !dbg !1445
  %63 = call i1 @llvm.expect.i1(i1 %62, i1 false), !dbg !1445
  br i1 %63, label %panic111, label %checkok121, !dbg !1445

checkok121:                                       ; preds = %checkok110
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %58, ptr align 8 %.assign_list, i32 40, i1 false), !dbg !1445
  %64 = load ptr, ptr %val, align 8, !dbg !1446
  store ptr %64, ptr %entry34, align 8, !dbg !1446
  %65 = load ptr, ptr %map, align 8, !dbg !1447
  %ptradd122 = getelementptr inbounds i8, ptr %65, i64 8, !dbg !1447
  %66 = load i64, ptr %ptradd122, align 8, !dbg !1447
  %67 = load ptr, ptr %65, align 8, !dbg !1447
  %68 = load i32, ptr %bucket_index, align 4, !dbg !1447
  %sext123 = sext i32 %68 to i64, !dbg !1447
  %lt124 = icmp slt i64 %sext123, 0, !dbg !1447
  %69 = call i1 @llvm.expect.i1(i1 %lt124, i1 false), !dbg !1447
  br i1 %69, label %panic125, label %checkok133, !dbg !1447

checkok133:                                       ; preds = %checkok121
  %ge134 = icmp sge i64 %sext123, %66, !dbg !1447
  %70 = call i1 @llvm.expect.i1(i1 %ge134, i1 false), !dbg !1447
  br i1 %70, label %panic135, label %checkok145, !dbg !1447

checkok145:                                       ; preds = %checkok133
  %ptroffset146 = getelementptr inbounds [8 x i8], ptr %67, i64 %sext123, !dbg !1447
  %71 = ptrtoint ptr %ptroffset146 to i64, !dbg !1447
  %72 = urem i64 %71, 8, !dbg !1447
  %73 = icmp ne i64 %72, 0, !dbg !1447
  %74 = call i1 @llvm.expect.i1(i1 %73, i1 false), !dbg !1447
  br i1 %74, label %panic147, label %checkok157, !dbg !1447

checkok157:                                       ; preds = %checkok145
  %75 = load ptr, ptr %entry34, align 8, !dbg !1447
  store ptr %75, ptr %ptroffset146, align 8, !dbg !1447
  %76 = load ptr, ptr %map, align 8, !dbg !1448
  %ptradd158 = getelementptr inbounds i8, ptr %76, i64 32, !dbg !1448
  %77 = load i32, ptr %ptradd158, align 8, !dbg !1448
  %add = add i32 %77, 1, !dbg !1448
  store i32 %add, ptr %ptradd158, align 8, !dbg !1448
  ret void, !dbg !1448

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg2, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 510) #5, !dbg !1423
  unreachable, !dbg !1423

panic3:                                           ; preds = %checkok
  store i64 %sext, ptr %taddr, align 8
  %79 = insertvalue %any undef, ptr %taddr, 0
  %80 = insertvalue %any %79, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg6, align 8
  store %any %80, ptr %varargslots, align 16
  %81 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %81, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg7, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 512, ptr align 8 %indirectarg7) #5, !dbg !1429
  unreachable, !dbg !1429

panic9:                                           ; preds = %checkok8
  store i64 %8, ptr %taddr10, align 8
  %82 = insertvalue %any undef, ptr %taddr10, 0
  %83 = insertvalue %any %82, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext, ptr %taddr11, align 8
  %84 = insertvalue %any undef, ptr %taddr11, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg14, align 8
  store %any %83, ptr %varargslots15, align 16
  %ptradd16 = getelementptr inbounds i8, ptr %varargslots15, i64 16
  store %any %85, ptr %ptradd16, align 16
  %86 = insertvalue %"any[]" undef, ptr %varargslots15, 0
  %"$$temp17" = insertvalue %"any[]" %86, i64 2, 1
  store %"any[]" %"$$temp17", ptr %indirectarg18, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 512, ptr align 8 %indirectarg18) #5, !dbg !1429
  unreachable, !dbg !1429

panic20:                                          ; preds = %checkok19
  store i64 8, ptr %taddr21, align 8
  %87 = insertvalue %any undef, ptr %taddr21, 0
  %88 = insertvalue %any %87, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %14, ptr %taddr22, align 8
  %89 = insertvalue %any undef, ptr %taddr22, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg25, align 8
  store %any %88, ptr %varargslots26, align 16
  %ptradd27 = getelementptr inbounds i8, ptr %varargslots26, i64 16
  store %any %90, ptr %ptradd27, align 16
  %91 = insertvalue %"any[]" undef, ptr %varargslots26, 0
  %"$$temp28" = insertvalue %"any[]" %91, i64 2, 1
  store %"any[]" %"$$temp28", ptr %indirectarg29, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 512, ptr align 8 %indirectarg29) #5, !dbg !1429
  unreachable, !dbg !1429

panic73:                                          ; preds = %noerr_block
  store i64 %sext71, ptr %taddr74, align 8
  %92 = insertvalue %any undef, ptr %taddr74, 0
  %93 = insertvalue %any %92, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg77, align 8
  store %any %93, ptr %varargslots78, align 16
  %94 = insertvalue %"any[]" undef, ptr %varargslots78, 0
  %"$$temp79" = insertvalue %"any[]" %94, i64 1, 1
  store %"any[]" %"$$temp79", ptr %indirectarg80, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, i32 516, ptr align 8 %indirectarg80) #5, !dbg !1444
  unreachable, !dbg !1444

panic83:                                          ; preds = %checkok81
  store i64 %48, ptr %taddr84, align 8
  %95 = insertvalue %any undef, ptr %taddr84, 0
  %96 = insertvalue %any %95, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext71, ptr %taddr85, align 8
  %97 = insertvalue %any undef, ptr %taddr85, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg88, align 8
  store %any %96, ptr %varargslots89, align 16
  %ptradd90 = getelementptr inbounds i8, ptr %varargslots89, i64 16
  store %any %98, ptr %ptradd90, align 16
  %99 = insertvalue %"any[]" undef, ptr %varargslots89, 0
  %"$$temp91" = insertvalue %"any[]" %99, i64 2, 1
  store %"any[]" %"$$temp91", ptr %indirectarg92, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, i32 516, ptr align 8 %indirectarg92) #5, !dbg !1444
  unreachable, !dbg !1444

panic95:                                          ; preds = %checkok93
  store i64 8, ptr %taddr96, align 8
  %100 = insertvalue %any undef, ptr %taddr96, 0
  %101 = insertvalue %any %100, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %54, ptr %taddr97, align 8
  %102 = insertvalue %any undef, ptr %taddr97, 0
  %103 = insertvalue %any %102, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg98, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg100, align 8
  store %any %101, ptr %varargslots101, align 16
  %ptradd102 = getelementptr inbounds i8, ptr %varargslots101, i64 16
  store %any %103, ptr %ptradd102, align 16
  %104 = insertvalue %"any[]" undef, ptr %varargslots101, 0
  %"$$temp103" = insertvalue %"any[]" %104, i64 2, 1
  store %"any[]" %"$$temp103", ptr %indirectarg104, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg98, ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, i32 516, ptr align 8 %indirectarg104) #5, !dbg !1444
  unreachable, !dbg !1444

panic106:                                         ; preds = %checkok105
  store %"char[]" { ptr @.panic_msg.54, i64 44 }, ptr %indirectarg107, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg109, align 8
  %105 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %105(ptr align 8 %indirectarg107, ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, i32 178) #5, !dbg !1445
  unreachable, !dbg !1445

panic111:                                         ; preds = %checkok110
  store i64 8, ptr %taddr112, align 8
  %106 = insertvalue %any undef, ptr %taddr112, 0
  %107 = insertvalue %any %106, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %61, ptr %taddr113, align 8
  %108 = insertvalue %any undef, ptr %taddr113, 0
  %109 = insertvalue %any %108, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg115, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg116, align 8
  store %any %107, ptr %varargslots117, align 16
  %ptradd118 = getelementptr inbounds i8, ptr %varargslots117, i64 16
  store %any %109, ptr %ptradd118, align 16
  %110 = insertvalue %"any[]" undef, ptr %varargslots117, 0
  %"$$temp119" = insertvalue %"any[]" %110, i64 2, 1
  store %"any[]" %"$$temp119", ptr %indirectarg120, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, ptr align 8 %indirectarg116, i32 178, ptr align 8 %indirectarg120) #5, !dbg !1445
  unreachable, !dbg !1445

panic125:                                         ; preds = %checkok121
  store i64 %sext123, ptr %taddr126, align 8
  %111 = insertvalue %any undef, ptr %taddr126, 0
  %112 = insertvalue %any %111, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg129, align 8
  store %any %112, ptr %varargslots130, align 16
  %113 = insertvalue %"any[]" undef, ptr %varargslots130, 0
  %"$$temp131" = insertvalue %"any[]" %113, i64 1, 1
  store %"any[]" %"$$temp131", ptr %indirectarg132, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, i32 517, ptr align 8 %indirectarg132) #5, !dbg !1447
  unreachable, !dbg !1447

panic135:                                         ; preds = %checkok133
  store i64 %66, ptr %taddr136, align 8
  %114 = insertvalue %any undef, ptr %taddr136, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext123, ptr %taddr137, align 8
  %116 = insertvalue %any undef, ptr %taddr137, 0
  %117 = insertvalue %any %116, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg139, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg140, align 8
  store %any %115, ptr %varargslots141, align 16
  %ptradd142 = getelementptr inbounds i8, ptr %varargslots141, i64 16
  store %any %117, ptr %ptradd142, align 16
  %118 = insertvalue %"any[]" undef, ptr %varargslots141, 0
  %"$$temp143" = insertvalue %"any[]" %118, i64 2, 1
  store %"any[]" %"$$temp143", ptr %indirectarg144, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, ptr align 8 %indirectarg140, i32 517, ptr align 8 %indirectarg144) #5, !dbg !1447
  unreachable, !dbg !1447

panic147:                                         ; preds = %checkok145
  store i64 8, ptr %taddr148, align 8
  %119 = insertvalue %any undef, ptr %taddr148, 0
  %120 = insertvalue %any %119, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %72, ptr %taddr149, align 8
  %121 = insertvalue %any undef, ptr %taddr149, 0
  %122 = insertvalue %any %121, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg150, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg151, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg152, align 8
  store %any %120, ptr %varargslots153, align 16
  %ptradd154 = getelementptr inbounds i8, ptr %varargslots153, i64 16
  store %any %122, ptr %ptradd154, align 16
  %123 = insertvalue %"any[]" undef, ptr %varargslots153, 0
  %"$$temp155" = insertvalue %"any[]" %123, i64 2, 1
  store %"any[]" %"$$temp155", ptr %indirectarg156, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg150, ptr align 8 %indirectarg151, ptr align 8 %indirectarg152, i32 517, ptr align 8 %indirectarg156) #5, !dbg !1447
  unreachable, !dbg !1447
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_entry"(ptr %0, ptr %1) #0 !dbg !1449 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %entry3 = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %ptr = alloca ptr, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1452
  %2 = icmp eq ptr %0, null, !dbg !1452
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1452
  br i1 %3, label %panic, label %checkok, !dbg !1452

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1453, !DIExpression(), !1454)
  store ptr %1, ptr %entry3, align 8
    #dbg_declare(ptr %entry3, !1455, !DIExpression(), !1454)
  %4 = load ptr, ptr %self, align 8, !dbg !1456
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !1456
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd, i32 16, i1 false)
  %5 = load ptr, ptr %entry3, align 8, !dbg !1456
  %ptradd4 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !1456
  %6 = load ptr, ptr %ptradd4, align 8
  store ptr %6, ptr %ptr, align 8
  %7 = load ptr, ptr %ptr, align 8, !dbg !1457
  %i2nb = icmp eq ptr %7, null, !dbg !1457
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1457

if.then:                                          ; preds = %checkok
  br label %expr_block.exit, !dbg !1457

if.exit:                                          ; preds = %checkok
  %8 = load ptr, ptr %ptr, align 8, !dbg !1459
  %neq = icmp ne ptr %8, null, !dbg !1459
  br i1 %neq, label %assert_ok, label %assert_fail, !dbg !1459

assert_fail:                                      ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.67, i64 75 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.72, i64 10 }, ptr %indirectarg7, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 123) #5, !dbg !1459
  unreachable, !dbg !1459

assert_ok:                                        ; preds = %if.exit
  %ptradd8 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !1459
  %10 = load i64, ptr %ptradd8, align 8, !dbg !1459
  %11 = inttoptr i64 %10 to ptr, !dbg !1459
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1452
  %12 = icmp eq ptr %11, %type, !dbg !1452
  br i1 %12, label %cache_hit, label %cache_miss, !dbg !1452

cache_miss:                                       ; preds = %assert_ok
  %ptradd9 = getelementptr inbounds i8, ptr %11, i64 16, !dbg !1452
  %13 = load ptr, ptr %ptradd9, align 8, !dbg !1452
  %14 = call ptr @.dyn_search(ptr %13, ptr @"$sel.release"), !dbg !1452
  store ptr %14, ptr %.inlinecache, align 8, !dbg !1452
  store ptr %11, ptr %.cachedtype, align 8, !dbg !1452
  br label %15, !dbg !1452

cache_hit:                                        ; preds = %assert_ok
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1452
  br label %15, !dbg !1452

15:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %14, %cache_miss ], !dbg !1452
  %16 = icmp eq ptr %fn_phi, null, !dbg !1452
  br i1 %16, label %missing_function, label %match, !dbg !1452

missing_function:                                 ; preds = %15
  store %"char[]" { ptr @.panic_msg.68, i64 44 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.72, i64 10 }, ptr %indirectarg12, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 123) #5, !dbg !1459
  unreachable, !dbg !1459

match:                                            ; preds = %15
  %18 = load ptr, ptr %allocator, align 8, !dbg !1459
  call void %fn_phi(ptr %18, ptr %8, i8 zeroext 0), !dbg !1459
  br label %expr_block.exit, !dbg !1459

expr_block.exit:                                  ; preds = %match, %if.then
  %19 = load ptr, ptr %entry3, align 8, !dbg !1460
  %20 = load ptr, ptr %self, align 8, !dbg !1460
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMap.free_internal"(ptr %20, ptr %19) #6, !dbg !1460
  ret void, !dbg !1460

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.72, i64 10 }, ptr %indirectarg2, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 521) #5, !dbg !1454
  unreachable, !dbg !1454
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.get"(ptr noalias sret(%Entry) align 8 %0, ptr %1, i64 %2) #0 comdat !dbg !1461 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %idx = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg33 = alloca %"any[]", align 8
  %taddr36 = alloca i64, align 8
  %taddr37 = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [2 x %any], align 16
  %indirectarg44 = alloca %"any[]", align 8
  %taddr47 = alloca i64, align 8
  %taddr48 = alloca i64, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %varargslots52 = alloca [2 x %any], align 16
  %indirectarg55 = alloca %"any[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %taddr71 = alloca i64, align 8
  %taddr72 = alloca i64, align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %varargslots76 = alloca [2 x %any], align 16
  %indirectarg79 = alloca %"any[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !1465
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1465
  br i1 %4, label %panic, label %checkok, !dbg !1465

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1466, !DIExpression(), !1467)
  store i64 %2, ptr %idx, align 8
    #dbg_declare(ptr %idx, !1468, !DIExpression(), !1467)
  %5 = load i64, ptr %idx, align 8, !dbg !1469
  %6 = load ptr, ptr %self, align 8, !dbg !1469
  %7 = load ptr, ptr %6, align 8, !dbg !1469
  %ptradd = getelementptr inbounds i8, ptr %7, i64 32, !dbg !1469
  %8 = load i32, ptr %ptradd, align 8, !dbg !1469
  %zext = zext i32 %8 to i64, !dbg !1469
  %lt = icmp ult i64 %5, %zext, !dbg !1469
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1469

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.73, i64 41 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg5, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 543) #5, !dbg !1469
  unreachable, !dbg !1469

assert_ok:                                        ; preds = %checkok
  %10 = load i64, ptr %idx, align 8, !dbg !1471
  %11 = load ptr, ptr %self, align 8, !dbg !1471
  %ptradd6 = getelementptr inbounds i8, ptr %11, i64 12, !dbg !1471
  %12 = load i32, ptr %ptradd6, align 4, !dbg !1471
  %sext = sext i32 %12 to i64, !dbg !1471
  %gt = icmp sgt i64 %sext, %10, !dbg !1471
  %check = icmp sge i64 %10, 0, !dbg !1471
  %siui-gt = and i1 %check, %gt, !dbg !1471
  br i1 %siui-gt, label %if.then, label %if.exit, !dbg !1471

if.then:                                          ; preds = %assert_ok
  %13 = load ptr, ptr %self, align 8, !dbg !1472
  %ptradd7 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1472
  store i32 0, ptr %ptradd7, align 8, !dbg !1472
  %14 = load ptr, ptr %self, align 8, !dbg !1474
  %ptradd8 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !1474
  store ptr null, ptr %ptradd8, align 8, !dbg !1474
  %15 = load ptr, ptr %self, align 8, !dbg !1475
  %ptradd9 = getelementptr inbounds i8, ptr %15, i64 12, !dbg !1475
  store i32 -1, ptr %ptradd9, align 4, !dbg !1475
  br label %if.exit, !dbg !1475

if.exit:                                          ; preds = %if.then, %assert_ok
  br label %loop.cond, !dbg !1476

loop.cond:                                        ; preds = %if.exit63, %if.exit22, %if.exit
  %16 = load ptr, ptr %self, align 8, !dbg !1477
  %ptradd10 = getelementptr inbounds i8, ptr %16, i64 12, !dbg !1477
  %17 = load i32, ptr %ptradd10, align 4, !dbg !1477
  %sext11 = sext i32 %17 to i64, !dbg !1477
  %18 = load i64, ptr %idx, align 8, !dbg !1477
  %neq = icmp ne i64 %sext11, %18, !dbg !1477
  %check12 = icmp slt i64 %sext11, 0, !dbg !1477
  %siui-ne = or i1 %check12, %neq, !dbg !1477
  br i1 %siui-ne, label %loop.body, label %loop.exit, !dbg !1477

loop.body:                                        ; preds = %loop.cond
  %19 = load ptr, ptr %self, align 8, !dbg !1479
  %ptradd13 = getelementptr inbounds i8, ptr %19, i64 16, !dbg !1479
  %20 = load ptr, ptr %ptradd13, align 8, !dbg !1479
  %i2b = icmp ne ptr %20, null, !dbg !1479
  br i1 %i2b, label %if.then14, label %if.exit23, !dbg !1479

if.then14:                                        ; preds = %loop.body
  %21 = load ptr, ptr %self, align 8, !dbg !1481
  %ptradd15 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !1481
  %22 = load ptr, ptr %ptradd15, align 8, !dbg !1481
  %ptradd16 = getelementptr inbounds i8, ptr %22, i64 32, !dbg !1481
  %23 = load ptr, ptr %self, align 8, !dbg !1481
  %ptradd17 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !1481
  %24 = load ptr, ptr %ptradd16, align 8, !dbg !1481
  store ptr %24, ptr %ptradd17, align 8, !dbg !1481
  %25 = load ptr, ptr %self, align 8, !dbg !1483
  %ptradd18 = getelementptr inbounds i8, ptr %25, i64 16, !dbg !1483
  %26 = load ptr, ptr %ptradd18, align 8, !dbg !1483
  %i2b19 = icmp ne ptr %26, null, !dbg !1483
  br i1 %i2b19, label %if.then20, label %if.exit22, !dbg !1483

if.then20:                                        ; preds = %if.then14
  %27 = load ptr, ptr %self, align 8, !dbg !1483
  %ptradd21 = getelementptr inbounds i8, ptr %27, i64 12, !dbg !1483
  %28 = load i32, ptr %ptradd21, align 4, !dbg !1483
  %add = add i32 %28, 1, !dbg !1483
  store i32 %add, ptr %ptradd21, align 4, !dbg !1483
  br label %if.exit22, !dbg !1483

if.exit22:                                        ; preds = %if.then20, %if.then14
  br label %loop.cond, !dbg !1484

if.exit23:                                        ; preds = %loop.body
  %29 = load ptr, ptr %self, align 8, !dbg !1485
  %30 = load ptr, ptr %29, align 8, !dbg !1485
  %ptradd24 = getelementptr inbounds i8, ptr %30, i64 8, !dbg !1485
  %31 = load i64, ptr %ptradd24, align 8, !dbg !1485
  %32 = load ptr, ptr %30, align 8, !dbg !1485
  %33 = load ptr, ptr %self, align 8, !dbg !1485
  %ptradd25 = getelementptr inbounds i8, ptr %33, i64 8, !dbg !1485
  %34 = load i32, ptr %ptradd25, align 8, !dbg !1485
  %add26 = add i32 %34, 1, !dbg !1485
  store i32 %add26, ptr %ptradd25, align 8, !dbg !1485
  %sext27 = sext i32 %34 to i64, !dbg !1485
  %lt28 = icmp slt i64 %sext27, 0, !dbg !1485
  %35 = call i1 @llvm.expect.i1(i1 %lt28, i1 false), !dbg !1485
  br i1 %35, label %panic29, label %checkok34, !dbg !1485

checkok34:                                        ; preds = %if.exit23
  %ge = icmp sge i64 %sext27, %31, !dbg !1485
  %36 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1485
  br i1 %36, label %panic35, label %checkok45, !dbg !1485

checkok45:                                        ; preds = %checkok34
  %ptroffset = getelementptr inbounds [8 x i8], ptr %32, i64 %sext27, !dbg !1485
  %37 = ptrtoint ptr %ptroffset to i64, !dbg !1485
  %38 = urem i64 %37, 8, !dbg !1485
  %39 = icmp ne i64 %38, 0, !dbg !1485
  %40 = call i1 @llvm.expect.i1(i1 %39, i1 false), !dbg !1485
  br i1 %40, label %panic46, label %checkok56, !dbg !1485

checkok56:                                        ; preds = %checkok45
  %41 = load ptr, ptr %self, align 8, !dbg !1485
  %ptradd57 = getelementptr inbounds i8, ptr %41, i64 16, !dbg !1485
  %42 = load ptr, ptr %ptroffset, align 8, !dbg !1485
  store ptr %42, ptr %ptradd57, align 8, !dbg !1485
  %43 = load ptr, ptr %self, align 8, !dbg !1486
  %ptradd58 = getelementptr inbounds i8, ptr %43, i64 16, !dbg !1486
  %44 = load ptr, ptr %ptradd58, align 8, !dbg !1486
  %i2b59 = icmp ne ptr %44, null, !dbg !1486
  br i1 %i2b59, label %if.then60, label %if.exit63, !dbg !1486

if.then60:                                        ; preds = %checkok56
  %45 = load ptr, ptr %self, align 8, !dbg !1486
  %ptradd61 = getelementptr inbounds i8, ptr %45, i64 12, !dbg !1486
  %46 = load i32, ptr %ptradd61, align 4, !dbg !1486
  %add62 = add i32 %46, 1, !dbg !1486
  store i32 %add62, ptr %ptradd61, align 4, !dbg !1486
  br label %if.exit63, !dbg !1486

if.exit63:                                        ; preds = %if.then60, %checkok56
  br label %loop.cond, !dbg !1486

loop.exit:                                        ; preds = %loop.cond
  %47 = load ptr, ptr %self, align 8, !dbg !1487
  %ptradd64 = getelementptr inbounds i8, ptr %47, i64 16, !dbg !1487
  %48 = load ptr, ptr %ptradd64, align 8, !dbg !1487
  %checknull = icmp eq ptr %48, null, !dbg !1487
  %49 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1487
  br i1 %49, label %panic65, label %checkok69, !dbg !1487

checkok69:                                        ; preds = %loop.exit
  %50 = ptrtoint ptr %48 to i64, !dbg !1487
  %51 = urem i64 %50, 8, !dbg !1487
  %52 = icmp ne i64 %51, 0, !dbg !1487
  %53 = call i1 @llvm.expect.i1(i1 %52, i1 false), !dbg !1487
  br i1 %53, label %panic70, label %checkok80, !dbg !1487

checkok80:                                        ; preds = %checkok69
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %48, i32 40, i1 false), !dbg !1487
  ret void, !dbg !1487

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 545) #5, !dbg !1467
  unreachable, !dbg !1467

panic29:                                          ; preds = %if.exit23
  store i64 %sext27, ptr %taddr, align 8
  %55 = insertvalue %any undef, ptr %taddr, 0
  %56 = insertvalue %any %55, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg32, align 8
  store %any %56, ptr %varargslots, align 16
  %57 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %57, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg33, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 561, ptr align 8 %indirectarg33) #5, !dbg !1485
  unreachable, !dbg !1485

panic35:                                          ; preds = %checkok34
  store i64 %31, ptr %taddr36, align 8
  %58 = insertvalue %any undef, ptr %taddr36, 0
  %59 = insertvalue %any %58, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext27, ptr %taddr37, align 8
  %60 = insertvalue %any undef, ptr %taddr37, 0
  %61 = insertvalue %any %60, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg40, align 8
  store %any %59, ptr %varargslots41, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %varargslots41, i64 16
  store %any %61, ptr %ptradd42, align 16
  %62 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp43" = insertvalue %"any[]" %62, i64 2, 1
  store %"any[]" %"$$temp43", ptr %indirectarg44, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 561, ptr align 8 %indirectarg44) #5, !dbg !1485
  unreachable, !dbg !1485

panic46:                                          ; preds = %checkok45
  store i64 8, ptr %taddr47, align 8
  %63 = insertvalue %any undef, ptr %taddr47, 0
  %64 = insertvalue %any %63, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %38, ptr %taddr48, align 8
  %65 = insertvalue %any undef, ptr %taddr48, 0
  %66 = insertvalue %any %65, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg51, align 8
  store %any %64, ptr %varargslots52, align 16
  %ptradd53 = getelementptr inbounds i8, ptr %varargslots52, i64 16
  store %any %66, ptr %ptradd53, align 16
  %67 = insertvalue %"any[]" undef, ptr %varargslots52, 0
  %"$$temp54" = insertvalue %"any[]" %67, i64 2, 1
  store %"any[]" %"$$temp54", ptr %indirectarg55, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 561, ptr align 8 %indirectarg55) #5, !dbg !1485
  unreachable, !dbg !1485

panic65:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.74, i64 59 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg68, align 8
  %68 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %68(ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, i32 564) #5, !dbg !1487
  unreachable, !dbg !1487

panic70:                                          ; preds = %checkok69
  store i64 8, ptr %taddr71, align 8
  %69 = insertvalue %any undef, ptr %taddr71, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %51, ptr %taddr72, align 8
  %71 = insertvalue %any undef, ptr %taddr72, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg75, align 8
  store %any %70, ptr %varargslots76, align 16
  %ptradd77 = getelementptr inbounds i8, ptr %varargslots76, i64 16
  store %any %72, ptr %ptradd77, align 16
  %73 = insertvalue %"any[]" undef, ptr %varargslots76, 0
  %"$$temp78" = insertvalue %"any[]" %73, i64 2, 1
  store %"any[]" %"$$temp78", ptr %indirectarg79, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 564, ptr align 8 %indirectarg79) #5, !dbg !1487
  unreachable, !dbg !1487
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator.get"(ptr %0, i64 %1) #0 comdat !dbg !1488 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %idx = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %sretparam = alloca %Entry, align 8
  %2 = icmp eq ptr %0, null, !dbg !1492
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1492
  br i1 %3, label %panic, label %checkok, !dbg !1492

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1493, !DIExpression(), !1494)
  store i64 %1, ptr %idx, align 8
    #dbg_declare(ptr %idx, !1495, !DIExpression(), !1494)
  %4 = load ptr, ptr %self, align 8, !dbg !1496
  %5 = load i64, ptr %idx, align 8, !dbg !1496
  %6 = load ptr, ptr %4, align 8, !dbg !1497
  %ptradd = getelementptr inbounds i8, ptr %6, i64 32, !dbg !1497
  %7 = load i32, ptr %ptradd, align 8, !dbg !1497
  %zext = zext i32 %7 to i64, !dbg !1497
  %lt = icmp ult i64 %5, %zext, !dbg !1496
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1496

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.73, i64 41 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 569) #5, !dbg !1496
  unreachable, !dbg !1496

assert_ok:                                        ; preds = %checkok
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.get"(ptr sret(%Entry) align 8 %sretparam, ptr %4, i64 %5), !dbg !1496
  %ptradd6 = getelementptr inbounds i8, ptr %sretparam, i64 24, !dbg !1496
  %9 = load ptr, ptr %ptradd6, align 8, !dbg !1496
  ret ptr %9, !dbg !1496

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 567) #5, !dbg !1494
  unreachable, !dbg !1494
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator.get"(ptr noalias sret(%"char[]") align 8 %0, ptr %1, i64 %2) #0 comdat !dbg !1498 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %idx = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %sretparam = alloca %Entry, align 8
  %3 = icmp eq ptr %1, null, !dbg !1502
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1502
  br i1 %4, label %panic, label %checkok, !dbg !1502

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1503, !DIExpression(), !1504)
  store i64 %2, ptr %idx, align 8
    #dbg_declare(ptr %idx, !1505, !DIExpression(), !1504)
  %5 = load ptr, ptr %self, align 8, !dbg !1506
  %6 = load i64, ptr %idx, align 8, !dbg !1506
  %7 = load ptr, ptr %5, align 8, !dbg !1507
  %ptradd = getelementptr inbounds i8, ptr %7, i64 32, !dbg !1507
  %8 = load i32, ptr %ptradd, align 8, !dbg !1507
  %zext = zext i32 %8 to i64, !dbg !1507
  %lt = icmp ult i64 %6, %zext, !dbg !1506
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1506

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.73, i64 41 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg5, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 574) #5, !dbg !1506
  unreachable, !dbg !1506

assert_ok:                                        ; preds = %checkok
  call void @"std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.get"(ptr sret(%Entry) align 8 %sretparam, ptr %5, i64 %6), !dbg !1506
  %ptradd6 = getelementptr inbounds i8, ptr %sretparam, i64 8, !dbg !1506
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %ptradd6, i32 16, i1 false), !dbg !1506
  ret void, !dbg !1506

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 572) #5, !dbg !1504
  unreachable, !dbg !1504
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator.len"(ptr align 8 %0) #0 comdat !dbg !1508 {
entry:
    #dbg_declare(ptr %0, !1511, !DIExpression(), !1512)
  %1 = load ptr, ptr %0, align 8, !dbg !1512
  %ptradd = getelementptr inbounds i8, ptr %1, i64 32, !dbg !1512
  %2 = load i32, ptr %ptradd, align 8, !dbg !1512
  %zext = zext i32 %2 to i64, !dbg !1512
  ret i64 %zext, !dbg !1512
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator.len"(ptr align 8 %0) #0 comdat !dbg !1513 {
entry:
    #dbg_declare(ptr %0, !1516, !DIExpression(), !1517)
  %1 = load ptr, ptr %0, align 8, !dbg !1517
  %ptradd = getelementptr inbounds i8, ptr %1, i64 32, !dbg !1517
  %2 = load i32, ptr %ptradd, align 8, !dbg !1517
  %zext = zext i32 %2 to i64, !dbg !1517
  ret i64 %zext, !dbg !1517
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.len"(ptr align 8 %0) #0 comdat !dbg !1518 {
entry:
    #dbg_declare(ptr %0, !1521, !DIExpression(), !1522)
  %1 = load ptr, ptr %0, align 8, !dbg !1522
  %ptradd = getelementptr inbounds i8, ptr %1, i64 32, !dbg !1522
  %2 = load i32, ptr %ptradd, align 8, !dbg !1522
  %zext = zext i32 %2 to i64, !dbg !1522
  ret i64 %zext, !dbg !1522
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.HashMap.has_value"(ptr %0, ptr %1) #0 comdat !dbg !1523 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %v = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr9 = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %entry17 = alloca ptr, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %taddr25 = alloca i64, align 8
  %taddr26 = alloca i64, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %varargslots30 = alloca [2 x %any], align 16
  %indirectarg33 = alloca %"any[]", align 8
  %taddr37 = alloca i64, align 8
  %taddr38 = alloca i64, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots42 = alloca [2 x %any], align 16
  %indirectarg45 = alloca %"any[]", align 8
  %taddr48 = alloca i64, align 8
  %taddr49 = alloca i64, align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %varargslots53 = alloca [2 x %any], align 16
  %indirectarg56 = alloca %"any[]", align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  %2 = icmp eq ptr %0, null, !dbg !1526
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1526
  br i1 %3, label %panic, label %checkok, !dbg !1526

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1527, !DIExpression(), !1528)
  store ptr %1, ptr %v, align 8
    #dbg_declare(ptr %v, !1529, !DIExpression(), !1528)
  %4 = load ptr, ptr %map, align 8, !dbg !1530
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !1530
  %5 = load i32, ptr %ptradd, align 8, !dbg !1530
  %i2nb = icmp eq i32 %5, 0, !dbg !1530
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1530

if.then:                                          ; preds = %checkok
  ret i8 0, !dbg !1530

if.exit:                                          ; preds = %checkok
  %6 = load ptr, ptr %map, align 8, !dbg !1531
  %checknull = icmp eq ptr %6, null, !dbg !1531
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1531
  br i1 %7, label %panic3, label %checkok7, !dbg !1531

checkok7:                                         ; preds = %if.exit
  %8 = ptrtoint ptr %6 to i64, !dbg !1531
  %9 = urem i64 %8, 8, !dbg !1531
  %10 = icmp ne i64 %9, 0, !dbg !1531
  %11 = call i1 @llvm.expect.i1(i1 %10, i1 false), !dbg !1531
  br i1 %11, label %panic8, label %checkok15, !dbg !1531

checkok15:                                        ; preds = %checkok7
  %ptradd16 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1531
  %12 = load i64, ptr %ptradd16, align 8, !dbg !1531
    #dbg_declare(ptr %.anon, !1533, !DIExpression(), !1531)
  store i64 0, ptr %.anon, align 8, !dbg !1531
  br label %loop.cond, !dbg !1531

loop.cond:                                        ; preds = %loop.exit, %checkok15
  %13 = load i64, ptr %.anon, align 8, !dbg !1531
  %lt = icmp ult i64 %13, %12, !dbg !1531
  br i1 %lt, label %loop.body, label %loop.exit64, !dbg !1531

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry17, !1534, !DIExpression(), !1536)
  %checknull18 = icmp eq ptr %6, null, !dbg !1536
  %14 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !1536
  br i1 %14, label %panic19, label %checkok23, !dbg !1536

checkok23:                                        ; preds = %loop.body
  %15 = ptrtoint ptr %6 to i64, !dbg !1536
  %16 = urem i64 %15, 8, !dbg !1536
  %17 = icmp ne i64 %16, 0, !dbg !1536
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 false), !dbg !1536
  br i1 %18, label %panic24, label %checkok34, !dbg !1536

checkok34:                                        ; preds = %checkok23
  %ptradd35 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1536
  %19 = load i64, ptr %ptradd35, align 8, !dbg !1536
  %20 = load ptr, ptr %6, align 8, !dbg !1536
  %21 = load i64, ptr %.anon, align 8, !dbg !1536
  %ge = icmp uge i64 %21, %19, !dbg !1536
  %22 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1536
  br i1 %22, label %panic36, label %checkok46, !dbg !1536

checkok46:                                        ; preds = %checkok34
  %ptroffset = getelementptr inbounds [8 x i8], ptr %20, i64 %21, !dbg !1536
  %23 = ptrtoint ptr %ptroffset to i64, !dbg !1536
  %24 = urem i64 %23, 8, !dbg !1536
  %25 = icmp ne i64 %24, 0, !dbg !1536
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 false), !dbg !1536
  br i1 %26, label %panic47, label %checkok57, !dbg !1536

checkok57:                                        ; preds = %checkok46
  %27 = load ptr, ptr %ptroffset, align 8, !dbg !1536
  store ptr %27, ptr %entry17, align 8, !dbg !1536
  br label %loop.cond58, !dbg !1537

loop.cond58:                                      ; preds = %if.exit62, %checkok57
  %28 = load ptr, ptr %entry17, align 8, !dbg !1539
  %i2b = icmp ne ptr %28, null, !dbg !1539
  br i1 %i2b, label %loop.body59, label %loop.exit, !dbg !1539

loop.body59:                                      ; preds = %loop.cond58
  %29 = load ptr, ptr %v, align 8
  store ptr %29, ptr %a, align 8
  %30 = load ptr, ptr %entry17, align 8, !dbg !1541
  %ptradd60 = getelementptr inbounds i8, ptr %30, i64 24, !dbg !1541
  %31 = load ptr, ptr %ptradd60, align 8
  store ptr %31, ptr %b, align 8
  %32 = load ptr, ptr %a, align 8, !dbg !1543
  %33 = load ptr, ptr %b, align 8, !dbg !1543
  %eq = icmp eq ptr %32, %33, !dbg !1543
  br i1 %eq, label %if.then61, label %if.exit62, !dbg !1543

if.then61:                                        ; preds = %loop.body59
  ret i8 1, !dbg !1541

if.exit62:                                        ; preds = %loop.body59
  %34 = load ptr, ptr %entry17, align 8, !dbg !1545
  %ptradd63 = getelementptr inbounds i8, ptr %34, i64 32, !dbg !1545
  %35 = load ptr, ptr %ptradd63, align 8, !dbg !1545
  store ptr %35, ptr %entry17, align 8, !dbg !1545
  br label %loop.cond58, !dbg !1545

loop.exit:                                        ; preds = %loop.cond58
  %36 = load i64, ptr %.anon, align 8, !dbg !1531
  %addnuw = add nuw i64 %36, 1, !dbg !1531
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1531
  br label %loop.cond, !dbg !1531

loop.exit64:                                      ; preds = %loop.cond
  ret i8 0, !dbg !1546

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg2, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 356) #5, !dbg !1528
  unreachable, !dbg !1528

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg6, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 359) #5, !dbg !1531
  unreachable, !dbg !1531

panic8:                                           ; preds = %checkok7
  store i64 8, ptr %taddr, align 8
  %39 = insertvalue %any undef, ptr %taddr, 0
  %40 = insertvalue %any %39, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %9, ptr %taddr9, align 8
  %41 = insertvalue %any undef, ptr %taddr9, 0
  %42 = insertvalue %any %41, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg12, align 8
  store %any %40, ptr %varargslots, align 16
  %ptradd13 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %42, ptr %ptradd13, align 16
  %43 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %43, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 359, ptr align 8 %indirectarg14) #5, !dbg !1531
  unreachable, !dbg !1531

panic19:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg22, align 8
  %44 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %44(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 359) #5, !dbg !1536
  unreachable, !dbg !1536

panic24:                                          ; preds = %checkok23
  store i64 8, ptr %taddr25, align 8
  %45 = insertvalue %any undef, ptr %taddr25, 0
  %46 = insertvalue %any %45, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %16, ptr %taddr26, align 8
  %47 = insertvalue %any undef, ptr %taddr26, 0
  %48 = insertvalue %any %47, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg29, align 8
  store %any %46, ptr %varargslots30, align 16
  %ptradd31 = getelementptr inbounds i8, ptr %varargslots30, i64 16
  store %any %48, ptr %ptradd31, align 16
  %49 = insertvalue %"any[]" undef, ptr %varargslots30, 0
  %"$$temp32" = insertvalue %"any[]" %49, i64 2, 1
  store %"any[]" %"$$temp32", ptr %indirectarg33, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 359, ptr align 8 %indirectarg33) #5, !dbg !1536
  unreachable, !dbg !1536

panic36:                                          ; preds = %checkok34
  store i64 %19, ptr %taddr37, align 8
  %50 = insertvalue %any undef, ptr %taddr37, 0
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %21, ptr %taddr38, align 8
  %52 = insertvalue %any undef, ptr %taddr38, 0
  %53 = insertvalue %any %52, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg41, align 8
  store %any %51, ptr %varargslots42, align 16
  %ptradd43 = getelementptr inbounds i8, ptr %varargslots42, i64 16
  store %any %53, ptr %ptradd43, align 16
  %54 = insertvalue %"any[]" undef, ptr %varargslots42, 0
  %"$$temp44" = insertvalue %"any[]" %54, i64 2, 1
  store %"any[]" %"$$temp44", ptr %indirectarg45, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 359, ptr align 8 %indirectarg45) #5, !dbg !1536
  unreachable, !dbg !1536

panic47:                                          ; preds = %checkok46
  store i64 8, ptr %taddr48, align 8
  %55 = insertvalue %any undef, ptr %taddr48, 0
  %56 = insertvalue %any %55, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %24, ptr %taddr49, align 8
  %57 = insertvalue %any undef, ptr %taddr49, 0
  %58 = insertvalue %any %57, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file, i64 10 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg52, align 8
  store %any %56, ptr %varargslots53, align 16
  %ptradd54 = getelementptr inbounds i8, ptr %varargslots53, i64 16
  store %any %58, ptr %ptradd54, align 16
  %59 = insertvalue %"any[]" undef, ptr %varargslots53, 0
  %"$$temp55" = insertvalue %"any[]" %59, i64 2, 1
  store %"any[]" %"$$temp55", ptr %indirectarg56, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 359, ptr align 8 %indirectarg56) #5, !dbg !1536
  unreachable, !dbg !1536
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %0) #0 !dbg !1547 {
entry:
  %hash = alloca i32, align 4
  store i32 %0, ptr %hash, align 4
    #dbg_declare(ptr %hash, !1550, !DIExpression(), !1551)
  %1 = load i32, ptr %hash, align 4, !dbg !1552
  %2 = load i32, ptr %hash, align 4, !dbg !1552
  %lshr = lshr i32 %2, 20, !dbg !1552
  %3 = freeze i32 %lshr, !dbg !1552
  %4 = load i32, ptr %hash, align 4, !dbg !1552
  %lshr1 = lshr i32 %4, 12, !dbg !1552
  %5 = freeze i32 %lshr1, !dbg !1552
  %xor = xor i32 %3, %5, !dbg !1552
  %xor2 = xor i32 %1, %xor, !dbg !1552
  store i32 %xor2, ptr %hash, align 4, !dbg !1552
  %6 = load i32, ptr %hash, align 4, !dbg !1553
  %7 = load i32, ptr %hash, align 4, !dbg !1553
  %lshr3 = lshr i32 %7, 7, !dbg !1553
  %8 = freeze i32 %lshr3, !dbg !1553
  %9 = load i32, ptr %hash, align 4, !dbg !1553
  %lshr4 = lshr i32 %9, 4, !dbg !1553
  %10 = freeze i32 %lshr4, !dbg !1553
  %xor5 = xor i32 %8, %10, !dbg !1553
  %xor6 = xor i32 %6, %xor5, !dbg !1553
  ret i32 %xor6, !dbg !1553
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init"(ptr %0, ptr align 8 %1, i64 %2, float %3) #0 comdat !dbg !1554 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i64, align 8
  %load_factor = alloca float, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator25 = alloca %any, align 8
  %elements26 = alloca i64, align 8
  %allocator27 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x28 = alloca i64, align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr55 = alloca i64, align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg59 = alloca %"any[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %varargslots65 = alloca [1 x %any], align 16
  %indirectarg67 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1558
  %4 = icmp eq ptr %0, null, !dbg !1558
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !1558
  br i1 %5, label %panic, label %checkok, !dbg !1558

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1559, !DIExpression(), !1560)
    #dbg_declare(ptr %1, !1561, !DIExpression(), !1560)
  store i64 %2, ptr %capacity, align 8
    #dbg_declare(ptr %capacity, !1562, !DIExpression(), !1560)
  store float %3, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !1563, !DIExpression(), !1560)
  %6 = load i64, ptr %capacity, align 8, !dbg !1564
  %lt = icmp ult i64 0, %6, !dbg !1564
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1564

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 37) #5, !dbg !1564
  unreachable, !dbg !1564

assert_ok:                                        ; preds = %checkok
  %8 = load float, ptr %load_factor, align 4, !dbg !1566
  %fpfpext = fpext float %8 to double, !dbg !1566
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !1566
  br i1 %gt, label %assert_ok10, label %assert_fail6, !dbg !1566

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 38) #5, !dbg !1566
  unreachable, !dbg !1566

assert_ok10:                                      ; preds = %assert_ok
  %10 = load ptr, ptr %self, align 8, !dbg !1567
  %11 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %10), !dbg !1567
  %12 = trunc i8 %11 to i1, !dbg !1567
  %not = xor i1 %12, true, !dbg !1567
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !1567

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg14, align 8
  %13 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %13(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 39) #5, !dbg !1567
  unreachable, !dbg !1567

assert_ok15:                                      ; preds = %assert_ok10
  %14 = load i64, ptr %capacity, align 8, !dbg !1568
  %lt16 = icmp ult i64 %14, 2147483648, !dbg !1568
  br i1 %lt16, label %assert_ok21, label %assert_fail17, !dbg !1568

assert_fail17:                                    ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg20, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 40) #5, !dbg !1568
  unreachable, !dbg !1568

assert_ok21:                                      ; preds = %assert_ok15
  %16 = load i64, ptr %capacity, align 8
  store i64 %16, ptr %x, align 8
    #dbg_declare(ptr %y, !1569, !DIExpression(), !1571)
  store i64 1, ptr %y, align 8, !dbg !1571
  br label %loop.cond, !dbg !1573

loop.cond:                                        ; preds = %loop.body, %assert_ok21
  %17 = load i64, ptr %y, align 8, !dbg !1574
  %18 = load i64, ptr %x, align 8, !dbg !1574
  %lt22 = icmp ult i64 %17, %18, !dbg !1574
  br i1 %lt22, label %loop.body, label %loop.exit, !dbg !1574

loop.body:                                        ; preds = %loop.cond
  %19 = load i64, ptr %y, align 8, !dbg !1574
  %20 = load i64, ptr %y, align 8, !dbg !1574
  %add = add i64 %19, %20, !dbg !1574
  store i64 %add, ptr %y, align 8, !dbg !1574
  br label %loop.cond, !dbg !1574

loop.exit:                                        ; preds = %loop.cond
  %21 = load i64, ptr %y, align 8, !dbg !1576
  store i64 %21, ptr %capacity, align 8, !dbg !1576
  %22 = load ptr, ptr %self, align 8, !dbg !1577
  %ptradd = getelementptr inbounds i8, ptr %22, i64 16, !dbg !1577
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd, ptr align 8 %1, i32 16, i1 false), !dbg !1577
  %23 = load ptr, ptr %self, align 8, !dbg !1578
  %ptradd23 = getelementptr inbounds i8, ptr %23, i64 48, !dbg !1578
  %24 = load float, ptr %load_factor, align 4, !dbg !1578
  store float %24, ptr %ptradd23, align 8, !dbg !1578
  %25 = load i64, ptr %capacity, align 8, !dbg !1579
  %uifp = uitofp i64 %25 to float, !dbg !1579
  %26 = load float, ptr %load_factor, align 4, !dbg !1579
  %fmul = fmul float %uifp, %26, !dbg !1579
  %fpui = fptoui float %fmul to i64, !dbg !1579
  %27 = load ptr, ptr %self, align 8, !dbg !1579
  %ptradd24 = getelementptr inbounds i8, ptr %27, i64 40, !dbg !1579
  store i64 %fpui, ptr %ptradd24, align 8, !dbg !1579
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %1, i32 16, i1 false)
  %28 = load i64, ptr %capacity, align 8
  store i64 %28, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator25, ptr align 8 %allocator, i32 16, i1 false)
  %29 = load i64, ptr %elements, align 8
  store i64 %29, ptr %elements26, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator27, ptr align 8 %allocator25, i32 16, i1 false)
  %30 = load i64, ptr %elements26, align 8, !dbg !1580
  %mul = mul i64 8, %30, !dbg !1580
  store i64 %mul, ptr %size, align 8
  %31 = load i64, ptr %size, align 8, !dbg !1585
  %i2nb = icmp eq i64 %31, 0, !dbg !1585
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1585

if.then:                                          ; preds = %loop.exit
  store ptr null, ptr %blockret, align 8, !dbg !1585
  br label %expr_block.exit, !dbg !1585

if.exit:                                          ; preds = %loop.exit
  %32 = load i64, ptr %size, align 8, !dbg !1587
  br i1 true, label %or.phi, label %or.rhs, !dbg !1588

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x28, align 8
  %33 = load i64, ptr %x28, align 8, !dbg !1589
  %neq = icmp ne i64 0, %33, !dbg !1589
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1589

and.rhs:                                          ; preds = %or.rhs
  %34 = load i64, ptr %x28, align 8, !dbg !1589
  %35 = load i64, ptr %x28, align 8, !dbg !1589
  %sub = sub i64 %35, 1, !dbg !1589
  %and = and i64 %34, %sub, !dbg !1589
  %eq = icmp eq i64 %and, 0, !dbg !1589
  br label %and.phi, !dbg !1589

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1589
  br label %or.phi, !dbg !1589

or.phi:                                           ; preds = %and.phi, %if.exit
  %val29 = phi i1 [ true, %if.exit ], [ %val, %and.phi ], !dbg !1589
  br i1 %val29, label %assert_ok34, label %assert_fail30, !dbg !1589

assert_fail30:                                    ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg33, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 98) #5, !dbg !1587
  unreachable, !dbg !1587

assert_ok34:                                      ; preds = %or.phi
  br i1 true, label %assert_ok39, label %assert_fail35, !dbg !1587

assert_fail35:                                    ; preds = %assert_ok34
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg38, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 98) #5, !dbg !1587
  unreachable, !dbg !1587

assert_ok39:                                      ; preds = %assert_ok34
  %lt40 = icmp ult i64 0, %32, !dbg !1587
  br i1 %lt40, label %assert_ok45, label %assert_fail41, !dbg !1587

assert_fail41:                                    ; preds = %assert_ok39
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg44, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 98) #5, !dbg !1587
  unreachable, !dbg !1587

assert_ok45:                                      ; preds = %assert_ok39
  %ptradd46 = getelementptr inbounds i8, ptr %allocator27, i64 8, !dbg !1587
  %39 = load i64, ptr %ptradd46, align 8, !dbg !1587
  %40 = inttoptr i64 %39 to ptr, !dbg !1587
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1558
  %41 = icmp eq ptr %40, %type, !dbg !1558
  br i1 %41, label %cache_hit, label %cache_miss, !dbg !1558

cache_miss:                                       ; preds = %assert_ok45
  %ptradd47 = getelementptr inbounds i8, ptr %40, i64 16, !dbg !1558
  %42 = load ptr, ptr %ptradd47, align 8, !dbg !1558
  %43 = call ptr @.dyn_search(ptr %42, ptr @"$sel.acquire"), !dbg !1558
  store ptr %43, ptr %.inlinecache, align 8, !dbg !1558
  store ptr %40, ptr %.cachedtype, align 8, !dbg !1558
  br label %44, !dbg !1558

cache_hit:                                        ; preds = %assert_ok45
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1558
  br label %44, !dbg !1558

44:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %43, %cache_miss ], !dbg !1558
  %45 = icmp eq ptr %fn_phi, null, !dbg !1558
  br i1 %45, label %missing_function, label %match, !dbg !1558

missing_function:                                 ; preds = %44
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg50, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 98) #5, !dbg !1587
  unreachable, !dbg !1587

match:                                            ; preds = %44
  %47 = load ptr, ptr %allocator27, align 8
  %48 = call i64 %fn_phi(ptr %retparam, ptr %47, i64 %32, i32 1, i64 0), !dbg !1587
  %not_err = icmp eq i64 %48, 0, !dbg !1587
  %49 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1587
  br i1 %49, label %after_check, label %assign_optional, !dbg !1587

assign_optional:                                  ; preds = %match
  store i64 %48, ptr %error_var, align 8, !dbg !1587
  br label %panic_block, !dbg !1587

after_check:                                      ; preds = %match
  %50 = load ptr, ptr %retparam, align 8, !dbg !1587
  store ptr %50, ptr %blockret, align 8, !dbg !1587
  br label %expr_block.exit, !dbg !1587

expr_block.exit:                                  ; preds = %after_check, %if.then
  %51 = load ptr, ptr %blockret, align 8, !dbg !1587
  store ptr %51, ptr %taddr, align 8
  %52 = load ptr, ptr %taddr, align 8
  %53 = load i64, ptr %elements26, align 8, !dbg !1580
  %add51 = add i64 0, %53, !dbg !1580
  %gt52 = icmp ugt i64 0, %add51, !dbg !1580
  %sub53 = sub i64 %add51, 0, !dbg !1580
  %54 = call i1 @llvm.expect.i1(i1 %gt52, i1 false), !dbg !1580
  br i1 %54, label %panic54, label %checkok60, !dbg !1580

checkok60:                                        ; preds = %expr_block.exit
  %size61 = sub i64 %add51, 0, !dbg !1580
  %55 = insertvalue %"LinkedEntry*[]" undef, ptr %52, 0, !dbg !1580
  %56 = insertvalue %"LinkedEntry*[]" %55, i64 %size61, 1, !dbg !1580
  br label %noerr_block, !dbg !1580

panic_block:                                      ; preds = %assign_optional
  %57 = insertvalue %any undef, ptr %error_var, 0, !dbg !1580
  %58 = insertvalue %any %57, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1580
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg64, align 8
  store %any %58, ptr %varargslots65, align 16
  %59 = insertvalue %"any[]" undef, ptr %varargslots65, 0
  %"$$temp66" = insertvalue %"any[]" %59, i64 1, 1
  store %"any[]" %"$$temp66", ptr %indirectarg67, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 262, ptr align 8 %indirectarg67) #5, !dbg !1582
  unreachable, !dbg !1582

noerr_block:                                      ; preds = %checkok60
  %60 = load ptr, ptr %self, align 8, !dbg !1584
  store %"LinkedEntry*[]" %56, ptr %60, align 8, !dbg !1584
  %61 = load ptr, ptr %self, align 8, !dbg !1591
  %ptradd68 = getelementptr inbounds i8, ptr %61, i64 56, !dbg !1591
  store ptr null, ptr %ptradd68, align 8, !dbg !1591
  %62 = load ptr, ptr %self, align 8, !dbg !1592
  %ptradd69 = getelementptr inbounds i8, ptr %62, i64 64, !dbg !1592
  store ptr null, ptr %ptradd69, align 8, !dbg !1592
  %63 = load ptr, ptr %self, align 8, !dbg !1593
  ret ptr %63, !dbg !1593

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %64 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %64(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 42) #5, !dbg !1560
  unreachable, !dbg !1560

panic54:                                          ; preds = %expr_block.exit
  store i64 %sub53, ptr %taddr55, align 8
  %65 = insertvalue %any undef, ptr %taddr55, 0
  %66 = insertvalue %any %65, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg58, align 8
  store %any %66, ptr %varargslots, align 16
  %67 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %67, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg59, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 270, ptr align 8 %indirectarg59) #5, !dbg !1580
  unreachable, !dbg !1580
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit"(ptr %0, i64 %1, float %2) #0 comdat !dbg !1594 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i64, align 8
  %load_factor = alloca float, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg47 = alloca %any, align 8
  %3 = icmp eq ptr %0, null, !dbg !1597
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1597
  br i1 %4, label %panic, label %checkok, !dbg !1597

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1598, !DIExpression(), !1599)
  store i64 %1, ptr %capacity, align 8
    #dbg_declare(ptr %capacity, !1600, !DIExpression(), !1599)
  store float %2, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !1601, !DIExpression(), !1599)
  %5 = load i64, ptr %capacity, align 8, !dbg !1602
  %lt = icmp ult i64 0, %5, !dbg !1602
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1602

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 55) #5, !dbg !1602
  unreachable, !dbg !1602

assert_ok:                                        ; preds = %checkok
  %7 = load float, ptr %load_factor, align 4, !dbg !1604
  %fpfpext = fpext float %7 to double, !dbg !1604
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !1604
  br i1 %gt, label %assert_ok10, label %assert_fail6, !dbg !1604

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg9, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 56) #5, !dbg !1604
  unreachable, !dbg !1604

assert_ok10:                                      ; preds = %assert_ok
  %9 = load ptr, ptr %self, align 8, !dbg !1605
  %10 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %9), !dbg !1605
  %11 = trunc i8 %10 to i1, !dbg !1605
  %not = xor i1 %11, true, !dbg !1605
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !1605

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg14, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 57) #5, !dbg !1605
  unreachable, !dbg !1605

assert_ok15:                                      ; preds = %assert_ok10
  %13 = load i64, ptr %capacity, align 8, !dbg !1606
  %lt16 = icmp ult i64 %13, 2147483648, !dbg !1606
  br i1 %lt16, label %assert_ok21, label %assert_fail17, !dbg !1606

assert_fail17:                                    ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg20, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 58) #5, !dbg !1606
  unreachable, !dbg !1606

assert_ok21:                                      ; preds = %assert_ok15
  %15 = load ptr, ptr %self, align 8, !dbg !1607
  %16 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1607
  %17 = load %any, ptr %16, align 8, !dbg !1607
  %18 = load i64, ptr %capacity, align 8, !dbg !1607
  %19 = load float, ptr %load_factor, align 4, !dbg !1607
  %lt22 = icmp ult i64 0, %18, !dbg !1607
  br i1 %lt22, label %assert_ok27, label %assert_fail23, !dbg !1607

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 62) #5, !dbg !1607
  unreachable, !dbg !1607

assert_ok27:                                      ; preds = %assert_ok21
  %fpfpext28 = fpext float %19 to double, !dbg !1608
  %gt29 = fcmp ogt double %fpfpext28, 0.000000e+00, !dbg !1607
  br i1 %gt29, label %assert_ok34, label %assert_fail30, !dbg !1607

assert_fail30:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg33, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 62) #5, !dbg !1607
  unreachable, !dbg !1607

assert_ok34:                                      ; preds = %assert_ok27
  %22 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %15), !dbg !1609
  %23 = trunc i8 %22 to i1, !dbg !1609
  %not35 = xor i1 %23, true, !dbg !1609
  br i1 %not35, label %assert_ok40, label %assert_fail36, !dbg !1609

assert_fail36:                                    ; preds = %assert_ok34
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg39, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 62) #5, !dbg !1607
  unreachable, !dbg !1607

assert_ok40:                                      ; preds = %assert_ok34
  %lt41 = icmp ult i64 %18, 2147483648, !dbg !1607
  br i1 %lt41, label %assert_ok46, label %assert_fail42, !dbg !1607

assert_fail42:                                    ; preds = %assert_ok40
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg45, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 62) #5, !dbg !1607
  unreachable, !dbg !1607

assert_ok46:                                      ; preds = %assert_ok40
  store %any %17, ptr %indirectarg47, align 8
  %26 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init"(ptr %15, ptr align 8 %indirectarg47, i64 %18, float %19) #6, !dbg !1607
  ret ptr %26, !dbg !1607

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.19, i64 5 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 60) #5, !dbg !1599
  unreachable, !dbg !1599
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_keys_and_values"(ptr %0, ptr align 8 %1, ptr align 8 %2, ptr align 8 %3, i32 %4, float %5) #0 comdat !dbg !1610 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i32, align 4
  %load_factor = alloca float, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg61 = alloca %any, align 8
  %i = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr66 = alloca i64, align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg71 = alloca %"any[]", align 8
  %taddr74 = alloca i64, align 8
  %taddr75 = alloca i64, align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %varargslots79 = alloca [2 x %any], align 16
  %indirectarg82 = alloca %"any[]", align 8
  %taddr87 = alloca i64, align 8
  %taddr88 = alloca i64, align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %varargslots92 = alloca [2 x %any], align 16
  %indirectarg95 = alloca %"any[]", align 8
  %taddr99 = alloca i64, align 8
  %taddr100 = alloca i64, align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %varargslots104 = alloca [2 x %any], align 16
  %indirectarg107 = alloca %"any[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %6 = icmp eq ptr %0, null, !dbg !1613
  %7 = call i1 @llvm.expect.i1(i1 %6, i1 false), !dbg !1613
  br i1 %7, label %panic, label %checkok, !dbg !1613

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1614, !DIExpression(), !1615)
    #dbg_declare(ptr %1, !1616, !DIExpression(), !1615)
    #dbg_declare(ptr %2, !1617, !DIExpression(), !1615)
    #dbg_declare(ptr %3, !1618, !DIExpression(), !1615)
  store i32 %4, ptr %capacity, align 4
    #dbg_declare(ptr %capacity, !1619, !DIExpression(), !1615)
  store float %5, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !1620, !DIExpression(), !1615)
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1621
  %8 = load i64, ptr %ptradd, align 8, !dbg !1621
  %ptradd3 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1621
  %9 = load i64, ptr %ptradd3, align 8, !dbg !1621
  %eq = icmp eq i64 %8, %9, !dbg !1621
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !1621

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.21, i64 98 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 98) #5, !dbg !1621
  unreachable, !dbg !1621

assert_ok:                                        ; preds = %checkok
  %11 = load i32, ptr %capacity, align 4, !dbg !1623
  %lt = icmp ult i32 0, %11, !dbg !1623
  br i1 %lt, label %assert_ok11, label %assert_fail7, !dbg !1623

assert_fail7:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg10, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 99) #5, !dbg !1623
  unreachable, !dbg !1623

assert_ok11:                                      ; preds = %assert_ok
  %13 = load float, ptr %load_factor, align 4, !dbg !1624
  %fpfpext = fpext float %13 to double, !dbg !1624
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !1624
  br i1 %gt, label %assert_ok16, label %assert_fail12, !dbg !1624

assert_fail12:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg15, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 100) #5, !dbg !1624
  unreachable, !dbg !1624

assert_ok16:                                      ; preds = %assert_ok11
  %15 = load ptr, ptr %self, align 8, !dbg !1625
  %16 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %15), !dbg !1625
  %17 = trunc i8 %16 to i1, !dbg !1625
  %not = xor i1 %17, true, !dbg !1625
  br i1 %not, label %assert_ok21, label %assert_fail17, !dbg !1625

assert_fail17:                                    ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg20, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 101) #5, !dbg !1625
  unreachable, !dbg !1625

assert_ok21:                                      ; preds = %assert_ok16
  %19 = load i32, ptr %capacity, align 4, !dbg !1626
  %lt22 = icmp ult i32 %19, -2147483648, !dbg !1626
  br i1 %lt22, label %assert_ok27, label %assert_fail23, !dbg !1626

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 102) #5, !dbg !1626
  unreachable, !dbg !1626

assert_ok27:                                      ; preds = %assert_ok21
  %ptradd28 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1627
  %21 = load i64, ptr %ptradd28, align 8, !dbg !1627
  %ptradd29 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1627
  %22 = load i64, ptr %ptradd29, align 8, !dbg !1627
  %eq30 = icmp eq i64 %21, %22, !dbg !1627
  br i1 %eq30, label %assert_ok35, label %assert_fail31, !dbg !1627

assert_fail31:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.22, i64 39 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg34, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 106) #5, !dbg !1627
  unreachable, !dbg !1627

assert_ok35:                                      ; preds = %assert_ok27
  %24 = load ptr, ptr %self, align 8, !dbg !1628
  %25 = load %any, ptr %1, align 8, !dbg !1628
  %26 = load i32, ptr %capacity, align 4, !dbg !1628
  %zext = zext i32 %26 to i64, !dbg !1628
  %27 = load float, ptr %load_factor, align 4, !dbg !1628
  %lt36 = icmp ult i64 0, %zext, !dbg !1628
  br i1 %lt36, label %assert_ok41, label %assert_fail37, !dbg !1628

assert_fail37:                                    ; preds = %assert_ok35
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg40, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 107) #5, !dbg !1628
  unreachable, !dbg !1628

assert_ok41:                                      ; preds = %assert_ok35
  %fpfpext42 = fpext float %27 to double, !dbg !1629
  %gt43 = fcmp ogt double %fpfpext42, 0.000000e+00, !dbg !1628
  br i1 %gt43, label %assert_ok48, label %assert_fail44, !dbg !1628

assert_fail44:                                    ; preds = %assert_ok41
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg47, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 107) #5, !dbg !1628
  unreachable, !dbg !1628

assert_ok48:                                      ; preds = %assert_ok41
  %30 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %24), !dbg !1630
  %31 = trunc i8 %30 to i1, !dbg !1630
  %not49 = xor i1 %31, true, !dbg !1630
  br i1 %not49, label %assert_ok54, label %assert_fail50, !dbg !1630

assert_fail50:                                    ; preds = %assert_ok48
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg53, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, i32 107) #5, !dbg !1628
  unreachable, !dbg !1628

assert_ok54:                                      ; preds = %assert_ok48
  %lt55 = icmp ult i64 %zext, 2147483648, !dbg !1628
  br i1 %lt55, label %assert_ok60, label %assert_fail56, !dbg !1628

assert_fail56:                                    ; preds = %assert_ok54
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg59, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 107) #5, !dbg !1628
  unreachable, !dbg !1628

assert_ok60:                                      ; preds = %assert_ok54
  store %any %25, ptr %indirectarg61, align 8
  %34 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init"(ptr %24, ptr align 8 %indirectarg61, i64 %zext, float %27), !dbg !1628
    #dbg_declare(ptr %i, !1631, !DIExpression(), !1633)
  store i64 0, ptr %i, align 8, !dbg !1633
  br label %loop.cond, !dbg !1633

loop.cond:                                        ; preds = %checkok108, %assert_ok60
  %35 = load i64, ptr %i, align 8, !dbg !1633
  %ptradd62 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1633
  %36 = load i64, ptr %ptradd62, align 8, !dbg !1633
  %lt63 = icmp ult i64 %35, %36, !dbg !1633
  br i1 %lt63, label %loop.body, label %loop.exit, !dbg !1633

loop.body:                                        ; preds = %loop.cond
  %ptradd64 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1634
  %37 = load i64, ptr %ptradd64, align 8, !dbg !1634
  %38 = load ptr, ptr %2, align 8, !dbg !1634
  %39 = load i64, ptr %i, align 8, !dbg !1634
  %ge = icmp uge i64 %39, %37, !dbg !1634
  %40 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1634
  br i1 %40, label %panic65, label %checkok72, !dbg !1634

checkok72:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [16 x i8], ptr %38, i64 %39, !dbg !1634
  %41 = ptrtoint ptr %ptroffset to i64, !dbg !1634
  %42 = urem i64 %41, 8, !dbg !1634
  %43 = icmp ne i64 %42, 0, !dbg !1634
  %44 = call i1 @llvm.expect.i1(i1 %43, i1 false), !dbg !1634
  br i1 %44, label %panic73, label %checkok83, !dbg !1634

checkok83:                                        ; preds = %checkok72
  %ptradd84 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1634
  %45 = load i64, ptr %ptradd84, align 8, !dbg !1634
  %46 = load ptr, ptr %3, align 8, !dbg !1634
  %47 = load i64, ptr %i, align 8, !dbg !1634
  %ge85 = icmp uge i64 %47, %45, !dbg !1634
  %48 = call i1 @llvm.expect.i1(i1 %ge85, i1 false), !dbg !1634
  br i1 %48, label %panic86, label %checkok96, !dbg !1634

checkok96:                                        ; preds = %checkok83
  %ptroffset97 = getelementptr inbounds [8 x i8], ptr %46, i64 %47, !dbg !1634
  %49 = ptrtoint ptr %ptroffset97 to i64, !dbg !1634
  %50 = urem i64 %49, 8, !dbg !1634
  %51 = icmp ne i64 %50, 0, !dbg !1634
  %52 = call i1 @llvm.expect.i1(i1 %51, i1 false), !dbg !1634
  br i1 %52, label %panic98, label %checkok108, !dbg !1634

checkok108:                                       ; preds = %checkok96
  %53 = load ptr, ptr %self, align 8, !dbg !1634
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg109, ptr align 8 %ptroffset, i32 16, i1 false)
  %54 = load ptr, ptr %ptroffset97, align 8
  %55 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.set"(ptr %53, ptr align 8 %indirectarg109, ptr %54), !dbg !1634
  %56 = load i64, ptr %i, align 8, !dbg !1633
  %add = add i64 %56, 1, !dbg !1633
  store i64 %add, ptr %i, align 8, !dbg !1633
  br label %loop.cond, !dbg !1633

loop.exit:                                        ; preds = %loop.cond
  %57 = load ptr, ptr %self, align 8, !dbg !1636
  ret ptr %57, !dbg !1636

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg2, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 104) #5, !dbg !1615
  unreachable, !dbg !1615

panic65:                                          ; preds = %loop.body
  store i64 %37, ptr %taddr, align 8
  %59 = insertvalue %any undef, ptr %taddr, 0
  %60 = insertvalue %any %59, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %39, ptr %taddr66, align 8
  %61 = insertvalue %any undef, ptr %taddr66, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg69, align 8
  store %any %60, ptr %varargslots, align 16
  %ptradd70 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %62, ptr %ptradd70, align 16
  %63 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %63, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg71, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, i32 110, ptr align 8 %indirectarg71) #5, !dbg !1634
  unreachable, !dbg !1634

panic73:                                          ; preds = %checkok72
  store i64 8, ptr %taddr74, align 8
  %64 = insertvalue %any undef, ptr %taddr74, 0
  %65 = insertvalue %any %64, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr75, align 8
  %66 = insertvalue %any undef, ptr %taddr75, 0
  %67 = insertvalue %any %66, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg78, align 8
  store %any %65, ptr %varargslots79, align 16
  %ptradd80 = getelementptr inbounds i8, ptr %varargslots79, i64 16
  store %any %67, ptr %ptradd80, align 16
  %68 = insertvalue %"any[]" undef, ptr %varargslots79, 0
  %"$$temp81" = insertvalue %"any[]" %68, i64 2, 1
  store %"any[]" %"$$temp81", ptr %indirectarg82, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, i32 110, ptr align 8 %indirectarg82) #5, !dbg !1634
  unreachable, !dbg !1634

panic86:                                          ; preds = %checkok83
  store i64 %45, ptr %taddr87, align 8
  %69 = insertvalue %any undef, ptr %taddr87, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %47, ptr %taddr88, align 8
  %71 = insertvalue %any undef, ptr %taddr88, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg91, align 8
  store %any %70, ptr %varargslots92, align 16
  %ptradd93 = getelementptr inbounds i8, ptr %varargslots92, i64 16
  store %any %72, ptr %ptradd93, align 16
  %73 = insertvalue %"any[]" undef, ptr %varargslots92, 0
  %"$$temp94" = insertvalue %"any[]" %73, i64 2, 1
  store %"any[]" %"$$temp94", ptr %indirectarg95, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 110, ptr align 8 %indirectarg95) #5, !dbg !1634
  unreachable, !dbg !1634

panic98:                                          ; preds = %checkok96
  store i64 8, ptr %taddr99, align 8
  %74 = insertvalue %any undef, ptr %taddr99, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %50, ptr %taddr100, align 8
  %76 = insertvalue %any undef, ptr %taddr100, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg101, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.func.20, i64 25 }, ptr %indirectarg103, align 8
  store %any %75, ptr %varargslots104, align 16
  %ptradd105 = getelementptr inbounds i8, ptr %varargslots104, i64 16
  store %any %77, ptr %ptradd105, align 16
  %78 = insertvalue %"any[]" undef, ptr %varargslots104, 0
  %"$$temp106" = insertvalue %"any[]" %78, i64 2, 1
  store %"any[]" %"$$temp106", ptr %indirectarg107, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg101, ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, i32 110, ptr align 8 %indirectarg107) #5, !dbg !1634
  unreachable, !dbg !1634
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit_from_keys_and_values"(ptr %0, ptr align 8 %1, ptr align 8 %2, i32 %3, float %4) #0 comdat !dbg !1637 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %capacity = alloca i32, align 4
  %load_factor = alloca float, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg59 = alloca %any, align 8
  %indirectarg60 = alloca %"char[][]", align 8
  %indirectarg61 = alloca %"MenuItem*[]", align 8
  %5 = icmp eq ptr %0, null, !dbg !1640
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1640
  br i1 %6, label %panic, label %checkok, !dbg !1640

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1641, !DIExpression(), !1642)
    #dbg_declare(ptr %1, !1643, !DIExpression(), !1642)
    #dbg_declare(ptr %2, !1644, !DIExpression(), !1642)
  store i32 %3, ptr %capacity, align 4
    #dbg_declare(ptr %capacity, !1645, !DIExpression(), !1642)
  store float %4, ptr %load_factor, align 4
    #dbg_declare(ptr %load_factor, !1646, !DIExpression(), !1642)
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1647
  %7 = load i64, ptr %ptradd, align 8, !dbg !1647
  %ptradd3 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1647
  %8 = load i64, ptr %ptradd3, align 8, !dbg !1647
  %eq = icmp eq i64 %7, %8, !dbg !1647
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !1647

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.21, i64 98 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg6, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 118) #5, !dbg !1647
  unreachable, !dbg !1647

assert_ok:                                        ; preds = %checkok
  %10 = load i32, ptr %capacity, align 4, !dbg !1649
  %lt = icmp ult i32 0, %10, !dbg !1649
  br i1 %lt, label %assert_ok11, label %assert_fail7, !dbg !1649

assert_fail7:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg10, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 119) #5, !dbg !1649
  unreachable, !dbg !1649

assert_ok11:                                      ; preds = %assert_ok
  %12 = load float, ptr %load_factor, align 4, !dbg !1650
  %fpfpext = fpext float %12 to double, !dbg !1650
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !1650
  br i1 %gt, label %assert_ok16, label %assert_fail12, !dbg !1650

assert_fail12:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg15, align 8
  %13 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %13(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 120) #5, !dbg !1650
  unreachable, !dbg !1650

assert_ok16:                                      ; preds = %assert_ok11
  %14 = load ptr, ptr %self, align 8, !dbg !1651
  %15 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %14), !dbg !1651
  %16 = trunc i8 %15 to i1, !dbg !1651
  %not = xor i1 %16, true, !dbg !1651
  br i1 %not, label %assert_ok21, label %assert_fail17, !dbg !1651

assert_fail17:                                    ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg20, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 121) #5, !dbg !1651
  unreachable, !dbg !1651

assert_ok21:                                      ; preds = %assert_ok16
  %18 = load i32, ptr %capacity, align 4, !dbg !1652
  %lt22 = icmp ult i32 %18, -2147483648, !dbg !1652
  br i1 %lt22, label %assert_ok27, label %assert_fail23, !dbg !1652

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg26, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 122) #5, !dbg !1652
  unreachable, !dbg !1652

assert_ok27:                                      ; preds = %assert_ok21
  %20 = load ptr, ptr %self, align 8, !dbg !1653
  %21 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1653
  %22 = load %any, ptr %21, align 8, !dbg !1653
  %23 = load %"char[][]", ptr %1, align 8, !dbg !1653
  %24 = load %"MenuItem*[]", ptr %2, align 8, !dbg !1653
  %25 = load i32, ptr %capacity, align 4, !dbg !1653
  %26 = load float, ptr %load_factor, align 4, !dbg !1653
  %27 = extractvalue %"char[][]" %23, 1, !dbg !1654
  %28 = extractvalue %"MenuItem*[]" %24, 1, !dbg !1654
  %eq28 = icmp eq i64 %27, %28, !dbg !1653
  br i1 %eq28, label %assert_ok33, label %assert_fail29, !dbg !1653

assert_fail29:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.21, i64 98 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg32, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 126) #5, !dbg !1653
  unreachable, !dbg !1653

assert_ok33:                                      ; preds = %assert_ok27
  %lt34 = icmp ult i32 0, %25, !dbg !1653
  br i1 %lt34, label %assert_ok39, label %assert_fail35, !dbg !1653

assert_fail35:                                    ; preds = %assert_ok33
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg38, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 126) #5, !dbg !1653
  unreachable, !dbg !1653

assert_ok39:                                      ; preds = %assert_ok33
  %fpfpext40 = fpext float %26 to double, !dbg !1655
  %gt41 = fcmp ogt double %fpfpext40, 0.000000e+00, !dbg !1653
  br i1 %gt41, label %assert_ok46, label %assert_fail42, !dbg !1653

assert_fail42:                                    ; preds = %assert_ok39
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg45, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 126) #5, !dbg !1653
  unreachable, !dbg !1653

assert_ok46:                                      ; preds = %assert_ok39
  %32 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %20), !dbg !1656
  %33 = trunc i8 %32 to i1, !dbg !1656
  %not47 = xor i1 %33, true, !dbg !1656
  br i1 %not47, label %assert_ok52, label %assert_fail48, !dbg !1656

assert_fail48:                                    ; preds = %assert_ok46
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg51, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 126) #5, !dbg !1653
  unreachable, !dbg !1653

assert_ok52:                                      ; preds = %assert_ok46
  %lt53 = icmp ult i32 %25, -2147483648, !dbg !1653
  br i1 %lt53, label %assert_ok58, label %assert_fail54, !dbg !1653

assert_fail54:                                    ; preds = %assert_ok52
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg57, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 126) #5, !dbg !1653
  unreachable, !dbg !1653

assert_ok58:                                      ; preds = %assert_ok52
  store %any %22, ptr %indirectarg59, align 8
  store %"char[][]" %23, ptr %indirectarg60, align 8
  store %"MenuItem*[]" %24, ptr %indirectarg61, align 8
  %36 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_keys_and_values"(ptr %20, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, i32 %25, float %26), !dbg !1653
  ret ptr %36, !dbg !1653

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.25, i64 26 }, ptr %indirectarg2, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 124) #5, !dbg !1642
  unreachable, !dbg !1642
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %0) #0 comdat !dbg !1657 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1660
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1660
  br i1 %2, label %panic, label %checkok, !dbg !1660

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1661, !DIExpression(), !1662)
  %3 = load ptr, ptr %map, align 8, !dbg !1663
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !1663
  %4 = load ptr, ptr %ptradd, align 8, !dbg !1663
  %i2b = icmp ne ptr %4, null, !dbg !1663
  br i1 %i2b, label %and.rhs, label %and.phi, !dbg !1663

and.rhs:                                          ; preds = %checkok
  %5 = load ptr, ptr %map, align 8, !dbg !1663
  %ptradd3 = getelementptr inbounds i8, ptr %5, i64 16, !dbg !1663
  %6 = load ptr, ptr %ptradd3, align 8, !dbg !1663
  %neq = icmp ne ptr %6, @"std_collections_map$String$p$cforms.MenuItem$.dummy.29380", !dbg !1663
  br label %and.phi, !dbg !1663

and.phi:                                          ; preds = %and.rhs, %checkok
  %val = phi i1 [ false, %checkok ], [ %neq, %and.rhs ], !dbg !1663
  %7 = zext i1 %val to i8, !dbg !1663
  ret i8 %7, !dbg !1663

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.27, i64 14 }, ptr %indirectarg2, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 135) #5, !dbg !1662
  unreachable, !dbg !1662
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_map"(ptr %0, ptr align 8 %1, ptr %2) #0 comdat !dbg !1664 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %other_map = alloca ptr, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg34 = alloca %any, align 8
  %3 = icmp eq ptr %0, null, !dbg !1667
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1667
  br i1 %4, label %panic, label %checkok, !dbg !1667

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1668, !DIExpression(), !1669)
    #dbg_declare(ptr %1, !1670, !DIExpression(), !1669)
  %5 = icmp eq ptr %2, null
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false)
  br i1 %6, label %panic3, label %checkok7

checkok7:                                         ; preds = %checkok
  store ptr %2, ptr %other_map, align 8
    #dbg_declare(ptr %other_map, !1671, !DIExpression(), !1669)
  %7 = load ptr, ptr %self, align 8, !dbg !1672
  %8 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %7), !dbg !1672
  %9 = trunc i8 %8 to i1, !dbg !1672
  %not = xor i1 %9, true, !dbg !1672
  br i1 %not, label %assert_ok, label %assert_fail, !dbg !1672

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg10, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 143) #5, !dbg !1672
  unreachable, !dbg !1672

assert_ok:                                        ; preds = %checkok7
  %11 = load ptr, ptr %self, align 8, !dbg !1674
  %12 = load %any, ptr %1, align 8, !dbg !1674
  %13 = load ptr, ptr %other_map, align 8, !dbg !1674
  %ptradd = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1674
  %14 = load i64, ptr %ptradd, align 8, !dbg !1674
  %15 = load ptr, ptr %other_map, align 8, !dbg !1674
  %ptradd11 = getelementptr inbounds i8, ptr %15, i64 48, !dbg !1674
  %16 = load float, ptr %ptradd11, align 8, !dbg !1674
  %lt = icmp ult i64 0, %14, !dbg !1674
  br i1 %lt, label %assert_ok16, label %assert_fail12, !dbg !1674

assert_fail12:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg15, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 147) #5, !dbg !1674
  unreachable, !dbg !1674

assert_ok16:                                      ; preds = %assert_ok
  %fpfpext = fpext float %16 to double, !dbg !1675
  %gt = fcmp ogt double %fpfpext, 0.000000e+00, !dbg !1674
  br i1 %gt, label %assert_ok21, label %assert_fail17, !dbg !1674

assert_fail17:                                    ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg20, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 147) #5, !dbg !1674
  unreachable, !dbg !1674

assert_ok21:                                      ; preds = %assert_ok16
  %19 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %11), !dbg !1676
  %20 = trunc i8 %19 to i1, !dbg !1676
  %not22 = xor i1 %20, true, !dbg !1676
  br i1 %not22, label %assert_ok27, label %assert_fail23, !dbg !1676

assert_fail23:                                    ; preds = %assert_ok21
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg26, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 147) #5, !dbg !1674
  unreachable, !dbg !1674

assert_ok27:                                      ; preds = %assert_ok21
  %lt28 = icmp ult i64 %14, 2147483648, !dbg !1674
  br i1 %lt28, label %assert_ok33, label %assert_fail29, !dbg !1674

assert_fail29:                                    ; preds = %assert_ok27
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg32, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 147) #5, !dbg !1674
  unreachable, !dbg !1674

assert_ok33:                                      ; preds = %assert_ok27
  store %any %12, ptr %indirectarg34, align 8
  %23 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init"(ptr %11, ptr align 8 %indirectarg34, i64 %14, float %16), !dbg !1674
  %24 = load ptr, ptr %self, align 8, !dbg !1677
  %25 = load ptr, ptr %other_map, align 8, !dbg !1677
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.put_all_for_create"(ptr %24, ptr %25), !dbg !1677
  %26 = load ptr, ptr %self, align 8, !dbg !1678
  ret ptr %26, !dbg !1678

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 145) #5, !dbg !1669
  unreachable, !dbg !1669

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.29, i64 67 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.28, i64 13 }, ptr %indirectarg6, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 145) #5, !dbg !1669
  unreachable, !dbg !1669
}

; Function Attrs: nounwind ssp uwtable
define weak_odr ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit_from_map"(ptr %0, ptr %1) #0 comdat !dbg !1679 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %other_map = alloca ptr, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg17 = alloca %any, align 8
  %2 = icmp eq ptr %0, null, !dbg !1682
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1682
  br i1 %3, label %panic, label %checkok, !dbg !1682

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1683, !DIExpression(), !1684)
  %4 = icmp eq ptr %1, null
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false)
  br i1 %5, label %panic3, label %checkok7

checkok7:                                         ; preds = %checkok
  store ptr %1, ptr %other_map, align 8
    #dbg_declare(ptr %other_map, !1685, !DIExpression(), !1684)
  %6 = load ptr, ptr %map, align 8, !dbg !1686
  %7 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %6), !dbg !1686
  %8 = trunc i8 %7 to i1, !dbg !1686
  %not = xor i1 %8, true, !dbg !1686
  br i1 %not, label %assert_ok, label %assert_fail, !dbg !1686

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.31, i64 73 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg10, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 154) #5, !dbg !1686
  unreachable, !dbg !1686

assert_ok:                                        ; preds = %checkok7
  %10 = load ptr, ptr %map, align 8, !dbg !1688
  %11 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1688
  %12 = load %any, ptr %11, align 8, !dbg !1688
  %13 = load ptr, ptr %other_map, align 8, !dbg !1688
  %14 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %10), !dbg !1689
  %15 = trunc i8 %14 to i1, !dbg !1689
  %not11 = xor i1 %15, true, !dbg !1689
  br i1 %not11, label %assert_ok16, label %assert_fail12, !dbg !1689

assert_fail12:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg15, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 158) #5, !dbg !1688
  unreachable, !dbg !1688

assert_ok16:                                      ; preds = %assert_ok
  store %any %12, ptr %indirectarg17, align 8
  %17 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_map"(ptr %10, ptr align 8 %indirectarg17, ptr %13) #6, !dbg !1688
  ret ptr %17, !dbg !1688

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg2, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 156) #5, !dbg !1684
  unreachable, !dbg !1684

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.29, i64 67 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.30, i64 14 }, ptr %indirectarg6, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 156) #5, !dbg !1684
  unreachable, !dbg !1684
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_empty"(ptr %0) #0 comdat !dbg !1690 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1691
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1691
  br i1 %2, label %panic, label %checkok, !dbg !1691

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1692, !DIExpression(), !1693)
  %3 = load ptr, ptr %map, align 8, !dbg !1694
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !1694
  %4 = load i64, ptr %ptradd, align 8, !dbg !1694
  %i2nb = icmp eq i64 %4, 0, !dbg !1694
  %5 = zext i1 %i2nb to i8, !dbg !1694
  ret i8 %5, !dbg !1694

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.32, i64 8 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 161) #5, !dbg !1693
  unreachable, !dbg !1693
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.len"(ptr %0) #0 comdat !dbg !1695 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1698
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1698
  br i1 %2, label %panic, label %checkok, !dbg !1698

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1699, !DIExpression(), !1698)
  %3 = load ptr, ptr %map, align 8, !dbg !1698
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !1698
  %4 = load i64, ptr %ptradd, align 8, !dbg !1698
  ret i64 %4, !dbg !1698

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.33, i64 3 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 166) #5, !dbg !1698
  unreachable, !dbg !1698
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_ref"(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1700 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %e = alloca ptr, align 8
  %hash5 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %taddr = alloca i64, align 8
  %taddr8 = alloca i64, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %taddr16 = alloca i64, align 8
  %taddr17 = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %varargslots21 = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1703
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1703
  br i1 %4, label %panic, label %checkok, !dbg !1703

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !1704, !DIExpression(), !1705)
    #dbg_declare(ptr %2, !1706, !DIExpression(), !1705)
  %5 = load ptr, ptr %map, align 8, !dbg !1707
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !1707
  %6 = load i64, ptr %ptradd, align 8, !dbg !1707
  %i2nb = icmp eq i64 %6, 0, !dbg !1707
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1707

if.then:                                          ; preds = %checkok
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !1707

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %hash, !1708, !DIExpression(), !1709)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %7 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !1710
  %8 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %7) #6, !dbg !1709
  store i32 %8, ptr %hash, align 4, !dbg !1709
    #dbg_declare(ptr %e, !1712, !DIExpression(), !1714)
  %9 = load ptr, ptr %map, align 8, !dbg !1714
  %ptradd4 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1714
  %10 = load i64, ptr %ptradd4, align 8, !dbg !1714
  %11 = load ptr, ptr %9, align 8, !dbg !1714
  %12 = load i32, ptr %hash, align 4
  store i32 %12, ptr %hash5, align 4
  %13 = load ptr, ptr %map, align 8, !dbg !1714
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1714
  %14 = load i64, ptr %ptradd6, align 8, !dbg !1714
  %trunc = trunc i64 %14 to i32, !dbg !1714
  store i32 %trunc, ptr %capacity, align 4
  %15 = load i32, ptr %hash5, align 4, !dbg !1715
  %16 = load i32, ptr %capacity, align 4, !dbg !1715
  %sub = sub i32 %16, 1, !dbg !1715
  %and = and i32 %15, %sub, !dbg !1715
  %zext = zext i32 %and to i64, !dbg !1715
  %ge = icmp uge i64 %zext, %10, !dbg !1715
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1715
  br i1 %17, label %panic7, label %checkok14, !dbg !1715

checkok14:                                        ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %11, i64 %zext, !dbg !1714
  %18 = ptrtoint ptr %ptroffset to i64, !dbg !1714
  %19 = urem i64 %18, 8, !dbg !1714
  %20 = icmp ne i64 %19, 0, !dbg !1714
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false), !dbg !1714
  br i1 %21, label %panic15, label %checkok25, !dbg !1714

checkok25:                                        ; preds = %checkok14
  %22 = load ptr, ptr %ptroffset, align 8, !dbg !1714
  store ptr %22, ptr %e, align 8, !dbg !1714
  br label %loop.cond, !dbg !1714

loop.cond:                                        ; preds = %if.exit33, %checkok25
  %23 = load ptr, ptr %e, align 8, !dbg !1714
  %neq = icmp ne ptr %23, null, !dbg !1714
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !1714

loop.body:                                        ; preds = %loop.cond
  %24 = load ptr, ptr %e, align 8, !dbg !1717
  %25 = load i32, ptr %24, align 8, !dbg !1717
  %26 = load i32, ptr %hash, align 4, !dbg !1717
  %eq = icmp eq i32 %25, %26, !dbg !1717
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !1717

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %2, i32 16, i1 false)
  %27 = load ptr, ptr %e, align 8, !dbg !1717
  %ptradd26 = getelementptr inbounds i8, ptr %27, i64 8, !dbg !1717
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd26, i32 16, i1 false)
  %28 = load %"char[]", ptr %a, align 8, !dbg !1719
  %29 = load %"char[]", ptr %b, align 8, !dbg !1719
  %30 = extractvalue %"char[]" %28, 1, !dbg !1719
  %31 = extractvalue %"char[]" %29, 1, !dbg !1719
  %32 = extractvalue %"char[]" %28, 0, !dbg !1719
  %33 = extractvalue %"char[]" %29, 0, !dbg !1719
  %eq27 = icmp eq i64 %30, %31, !dbg !1719
  br i1 %eq27, label %slice_cmp_values, label %slice_cmp_exit, !dbg !1719

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %34 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %34, %30
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %34
  %ptradd29 = getelementptr inbounds i8, ptr %33, i64 %34
  %35 = load i8, ptr %ptradd28, align 1
  %36 = load i8, ptr %ptradd29, align 1
  %eq30 = icmp eq i8 %35, %36
  %37 = add i64 %34, 1
  store i64 %37, ptr %cmp.idx, align 8
  br i1 %eq30, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then31, label %if.exit33

if.then31:                                        ; preds = %and.phi
  %38 = load ptr, ptr %e, align 8, !dbg !1717
  %ptradd32 = getelementptr inbounds i8, ptr %38, i64 24, !dbg !1717
  store ptr %ptradd32, ptr %0, align 8, !dbg !1717
  ret i64 0, !dbg !1717

if.exit33:                                        ; preds = %and.phi
  %39 = load ptr, ptr %e, align 8, !dbg !1714
  %ptradd34 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !1714
  %40 = load ptr, ptr %ptradd34, align 8, !dbg !1714
  store ptr %40, ptr %e, align 8, !dbg !1714
  br label %loop.cond, !dbg !1714

loop.exit:                                        ; preds = %loop.cond
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !1721

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.34, i64 7 }, ptr %indirectarg2, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 168) #5, !dbg !1705
  unreachable, !dbg !1705

panic7:                                           ; preds = %if.exit
  store i64 %10, ptr %taddr, align 8
  %42 = insertvalue %any undef, ptr %taddr, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr8, align 8
  %44 = insertvalue %any undef, ptr %taddr8, 0
  %45 = insertvalue %any %44, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.34, i64 7 }, ptr %indirectarg11, align 8
  store %any %43, ptr %varargslots, align 16
  %ptradd12 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %45, ptr %ptradd12, align 16
  %46 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %46, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 172, ptr align 8 %indirectarg13) #5, !dbg !1714
  unreachable, !dbg !1714

panic15:                                          ; preds = %checkok14
  store i64 8, ptr %taddr16, align 8
  %47 = insertvalue %any undef, ptr %taddr16, 0
  %48 = insertvalue %any %47, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr17, align 8
  %49 = insertvalue %any undef, ptr %taddr17, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.34, i64 7 }, ptr %indirectarg20, align 8
  store %any %48, ptr %varargslots21, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots21, i64 16
  store %any %50, ptr %ptradd22, align 16
  %51 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp23" = insertvalue %"any[]" %51, i64 2, 1
  store %"any[]" %"$$temp23", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 172, ptr align 8 %indirectarg24) #5, !dbg !1714
  unreachable, !dbg !1714
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_entry"(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1722 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %e = alloca ptr, align 8
  %hash5 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %taddr = alloca i64, align 8
  %taddr8 = alloca i64, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %taddr16 = alloca i64, align 8
  %taddr17 = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %varargslots21 = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1725
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1725
  br i1 %4, label %panic, label %checkok, !dbg !1725

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !1726, !DIExpression(), !1727)
    #dbg_declare(ptr %2, !1728, !DIExpression(), !1727)
  %5 = load ptr, ptr %map, align 8, !dbg !1729
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !1729
  %6 = load i64, ptr %ptradd, align 8, !dbg !1729
  %i2nb = icmp eq i64 %6, 0, !dbg !1729
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1729

if.then:                                          ; preds = %checkok
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !1729

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %hash, !1730, !DIExpression(), !1731)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %7 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !1732
  %8 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %7) #6, !dbg !1731
  store i32 %8, ptr %hash, align 4, !dbg !1731
    #dbg_declare(ptr %e, !1734, !DIExpression(), !1736)
  %9 = load ptr, ptr %map, align 8, !dbg !1736
  %ptradd4 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1736
  %10 = load i64, ptr %ptradd4, align 8, !dbg !1736
  %11 = load ptr, ptr %9, align 8, !dbg !1736
  %12 = load i32, ptr %hash, align 4
  store i32 %12, ptr %hash5, align 4
  %13 = load ptr, ptr %map, align 8, !dbg !1736
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1736
  %14 = load i64, ptr %ptradd6, align 8, !dbg !1736
  %trunc = trunc i64 %14 to i32, !dbg !1736
  store i32 %trunc, ptr %capacity, align 4
  %15 = load i32, ptr %hash5, align 4, !dbg !1737
  %16 = load i32, ptr %capacity, align 4, !dbg !1737
  %sub = sub i32 %16, 1, !dbg !1737
  %and = and i32 %15, %sub, !dbg !1737
  %zext = zext i32 %and to i64, !dbg !1737
  %ge = icmp uge i64 %zext, %10, !dbg !1737
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1737
  br i1 %17, label %panic7, label %checkok14, !dbg !1737

checkok14:                                        ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %11, i64 %zext, !dbg !1736
  %18 = ptrtoint ptr %ptroffset to i64, !dbg !1736
  %19 = urem i64 %18, 8, !dbg !1736
  %20 = icmp ne i64 %19, 0, !dbg !1736
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false), !dbg !1736
  br i1 %21, label %panic15, label %checkok25, !dbg !1736

checkok25:                                        ; preds = %checkok14
  %22 = load ptr, ptr %ptroffset, align 8, !dbg !1736
  store ptr %22, ptr %e, align 8, !dbg !1736
  br label %loop.cond, !dbg !1736

loop.cond:                                        ; preds = %if.exit32, %checkok25
  %23 = load ptr, ptr %e, align 8, !dbg !1736
  %neq = icmp ne ptr %23, null, !dbg !1736
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !1736

loop.body:                                        ; preds = %loop.cond
  %24 = load ptr, ptr %e, align 8, !dbg !1739
  %25 = load i32, ptr %24, align 8, !dbg !1739
  %26 = load i32, ptr %hash, align 4, !dbg !1739
  %eq = icmp eq i32 %25, %26, !dbg !1739
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !1739

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %2, i32 16, i1 false)
  %27 = load ptr, ptr %e, align 8, !dbg !1739
  %ptradd26 = getelementptr inbounds i8, ptr %27, i64 8, !dbg !1739
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd26, i32 16, i1 false)
  %28 = load %"char[]", ptr %a, align 8, !dbg !1741
  %29 = load %"char[]", ptr %b, align 8, !dbg !1741
  %30 = extractvalue %"char[]" %28, 1, !dbg !1741
  %31 = extractvalue %"char[]" %29, 1, !dbg !1741
  %32 = extractvalue %"char[]" %28, 0, !dbg !1741
  %33 = extractvalue %"char[]" %29, 0, !dbg !1741
  %eq27 = icmp eq i64 %30, %31, !dbg !1741
  br i1 %eq27, label %slice_cmp_values, label %slice_cmp_exit, !dbg !1741

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %34 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %34, %30
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %34
  %ptradd29 = getelementptr inbounds i8, ptr %33, i64 %34
  %35 = load i8, ptr %ptradd28, align 1
  %36 = load i8, ptr %ptradd29, align 1
  %eq30 = icmp eq i8 %35, %36
  %37 = add i64 %34, 1
  store i64 %37, ptr %cmp.idx, align 8
  br i1 %eq30, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then31, label %if.exit32

if.then31:                                        ; preds = %and.phi
  %38 = load ptr, ptr %e, align 8, !dbg !1739
  store ptr %38, ptr %0, align 8, !dbg !1739
  ret i64 0, !dbg !1739

if.exit32:                                        ; preds = %and.phi
  %39 = load ptr, ptr %e, align 8, !dbg !1736
  %ptradd33 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !1736
  %40 = load ptr, ptr %ptradd33, align 8, !dbg !1736
  store ptr %40, ptr %e, align 8, !dbg !1736
  br label %loop.cond, !dbg !1736

loop.exit:                                        ; preds = %loop.cond
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !1743

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.35, i64 9 }, ptr %indirectarg2, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 179) #5, !dbg !1727
  unreachable, !dbg !1727

panic7:                                           ; preds = %if.exit
  store i64 %10, ptr %taddr, align 8
  %42 = insertvalue %any undef, ptr %taddr, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr8, align 8
  %44 = insertvalue %any undef, ptr %taddr8, 0
  %45 = insertvalue %any %44, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.35, i64 9 }, ptr %indirectarg11, align 8
  store %any %43, ptr %varargslots, align 16
  %ptradd12 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %45, ptr %ptradd12, align 16
  %46 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %46, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 183, ptr align 8 %indirectarg13) #5, !dbg !1736
  unreachable, !dbg !1736

panic15:                                          ; preds = %checkok14
  store i64 8, ptr %taddr16, align 8
  %47 = insertvalue %any undef, ptr %taddr16, 0
  %48 = insertvalue %any %47, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr17, align 8
  %49 = insertvalue %any undef, ptr %taddr17, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.35, i64 9 }, ptr %indirectarg20, align 8
  store %any %48, ptr %varargslots21, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots21, i64 16
  store %any %50, ptr %ptradd22, align 16
  %51 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp23" = insertvalue %"any[]" %51, i64 2, 1
  store %"any[]" %"$$temp23", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 183, ptr align 8 %indirectarg24) #5, !dbg !1736
  unreachable, !dbg !1736
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get"(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1744 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr10 = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !1747
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1747
  br i1 %4, label %panic, label %checkok, !dbg !1747

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !1748, !DIExpression(), !1747)
    #dbg_declare(ptr %2, !1749, !DIExpression(), !1747)
  %5 = load ptr, ptr %map, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  %6 = call i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_ref"(ptr %retparam, ptr %5, ptr align 8 %indirectarg3) #6, !dbg !1747
  %not_err = icmp eq i64 %6, 0, !dbg !1747
  %7 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1747
  br i1 %7, label %after_check, label %assign_optional, !dbg !1747

assign_optional:                                  ; preds = %checkok
  store i64 %6, ptr %reterr, align 8, !dbg !1747
  br label %err_retblock, !dbg !1747

after_check:                                      ; preds = %checkok
  %8 = load ptr, ptr %retparam, align 8, !dbg !1747
  %checknull = icmp eq ptr %8, null, !dbg !1747
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1747
  br i1 %9, label %panic4, label %checkok8, !dbg !1747

checkok8:                                         ; preds = %after_check
  %10 = ptrtoint ptr %8 to i64, !dbg !1747
  %11 = urem i64 %10, 8, !dbg !1747
  %12 = icmp ne i64 %11, 0, !dbg !1747
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false), !dbg !1747
  br i1 %13, label %panic9, label %checkok15, !dbg !1747

checkok15:                                        ; preds = %checkok8
  %14 = load ptr, ptr %8, align 8, !dbg !1747
  store ptr %14, ptr %0, align 8, !dbg !1747
  ret i64 0, !dbg !1747

err_retblock:                                     ; preds = %assign_optional
  %15 = load i64, ptr %reterr, align 8, !dbg !1747
  ret i64 %15, !dbg !1747

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 213) #5, !dbg !1747
  unreachable, !dbg !1747

panic4:                                           ; preds = %after_check
  store %"char[]" { ptr @.panic_msg.37, i64 57 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg7, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 213) #5, !dbg !1747
  unreachable, !dbg !1747

panic9:                                           ; preds = %checkok8
  store i64 8, ptr %taddr, align 8
  %18 = insertvalue %any undef, ptr %taddr, 0
  %19 = insertvalue %any %18, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %11, ptr %taddr10, align 8
  %20 = insertvalue %any undef, ptr %taddr10, 0
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg13, align 8
  store %any %19, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %21, ptr %ptradd, align 16
  %22 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %22, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 213, ptr align 8 %indirectarg14) #5, !dbg !1747
  unreachable, !dbg !1747
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.has_key"(ptr %0, ptr align 8 %1) #0 comdat !dbg !1750 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %blockret = alloca i8, align 1
  %temp_err = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1753
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1753
  br i1 %3, label %panic, label %checkok, !dbg !1753

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1754, !DIExpression(), !1753)
    #dbg_declare(ptr %1, !1755, !DIExpression(), !1753)
  br label %testblock

testblock:                                        ; preds = %checkok
  %4 = load ptr, ptr %map, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %1, i32 16, i1 false)
  %5 = call i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_ref"(ptr %retparam, ptr %4, ptr align 8 %indirectarg3), !dbg !1756
  %not_err = icmp eq i64 %5, 0, !dbg !1756
  %6 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1756
  br i1 %6, label %after_check, label %assign_optional, !dbg !1756

assign_optional:                                  ; preds = %testblock
  store i64 %5, ptr %temp_err, align 8, !dbg !1756
  br label %end_block, !dbg !1756

after_check:                                      ; preds = %testblock
  store i64 0, ptr %temp_err, align 8, !dbg !1756
  br label %end_block, !dbg !1756

end_block:                                        ; preds = %after_check, %assign_optional
  %7 = load i64, ptr %temp_err, align 8, !dbg !1756
  %i2b = icmp ne i64 %7, 0, !dbg !1756
  br i1 %i2b, label %if.then, label %if.exit, !dbg !1756

if.then:                                          ; preds = %end_block
  store i8 0, ptr %blockret, align 1, !dbg !1756
  br label %expr_block.exit, !dbg !1756

if.exit:                                          ; preds = %end_block
  store i8 1, ptr %blockret, align 1, !dbg !1758
  br label %expr_block.exit, !dbg !1758

expr_block.exit:                                  ; preds = %if.exit, %if.then
  %8 = load i8, ptr %blockret, align 1, !dbg !1758
  ret i8 %8, !dbg !1758

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.38, i64 7 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 215) #5, !dbg !1753
  unreachable, !dbg !1753
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.set"(ptr %0, ptr align 8 %1, ptr %2) #0 comdat !dbg !1759 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %value = alloca ptr, align 8
  %switch = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg21 = alloca %any, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %index = alloca i32, align 4
  %hash47 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg56 = alloca %"any[]", align 8
  %taddr59 = alloca i64, align 8
  %taddr60 = alloca i64, align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %varargslots64 = alloca [2 x %any], align 16
  %indirectarg67 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %indirectarg77 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !1762
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1762
  br i1 %4, label %panic, label %checkok, !dbg !1762

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1763, !DIExpression(), !1764)
    #dbg_declare(ptr %1, !1765, !DIExpression(), !1764)
  store ptr %2, ptr %value, align 8
    #dbg_declare(ptr %value, !1766, !DIExpression(), !1764)
  %5 = load ptr, ptr %map, align 8, !dbg !1767
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !1767
  %6 = load ptr, ptr %ptradd, align 8
  store ptr %6, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %checkok
  %7 = load ptr, ptr %switch, align 8
  %eq = icmp eq ptr @"std_collections_map$String$p$cforms.MenuItem$.dummy.29380", %7, !dbg !1769
  br i1 %eq, label %switch.case, label %next_if, !dbg !1769

switch.case:                                      ; preds = %switch.entry
  %8 = load ptr, ptr %map, align 8, !dbg !1770
  %9 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.thread_allocator), !dbg !1770
  %10 = load %any, ptr %9, align 8, !dbg !1770
  br i1 true, label %assert_ok, label %assert_fail, !dbg !1770

assert_fail:                                      ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg5, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 223) #5, !dbg !1770
  unreachable, !dbg !1770

assert_ok:                                        ; preds = %switch.case
  br i1 true, label %assert_ok10, label %assert_fail6, !dbg !1770

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg9, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 223) #5, !dbg !1770
  unreachable, !dbg !1770

assert_ok10:                                      ; preds = %assert_ok
  %13 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %8), !dbg !1772
  %14 = trunc i8 %13 to i1, !dbg !1772
  %not = xor i1 %14, true, !dbg !1772
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !1772

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg14, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 223) #5, !dbg !1770
  unreachable, !dbg !1770

assert_ok15:                                      ; preds = %assert_ok10
  br i1 true, label %assert_ok20, label %assert_fail16, !dbg !1770

assert_fail16:                                    ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg19, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 223) #5, !dbg !1770
  unreachable, !dbg !1770

assert_ok20:                                      ; preds = %assert_ok15
  store %any %10, ptr %indirectarg21, align 8
  %17 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init"(ptr %8, ptr align 8 %indirectarg21, i64 16, float 7.500000e-01), !dbg !1770
  br label %switch.exit, !dbg !1770

next_if:                                          ; preds = %switch.entry
  %eq22 = icmp eq ptr null, %7, !dbg !1773
  br i1 %eq22, label %switch.case23, label %next_if45, !dbg !1773

switch.case23:                                    ; preds = %next_if
  %18 = load ptr, ptr %map, align 8, !dbg !1774
  br i1 true, label %assert_ok28, label %assert_fail24, !dbg !1774

assert_fail24:                                    ; preds = %switch.case23
  store %"char[]" { ptr @.panic_msg.8, i64 69 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg27, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 225) #5, !dbg !1774
  unreachable, !dbg !1774

assert_ok28:                                      ; preds = %switch.case23
  br i1 true, label %assert_ok33, label %assert_fail29, !dbg !1774

assert_fail29:                                    ; preds = %assert_ok28
  store %"char[]" { ptr @.panic_msg.9, i64 79 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg32, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 225) #5, !dbg !1774
  unreachable, !dbg !1774

assert_ok33:                                      ; preds = %assert_ok28
  %21 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %18), !dbg !1776
  %22 = trunc i8 %21 to i1, !dbg !1776
  %not34 = xor i1 %22, true, !dbg !1776
  br i1 %not34, label %assert_ok39, label %assert_fail35, !dbg !1776

assert_fail35:                                    ; preds = %assert_ok33
  store %"char[]" { ptr @.panic_msg.10, i64 74 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg38, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 225) #5, !dbg !1774
  unreachable, !dbg !1774

assert_ok39:                                      ; preds = %assert_ok33
  br i1 true, label %assert_ok44, label %assert_fail40, !dbg !1774

assert_fail40:                                    ; preds = %assert_ok39
  store %"char[]" { ptr @.panic_msg.11, i64 82 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg43, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 225) #5, !dbg !1774
  unreachable, !dbg !1774

assert_ok44:                                      ; preds = %assert_ok39
  %25 = call ptr @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit"(ptr %18, i64 16, float 7.500000e-01), !dbg !1774
  br label %switch.exit, !dbg !1774

next_if45:                                        ; preds = %next_if
  br label %switch.default, !dbg !1774

switch.default:                                   ; preds = %next_if45
  br label %switch.exit, !dbg !1777

switch.exit:                                      ; preds = %switch.default, %assert_ok44, %assert_ok20
    #dbg_declare(ptr %hash, !1779, !DIExpression(), !1780)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg46, ptr align 8 %c, i32 16, i1 false)
  %26 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg46), !dbg !1781
  %27 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %26) #6, !dbg !1780
  store i32 %27, ptr %hash, align 4, !dbg !1780
    #dbg_declare(ptr %index, !1783, !DIExpression(), !1784)
  %28 = load i32, ptr %hash, align 4
  store i32 %28, ptr %hash47, align 4
  %29 = load ptr, ptr %map, align 8, !dbg !1784
  %ptradd48 = getelementptr inbounds i8, ptr %29, i64 8, !dbg !1784
  %30 = load i64, ptr %ptradd48, align 8, !dbg !1784
  %trunc = trunc i64 %30 to i32, !dbg !1784
  store i32 %trunc, ptr %capacity, align 4
  %31 = load i32, ptr %hash47, align 4, !dbg !1785
  %32 = load i32, ptr %capacity, align 4, !dbg !1785
  %sub = sub i32 %32, 1, !dbg !1785
  %and = and i32 %31, %sub, !dbg !1785
  store i32 %and, ptr %index, align 4, !dbg !1785
    #dbg_declare(ptr %e, !1787, !DIExpression(), !1789)
  %33 = load ptr, ptr %map, align 8, !dbg !1789
  %ptradd49 = getelementptr inbounds i8, ptr %33, i64 8, !dbg !1789
  %34 = load i64, ptr %ptradd49, align 8, !dbg !1789
  %35 = load ptr, ptr %33, align 8, !dbg !1789
  %36 = load i32, ptr %index, align 4, !dbg !1789
  %zext = zext i32 %36 to i64, !dbg !1789
  %ge = icmp uge i64 %zext, %34, !dbg !1789
  %37 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1789
  br i1 %37, label %panic50, label %checkok57, !dbg !1789

checkok57:                                        ; preds = %switch.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %35, i64 %zext, !dbg !1789
  %38 = ptrtoint ptr %ptroffset to i64, !dbg !1789
  %39 = urem i64 %38, 8, !dbg !1789
  %40 = icmp ne i64 %39, 0, !dbg !1789
  %41 = call i1 @llvm.expect.i1(i1 %40, i1 false), !dbg !1789
  br i1 %41, label %panic58, label %checkok68, !dbg !1789

checkok68:                                        ; preds = %checkok57
  %42 = load ptr, ptr %ptroffset, align 8, !dbg !1789
  store ptr %42, ptr %e, align 8, !dbg !1789
  br label %loop.cond, !dbg !1789

loop.cond:                                        ; preds = %if.exit, %checkok68
  %43 = load ptr, ptr %e, align 8, !dbg !1789
  %neq = icmp ne ptr %43, null, !dbg !1789
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !1789

loop.body:                                        ; preds = %loop.cond
  %44 = load ptr, ptr %e, align 8, !dbg !1790
  %45 = load i32, ptr %44, align 8, !dbg !1790
  %46 = load i32, ptr %hash, align 4, !dbg !1790
  %eq69 = icmp eq i32 %45, %46, !dbg !1790
  br i1 %eq69, label %and.rhs, label %and.phi, !dbg !1790

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %1, i32 16, i1 false)
  %47 = load ptr, ptr %e, align 8, !dbg !1790
  %ptradd70 = getelementptr inbounds i8, ptr %47, i64 8, !dbg !1790
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd70, i32 16, i1 false)
  %48 = load %"char[]", ptr %a, align 8, !dbg !1792
  %49 = load %"char[]", ptr %b, align 8, !dbg !1792
  %50 = extractvalue %"char[]" %48, 1, !dbg !1792
  %51 = extractvalue %"char[]" %49, 1, !dbg !1792
  %52 = extractvalue %"char[]" %48, 0, !dbg !1792
  %53 = extractvalue %"char[]" %49, 0, !dbg !1792
  %eq71 = icmp eq i64 %50, %51, !dbg !1792
  br i1 %eq71, label %slice_cmp_values, label %slice_cmp_exit, !dbg !1792

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %54 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %54, %50
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd72 = getelementptr inbounds i8, ptr %52, i64 %54
  %ptradd73 = getelementptr inbounds i8, ptr %53, i64 %54
  %55 = load i8, ptr %ptradd72, align 1
  %56 = load i8, ptr %ptradd73, align 1
  %eq74 = icmp eq i8 %55, %56
  %57 = add i64 %54, 1
  store i64 %57, ptr %cmp.idx, align 8
  br i1 %eq74, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then, label %if.exit

if.then:                                          ; preds = %and.phi
  %58 = load ptr, ptr %e, align 8, !dbg !1794
  %ptradd75 = getelementptr inbounds i8, ptr %58, i64 24, !dbg !1794
  %59 = load ptr, ptr %value, align 8, !dbg !1794
  store ptr %59, ptr %ptradd75, align 8, !dbg !1794
  ret i8 1, !dbg !1796

if.exit:                                          ; preds = %and.phi
  %60 = load ptr, ptr %e, align 8, !dbg !1789
  %ptradd76 = getelementptr inbounds i8, ptr %60, i64 32, !dbg !1789
  %61 = load ptr, ptr %ptradd76, align 8, !dbg !1789
  store ptr %61, ptr %e, align 8, !dbg !1789
  br label %loop.cond, !dbg !1789

loop.exit:                                        ; preds = %loop.cond
  %62 = load ptr, ptr %map, align 8, !dbg !1797
  %63 = load i32, ptr %hash, align 4, !dbg !1797
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg77, ptr align 8 %1, i32 16, i1 false)
  %64 = load ptr, ptr %value, align 8
  %65 = load i32, ptr %index, align 4
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.add_entry"(ptr %62, i32 %63, ptr align 8 %indirectarg77, ptr %64, i32 %65), !dbg !1797
  ret i8 0, !dbg !1798

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg2, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 217) #5, !dbg !1764
  unreachable, !dbg !1764

panic50:                                          ; preds = %switch.exit
  store i64 %34, ptr %taddr, align 8
  %67 = insertvalue %any undef, ptr %taddr, 0
  %68 = insertvalue %any %67, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr51, align 8
  %69 = insertvalue %any undef, ptr %taddr51, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg54, align 8
  store %any %68, ptr %varargslots, align 16
  %ptradd55 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %70, ptr %ptradd55, align 16
  %71 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %71, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg56, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 231, ptr align 8 %indirectarg56) #5, !dbg !1789
  unreachable, !dbg !1789

panic58:                                          ; preds = %checkok57
  store i64 8, ptr %taddr59, align 8
  %72 = insertvalue %any undef, ptr %taddr59, 0
  %73 = insertvalue %any %72, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %39, ptr %taddr60, align 8
  %74 = insertvalue %any undef, ptr %taddr60, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.39, i64 3 }, ptr %indirectarg63, align 8
  store %any %73, ptr %varargslots64, align 16
  %ptradd65 = getelementptr inbounds i8, ptr %varargslots64, i64 16
  store %any %75, ptr %ptradd65, align 16
  %76 = insertvalue %"any[]" undef, ptr %varargslots64, 0
  %"$$temp66" = insertvalue %"any[]" %76, i64 2, 1
  store %"any[]" %"$$temp66", ptr %indirectarg67, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 231, ptr align 8 %indirectarg67) #5, !dbg !1789
  unreachable, !dbg !1789
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.remove"(ptr %0, ptr align 8 %1) #0 comdat !dbg !1799 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1802
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1802
  br i1 %3, label %panic, label %checkok, !dbg !1802

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1803, !DIExpression(), !1804)
    #dbg_declare(ptr %1, !1805, !DIExpression(), !1804)
  %4 = load ptr, ptr %map, align 8, !dbg !1806
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %1, i32 16, i1 false)
  %5 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.remove_entry_for_key"(ptr %4, ptr align 8 %indirectarg3), !dbg !1806
  %6 = trunc i8 %5 to i1, !dbg !1806
  br i1 %6, label %if.exit, label %if.else, !dbg !1806

if.else:                                          ; preds = %checkok
  ret i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), !dbg !1806

if.exit:                                          ; preds = %checkok
  ret i64 0, !dbg !1806

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.40, i64 6 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 243) #5, !dbg !1804
  unreachable, !dbg !1804
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.clear"(ptr %0) #0 comdat !dbg !1807 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %entry3 = alloca ptr, align 8
  %next = alloca ptr, align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr12 = alloca i64, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg17 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %bucket = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %taddr29 = alloca i64, align 8
  %taddr30 = alloca i64, align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %varargslots34 = alloca [2 x %any], align 16
  %indirectarg37 = alloca %"any[]", align 8
  %taddr41 = alloca i64, align 8
  %taddr42 = alloca i64, align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %varargslots46 = alloca [2 x %any], align 16
  %indirectarg49 = alloca %"any[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %taddr58 = alloca i64, align 8
  %taddr59 = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %varargslots63 = alloca [2 x %any], align 16
  %indirectarg66 = alloca %"any[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !1810
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1810
  br i1 %2, label %panic, label %checkok, !dbg !1810

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1811, !DIExpression(), !1812)
  %3 = load ptr, ptr %map, align 8, !dbg !1813
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !1813
  %4 = load i64, ptr %ptradd, align 8, !dbg !1813
  %i2nb = icmp eq i64 %4, 0, !dbg !1813
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1813

if.then:                                          ; preds = %checkok
  ret void, !dbg !1813

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %entry3, !1814, !DIExpression(), !1815)
  %5 = load ptr, ptr %map, align 8, !dbg !1815
  %ptradd4 = getelementptr inbounds i8, ptr %5, i64 56, !dbg !1815
  %6 = load ptr, ptr %ptradd4, align 8, !dbg !1815
  store ptr %6, ptr %entry3, align 8, !dbg !1815
  br label %loop.cond, !dbg !1816

loop.cond:                                        ; preds = %loop.body, %if.exit
  %7 = load ptr, ptr %entry3, align 8, !dbg !1817
  %i2b = icmp ne ptr %7, null, !dbg !1817
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !1817

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %next, !1819, !DIExpression(), !1821)
  %8 = load ptr, ptr %entry3, align 8, !dbg !1821
  %ptradd5 = getelementptr inbounds i8, ptr %8, i64 48, !dbg !1821
  %9 = load ptr, ptr %ptradd5, align 8, !dbg !1821
  store ptr %9, ptr %next, align 8, !dbg !1821
  %10 = load ptr, ptr %map, align 8, !dbg !1822
  %11 = load ptr, ptr %entry3, align 8, !dbg !1822
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_entry"(ptr %10, ptr %11), !dbg !1822
  %12 = load ptr, ptr %next, align 8, !dbg !1823
  store ptr %12, ptr %entry3, align 8, !dbg !1823
  br label %loop.cond, !dbg !1823

loop.exit:                                        ; preds = %loop.cond
  %13 = load ptr, ptr %map, align 8, !dbg !1824
  %checknull = icmp eq ptr %13, null, !dbg !1824
  %14 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1824
  br i1 %14, label %panic6, label %checkok10, !dbg !1824

checkok10:                                        ; preds = %loop.exit
  %15 = ptrtoint ptr %13 to i64, !dbg !1824
  %16 = urem i64 %15, 8, !dbg !1824
  %17 = icmp ne i64 %16, 0, !dbg !1824
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 false), !dbg !1824
  br i1 %18, label %panic11, label %checkok18, !dbg !1824

checkok18:                                        ; preds = %checkok10
  %ptradd19 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1824
  %19 = load i64, ptr %ptradd19, align 8, !dbg !1824
    #dbg_declare(ptr %.anon, !1826, !DIExpression(), !1824)
  store i64 0, ptr %.anon, align 8, !dbg !1824
  br label %loop.cond20, !dbg !1824

loop.cond20:                                      ; preds = %checkok67, %checkok18
  %20 = load i64, ptr %.anon, align 8, !dbg !1824
  %lt = icmp ult i64 %20, %19, !dbg !1824
  br i1 %lt, label %loop.body21, label %loop.exit68, !dbg !1824

loop.body21:                                      ; preds = %loop.cond20
    #dbg_declare(ptr %bucket, !1827, !DIExpression(), !1829)
  %checknull22 = icmp eq ptr %13, null, !dbg !1829
  %21 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !1829
  br i1 %21, label %panic23, label %checkok27, !dbg !1829

checkok27:                                        ; preds = %loop.body21
  %22 = ptrtoint ptr %13 to i64, !dbg !1829
  %23 = urem i64 %22, 8, !dbg !1829
  %24 = icmp ne i64 %23, 0, !dbg !1829
  %25 = call i1 @llvm.expect.i1(i1 %24, i1 false), !dbg !1829
  br i1 %25, label %panic28, label %checkok38, !dbg !1829

checkok38:                                        ; preds = %checkok27
  %ptradd39 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !1829
  %26 = load i64, ptr %ptradd39, align 8, !dbg !1829
  %27 = load ptr, ptr %13, align 8, !dbg !1829
  %28 = load i64, ptr %.anon, align 8, !dbg !1829
  %ge = icmp uge i64 %28, %26, !dbg !1829
  %29 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1829
  br i1 %29, label %panic40, label %checkok50, !dbg !1829

checkok50:                                        ; preds = %checkok38
  %ptroffset = getelementptr inbounds [8 x i8], ptr %27, i64 %28, !dbg !1829
  store ptr %ptroffset, ptr %bucket, align 8, !dbg !1829
  %30 = load ptr, ptr %bucket, align 8, !dbg !1830
  %checknull51 = icmp eq ptr %30, null, !dbg !1830
  %31 = call i1 @llvm.expect.i1(i1 %checknull51, i1 false), !dbg !1830
  br i1 %31, label %panic52, label %checkok56, !dbg !1830

checkok56:                                        ; preds = %checkok50
  %32 = ptrtoint ptr %30 to i64, !dbg !1830
  %33 = urem i64 %32, 8, !dbg !1830
  %34 = icmp ne i64 %33, 0, !dbg !1830
  %35 = call i1 @llvm.expect.i1(i1 %34, i1 false), !dbg !1830
  br i1 %35, label %panic57, label %checkok67, !dbg !1830

checkok67:                                        ; preds = %checkok56
  store ptr null, ptr %30, align 8, !dbg !1830
  %36 = load i64, ptr %.anon, align 8, !dbg !1824
  %addnuw = add nuw i64 %36, 1, !dbg !1824
  store i64 %addnuw, ptr %.anon, align 8, !dbg !1824
  br label %loop.cond20, !dbg !1824

loop.exit68:                                      ; preds = %loop.cond20
  %37 = load ptr, ptr %map, align 8, !dbg !1832
  %ptradd69 = getelementptr inbounds i8, ptr %37, i64 32, !dbg !1832
  store i64 0, ptr %ptradd69, align 8, !dbg !1832
  %38 = load ptr, ptr %map, align 8, !dbg !1833
  %ptradd70 = getelementptr inbounds i8, ptr %38, i64 56, !dbg !1833
  store ptr null, ptr %ptradd70, align 8, !dbg !1833
  %39 = load ptr, ptr %map, align 8, !dbg !1834
  %ptradd71 = getelementptr inbounds i8, ptr %39, i64 64, !dbg !1834
  store ptr null, ptr %ptradd71, align 8, !dbg !1834
  ret void, !dbg !1834

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg2, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 248) #5, !dbg !1812
  unreachable, !dbg !1812

panic6:                                           ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg9, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 260) #5, !dbg !1824
  unreachable, !dbg !1824

panic11:                                          ; preds = %checkok10
  store i64 8, ptr %taddr, align 8
  %42 = insertvalue %any undef, ptr %taddr, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %16, ptr %taddr12, align 8
  %44 = insertvalue %any undef, ptr %taddr12, 0
  %45 = insertvalue %any %44, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg15, align 8
  store %any %43, ptr %varargslots, align 16
  %ptradd16 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %45, ptr %ptradd16, align 16
  %46 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %46, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg17, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 260, ptr align 8 %indirectarg17) #5, !dbg !1824
  unreachable, !dbg !1824

panic23:                                          ; preds = %loop.body21
  store %"char[]" { ptr @.panic_msg.42, i64 50 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg26, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 260) #5, !dbg !1829
  unreachable, !dbg !1829

panic28:                                          ; preds = %checkok27
  store i64 8, ptr %taddr29, align 8
  %48 = insertvalue %any undef, ptr %taddr29, 0
  %49 = insertvalue %any %48, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %23, ptr %taddr30, align 8
  %50 = insertvalue %any undef, ptr %taddr30, 0
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg33, align 8
  store %any %49, ptr %varargslots34, align 16
  %ptradd35 = getelementptr inbounds i8, ptr %varargslots34, i64 16
  store %any %51, ptr %ptradd35, align 16
  %52 = insertvalue %"any[]" undef, ptr %varargslots34, 0
  %"$$temp36" = insertvalue %"any[]" %52, i64 2, 1
  store %"any[]" %"$$temp36", ptr %indirectarg37, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 260, ptr align 8 %indirectarg37) #5, !dbg !1829
  unreachable, !dbg !1829

panic40:                                          ; preds = %checkok38
  store i64 %26, ptr %taddr41, align 8
  %53 = insertvalue %any undef, ptr %taddr41, 0
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %28, ptr %taddr42, align 8
  %55 = insertvalue %any undef, ptr %taddr42, 0
  %56 = insertvalue %any %55, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg45, align 8
  store %any %54, ptr %varargslots46, align 16
  %ptradd47 = getelementptr inbounds i8, ptr %varargslots46, i64 16
  store %any %56, ptr %ptradd47, align 16
  %57 = insertvalue %"any[]" undef, ptr %varargslots46, 0
  %"$$temp48" = insertvalue %"any[]" %57, i64 2, 1
  store %"any[]" %"$$temp48", ptr %indirectarg49, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 260, ptr align 8 %indirectarg49) #5, !dbg !1829
  unreachable, !dbg !1829

panic52:                                          ; preds = %checkok50
  store %"char[]" { ptr @.panic_msg.78, i64 47 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg55, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, i32 262) #5, !dbg !1830
  unreachable, !dbg !1830

panic57:                                          ; preds = %checkok56
  store i64 8, ptr %taddr58, align 8
  %59 = insertvalue %any undef, ptr %taddr58, 0
  %60 = insertvalue %any %59, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %33, ptr %taddr59, align 8
  %61 = insertvalue %any undef, ptr %taddr59, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.41, i64 5 }, ptr %indirectarg62, align 8
  store %any %60, ptr %varargslots63, align 16
  %ptradd64 = getelementptr inbounds i8, ptr %varargslots63, i64 16
  store %any %62, ptr %ptradd64, align 16
  %63 = insertvalue %"any[]" undef, ptr %varargslots63, 0
  %"$$temp65" = insertvalue %"any[]" %63, i64 2, 1
  store %"any[]" %"$$temp65", ptr %indirectarg66, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 262, ptr align 8 %indirectarg66) #5, !dbg !1830
  unreachable, !dbg !1830
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free"(ptr %0) #0 comdat !dbg !1835 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1836
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1836
  br i1 %2, label %panic, label %checkok, !dbg !1836

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1837, !DIExpression(), !1838)
  %3 = load ptr, ptr %map, align 8, !dbg !1839
  %4 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized"(ptr %3), !dbg !1839
  %5 = trunc i8 %4 to i1, !dbg !1839
  br i1 %5, label %if.exit, label %if.else, !dbg !1839

if.else:                                          ; preds = %checkok
  ret void, !dbg !1839

if.exit:                                          ; preds = %checkok
  %6 = load ptr, ptr %map, align 8, !dbg !1840
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.clear"(ptr %6), !dbg !1840
  %7 = load ptr, ptr %map, align 8, !dbg !1841
  %8 = load ptr, ptr %7, align 8, !dbg !1841
  %9 = load ptr, ptr %map, align 8, !dbg !1841
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_internal"(ptr %9, ptr %8) #6, !dbg !1841
  %10 = load ptr, ptr %map, align 8, !dbg !1842
  store %"LinkedEntry*[]" zeroinitializer, ptr %10, align 8, !dbg !1842
  ret void, !dbg !1842

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.44, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 270) #5, !dbg !1838
  unreachable, !dbg !1838
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tkeys"(ptr noalias sret(%"char[][]") align 8 %0, ptr %1) #0 comdat !dbg !1843 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %sretparam = alloca %"char[][]", align 8
  %indirectarg3 = alloca %any, align 8
  %2 = icmp eq ptr %1, null, !dbg !1846
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1846
  br i1 %3, label %panic, label %checkok, !dbg !1846

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1847, !DIExpression(), !1848)
  %4 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1849
  %5 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %4, i32 16, i1 false)
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.keys"(ptr sret(%"char[][]") align 8 %sretparam, ptr %5, ptr align 8 %indirectarg3) #6, !dbg !1849
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1849
  ret void, !dbg !1849

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.45, i64 5 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 278) #5, !dbg !1848
  unreachable, !dbg !1848
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.keys"(ptr noalias sret(%"char[][]") align 8 %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1850 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %list = alloca %"char[][]", align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator4 = alloca %any, align 8
  %elements5 = alloca i64, align 8
  %allocator6 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr31 = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg35 = alloca %"any[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [1 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %index = alloca i64, align 8
  %entry44 = alloca ptr, align 8
  %sretparam = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %any, align 8
  %taddr52 = alloca i64, align 8
  %taddr53 = alloca i64, align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %varargslots57 = alloca [2 x %any], align 16
  %indirectarg60 = alloca %"any[]", align 8
  %taddr63 = alloca i64, align 8
  %taddr64 = alloca i64, align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %varargslots68 = alloca [2 x %any], align 16
  %indirectarg71 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1853
  %3 = icmp eq ptr %1, null, !dbg !1853
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1853
  br i1 %4, label %panic, label %checkok, !dbg !1853

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1854, !DIExpression(), !1855)
    #dbg_declare(ptr %2, !1856, !DIExpression(), !1855)
  %5 = load ptr, ptr %self, align 8, !dbg !1857
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !1857
  %6 = load i64, ptr %ptradd, align 8, !dbg !1857
  %i2nb = icmp eq i64 %6, 0, !dbg !1857
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1857

if.then:                                          ; preds = %checkok
  store %"char[][]" zeroinitializer, ptr %0, align 8, !dbg !1857
  ret void, !dbg !1857

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %list, !1858, !DIExpression(), !1859)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %2, i32 16, i1 false)
  %7 = load ptr, ptr %self, align 8, !dbg !1859
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 32, !dbg !1859
  %8 = load i64, ptr %ptradd3, align 8
  store i64 %8, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator4, ptr align 8 %allocator, i32 16, i1 false)
  %9 = load i64, ptr %elements, align 8
  store i64 %9, ptr %elements5, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator6, ptr align 8 %allocator4, i32 16, i1 false)
  %10 = load i64, ptr %elements5, align 8, !dbg !1860
  %mul = mul i64 16, %10, !dbg !1860
  store i64 %mul, ptr %size, align 8
  %11 = load i64, ptr %size, align 8, !dbg !1864
  %i2nb7 = icmp eq i64 %11, 0, !dbg !1864
  br i1 %i2nb7, label %if.then8, label %if.exit9, !dbg !1864

if.then8:                                         ; preds = %if.exit
  store ptr null, ptr %blockret, align 8, !dbg !1864
  br label %expr_block.exit, !dbg !1864

if.exit9:                                         ; preds = %if.exit
  %12 = load i64, ptr %size, align 8, !dbg !1866
  br i1 true, label %or.phi, label %or.rhs, !dbg !1867

or.rhs:                                           ; preds = %if.exit9
  store i64 0, ptr %x, align 8
  %13 = load i64, ptr %x, align 8, !dbg !1868
  %neq = icmp ne i64 0, %13, !dbg !1868
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1868

and.rhs:                                          ; preds = %or.rhs
  %14 = load i64, ptr %x, align 8, !dbg !1868
  %15 = load i64, ptr %x, align 8, !dbg !1868
  %sub = sub i64 %15, 1, !dbg !1868
  %and = and i64 %14, %sub, !dbg !1868
  %eq = icmp eq i64 %and, 0, !dbg !1868
  br label %and.phi, !dbg !1868

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1868
  br label %or.phi, !dbg !1868

or.phi:                                           ; preds = %and.phi, %if.exit9
  %val10 = phi i1 [ true, %if.exit9 ], [ %val, %and.phi ], !dbg !1868
  br i1 %val10, label %assert_ok, label %assert_fail, !dbg !1868

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg13, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 86) #5, !dbg !1866
  unreachable, !dbg !1866

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok18, label %assert_fail14, !dbg !1866

assert_fail14:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg17, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 86) #5, !dbg !1866
  unreachable, !dbg !1866

assert_ok18:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %12, !dbg !1866
  br i1 %lt, label %assert_ok23, label %assert_fail19, !dbg !1866

assert_fail19:                                    ; preds = %assert_ok18
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg22, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 86) #5, !dbg !1866
  unreachable, !dbg !1866

assert_ok23:                                      ; preds = %assert_ok18
  %ptradd24 = getelementptr inbounds i8, ptr %allocator6, i64 8, !dbg !1866
  %19 = load i64, ptr %ptradd24, align 8, !dbg !1866
  %20 = inttoptr i64 %19 to ptr, !dbg !1866
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1853
  %21 = icmp eq ptr %20, %type, !dbg !1853
  br i1 %21, label %cache_hit, label %cache_miss, !dbg !1853

cache_miss:                                       ; preds = %assert_ok23
  %ptradd25 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !1853
  %22 = load ptr, ptr %ptradd25, align 8, !dbg !1853
  %23 = call ptr @.dyn_search(ptr %22, ptr @"$sel.acquire"), !dbg !1853
  store ptr %23, ptr %.inlinecache, align 8, !dbg !1853
  store ptr %20, ptr %.cachedtype, align 8, !dbg !1853
  br label %24, !dbg !1853

cache_hit:                                        ; preds = %assert_ok23
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1853
  br label %24, !dbg !1853

24:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %23, %cache_miss ], !dbg !1853
  %25 = icmp eq ptr %fn_phi, null, !dbg !1853
  br i1 %25, label %missing_function, label %match, !dbg !1853

missing_function:                                 ; preds = %24
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg28, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 86) #5, !dbg !1866
  unreachable, !dbg !1866

match:                                            ; preds = %24
  %27 = load ptr, ptr %allocator6, align 8
  %28 = call i64 %fn_phi(ptr %retparam, ptr %27, i64 %12, i32 0, i64 0), !dbg !1866
  %not_err = icmp eq i64 %28, 0, !dbg !1866
  %29 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1866
  br i1 %29, label %after_check, label %assign_optional, !dbg !1866

assign_optional:                                  ; preds = %match
  store i64 %28, ptr %error_var, align 8, !dbg !1866
  br label %panic_block, !dbg !1866

after_check:                                      ; preds = %match
  %30 = load ptr, ptr %retparam, align 8, !dbg !1866
  store ptr %30, ptr %blockret, align 8, !dbg !1866
  br label %expr_block.exit, !dbg !1866

expr_block.exit:                                  ; preds = %after_check, %if.then8
  %31 = load ptr, ptr %blockret, align 8, !dbg !1866
  store ptr %31, ptr %taddr, align 8
  %32 = load ptr, ptr %taddr, align 8
  %33 = load i64, ptr %elements5, align 8, !dbg !1860
  %add = add i64 0, %33, !dbg !1860
  %gt = icmp ugt i64 0, %add, !dbg !1860
  %sub29 = sub i64 %add, 0, !dbg !1860
  %34 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !1860
  br i1 %34, label %panic30, label %checkok36, !dbg !1860

checkok36:                                        ; preds = %expr_block.exit
  %size37 = sub i64 %add, 0, !dbg !1860
  %35 = insertvalue %"char[][]" undef, ptr %32, 0, !dbg !1860
  %36 = insertvalue %"char[][]" %35, i64 %size37, 1, !dbg !1860
  br label %noerr_block, !dbg !1860

panic_block:                                      ; preds = %assign_optional
  %37 = insertvalue %any undef, ptr %error_var, 0, !dbg !1860
  %38 = insertvalue %any %37, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1860
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg40, align 8
  store %any %38, ptr %varargslots41, align 16
  %39 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp42" = insertvalue %"any[]" %39, i64 1, 1
  store %"any[]" %"$$temp42", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 287, ptr align 8 %indirectarg43) #5, !dbg !1862
  unreachable, !dbg !1862

noerr_block:                                      ; preds = %checkok36
  store %"char[][]" %36, ptr %list, align 8, !dbg !1862
    #dbg_declare(ptr %index, !1870, !DIExpression(), !1871)
  store i64 0, ptr %index, align 8, !dbg !1871
    #dbg_declare(ptr %entry44, !1872, !DIExpression(), !1873)
  %40 = load ptr, ptr %self, align 8, !dbg !1873
  %ptradd45 = getelementptr inbounds i8, ptr %40, i64 56, !dbg !1873
  %41 = load ptr, ptr %ptradd45, align 8, !dbg !1873
  store ptr %41, ptr %entry44, align 8, !dbg !1873
  br label %loop.cond, !dbg !1874

loop.cond:                                        ; preds = %checkok72, %noerr_block
  %42 = load ptr, ptr %entry44, align 8, !dbg !1875
  %i2b = icmp ne ptr %42, null, !dbg !1875
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !1875

loop.body:                                        ; preds = %loop.cond
  %43 = load ptr, ptr %entry44, align 8, !dbg !1877
  %ptradd46 = getelementptr inbounds i8, ptr %43, i64 8, !dbg !1877
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg47, ptr align 8 %ptradd46, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg48, ptr align 8 %2, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %sretparam, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48), !dbg !1877
  %ptradd49 = getelementptr inbounds i8, ptr %list, i64 8, !dbg !1877
  %44 = load i64, ptr %ptradd49, align 8, !dbg !1877
  %45 = load ptr, ptr %list, align 8, !dbg !1877
  %46 = load i64, ptr %index, align 8, !dbg !1877
  %add50 = add i64 %46, 1, !dbg !1877
  store i64 %add50, ptr %index, align 8, !dbg !1877
  %ge = icmp uge i64 %46, %44, !dbg !1877
  %47 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1877
  br i1 %47, label %panic51, label %checkok61, !dbg !1877

checkok61:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [16 x i8], ptr %45, i64 %46, !dbg !1877
  %48 = ptrtoint ptr %ptroffset to i64, !dbg !1877
  %49 = urem i64 %48, 8, !dbg !1877
  %50 = icmp ne i64 %49, 0, !dbg !1877
  %51 = call i1 @llvm.expect.i1(i1 %50, i1 false), !dbg !1877
  br i1 %51, label %panic62, label %checkok72, !dbg !1877

checkok72:                                        ; preds = %checkok61
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptroffset, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1877
  %52 = load ptr, ptr %entry44, align 8, !dbg !1879
  %ptradd73 = getelementptr inbounds i8, ptr %52, i64 48, !dbg !1879
  %53 = load ptr, ptr %ptradd73, align 8, !dbg !1879
  store ptr %53, ptr %entry44, align 8, !dbg !1879
  br label %loop.cond, !dbg !1879

loop.exit:                                        ; preds = %loop.cond
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %list, i32 16, i1 false), !dbg !1880
  ret void, !dbg !1880

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg2, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 283) #5, !dbg !1855
  unreachable, !dbg !1855

panic30:                                          ; preds = %expr_block.exit
  store i64 %sub29, ptr %taddr31, align 8
  %55 = insertvalue %any undef, ptr %taddr31, 0
  %56 = insertvalue %any %55, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg34, align 8
  store %any %56, ptr %varargslots, align 16
  %57 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %57, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg35, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 304, ptr align 8 %indirectarg35) #5, !dbg !1860
  unreachable, !dbg !1860

panic51:                                          ; preds = %loop.body
  store i64 %44, ptr %taddr52, align 8
  %58 = insertvalue %any undef, ptr %taddr52, 0
  %59 = insertvalue %any %58, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %46, ptr %taddr53, align 8
  %60 = insertvalue %any undef, ptr %taddr53, 0
  %61 = insertvalue %any %60, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg56, align 8
  store %any %59, ptr %varargslots57, align 16
  %ptradd58 = getelementptr inbounds i8, ptr %varargslots57, i64 16
  store %any %61, ptr %ptradd58, align 16
  %62 = insertvalue %"any[]" undef, ptr %varargslots57, 0
  %"$$temp59" = insertvalue %"any[]" %62, i64 2, 1
  store %"any[]" %"$$temp59", ptr %indirectarg60, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 294, ptr align 8 %indirectarg60) #5, !dbg !1877
  unreachable, !dbg !1877

panic62:                                          ; preds = %checkok61
  store i64 8, ptr %taddr63, align 8
  %63 = insertvalue %any undef, ptr %taddr63, 0
  %64 = insertvalue %any %63, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %49, ptr %taddr64, align 8
  %65 = insertvalue %any undef, ptr %taddr64, 0
  %66 = insertvalue %any %65, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.func.46, i64 4 }, ptr %indirectarg67, align 8
  store %any %64, ptr %varargslots68, align 16
  %ptradd69 = getelementptr inbounds i8, ptr %varargslots68, i64 16
  store %any %66, ptr %ptradd69, align 16
  %67 = insertvalue %"any[]" undef, ptr %varargslots68, 0
  %"$$temp70" = insertvalue %"any[]" %67, i64 2, 1
  store %"any[]" %"$$temp70", ptr %indirectarg71, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, i32 294, ptr align 8 %indirectarg71) #5, !dbg !1877
  unreachable, !dbg !1877
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tvalues"(ptr noalias sret(%"MenuItem*[]") align 8 %0, ptr %1) #0 comdat !dbg !1881 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %sretparam = alloca %"MenuItem*[]", align 8
  %indirectarg3 = alloca %any, align 8
  %2 = icmp eq ptr %1, null, !dbg !1884
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1884
  br i1 %3, label %panic, label %checkok, !dbg !1884

checkok:                                          ; preds = %entry
  store ptr %1, ptr %map, align 8
    #dbg_declare(ptr %map, !1885, !DIExpression(), !1884)
  %4 = call ptr @llvm.threadlocal.address.p0(ptr @std.core.mem.allocator.current_temp), !dbg !1884
  %5 = load ptr, ptr %map, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %4, i32 16, i1 false)
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.values"(ptr sret(%"MenuItem*[]") align 8 %sretparam, ptr %5, ptr align 8 %indirectarg3) #6, !dbg !1884
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1884
  ret void, !dbg !1884

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.48, i64 7 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 321) #5, !dbg !1884
  unreachable, !dbg !1884
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.values"(ptr noalias sret(%"MenuItem*[]") align 8 %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1886 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %list = alloca %"MenuItem*[]", align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator4 = alloca %any, align 8
  %elements5 = alloca i64, align 8
  %allocator6 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr31 = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg35 = alloca %"any[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots41 = alloca [1 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %index = alloca i64, align 8
  %entry44 = alloca ptr, align 8
  %taddr50 = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots55 = alloca [2 x %any], align 16
  %indirectarg58 = alloca %"any[]", align 8
  %taddr61 = alloca i64, align 8
  %taddr62 = alloca i64, align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %varargslots66 = alloca [2 x %any], align 16
  %indirectarg69 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1889
  %3 = icmp eq ptr %1, null, !dbg !1889
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1889
  br i1 %4, label %panic, label %checkok, !dbg !1889

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1890, !DIExpression(), !1891)
    #dbg_declare(ptr %2, !1892, !DIExpression(), !1891)
  %5 = load ptr, ptr %self, align 8, !dbg !1893
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !1893
  %6 = load i64, ptr %ptradd, align 8, !dbg !1893
  %i2nb = icmp eq i64 %6, 0, !dbg !1893
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !1893

if.then:                                          ; preds = %checkok
  store %"MenuItem*[]" zeroinitializer, ptr %0, align 8, !dbg !1893
  ret void, !dbg !1893

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %list, !1894, !DIExpression(), !1895)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %2, i32 16, i1 false)
  %7 = load ptr, ptr %self, align 8, !dbg !1895
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 32, !dbg !1895
  %8 = load i64, ptr %ptradd3, align 8
  store i64 %8, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator4, ptr align 8 %allocator, i32 16, i1 false)
  %9 = load i64, ptr %elements, align 8
  store i64 %9, ptr %elements5, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator6, ptr align 8 %allocator4, i32 16, i1 false)
  %10 = load i64, ptr %elements5, align 8, !dbg !1896
  %mul = mul i64 8, %10, !dbg !1896
  store i64 %mul, ptr %size, align 8
  %11 = load i64, ptr %size, align 8, !dbg !1900
  %i2nb7 = icmp eq i64 %11, 0, !dbg !1900
  br i1 %i2nb7, label %if.then8, label %if.exit9, !dbg !1900

if.then8:                                         ; preds = %if.exit
  store ptr null, ptr %blockret, align 8, !dbg !1900
  br label %expr_block.exit, !dbg !1900

if.exit9:                                         ; preds = %if.exit
  %12 = load i64, ptr %size, align 8, !dbg !1902
  br i1 true, label %or.phi, label %or.rhs, !dbg !1903

or.rhs:                                           ; preds = %if.exit9
  store i64 0, ptr %x, align 8
  %13 = load i64, ptr %x, align 8, !dbg !1904
  %neq = icmp ne i64 0, %13, !dbg !1904
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1904

and.rhs:                                          ; preds = %or.rhs
  %14 = load i64, ptr %x, align 8, !dbg !1904
  %15 = load i64, ptr %x, align 8, !dbg !1904
  %sub = sub i64 %15, 1, !dbg !1904
  %and = and i64 %14, %sub, !dbg !1904
  %eq = icmp eq i64 %and, 0, !dbg !1904
  br label %and.phi, !dbg !1904

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1904
  br label %or.phi, !dbg !1904

or.phi:                                           ; preds = %and.phi, %if.exit9
  %val10 = phi i1 [ true, %if.exit9 ], [ %val, %and.phi ], !dbg !1904
  br i1 %val10, label %assert_ok, label %assert_fail, !dbg !1904

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg13, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 86) #5, !dbg !1902
  unreachable, !dbg !1902

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok18, label %assert_fail14, !dbg !1902

assert_fail14:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg17, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 86) #5, !dbg !1902
  unreachable, !dbg !1902

assert_ok18:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %12, !dbg !1902
  br i1 %lt, label %assert_ok23, label %assert_fail19, !dbg !1902

assert_fail19:                                    ; preds = %assert_ok18
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg22, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 86) #5, !dbg !1902
  unreachable, !dbg !1902

assert_ok23:                                      ; preds = %assert_ok18
  %ptradd24 = getelementptr inbounds i8, ptr %allocator6, i64 8, !dbg !1902
  %19 = load i64, ptr %ptradd24, align 8, !dbg !1902
  %20 = inttoptr i64 %19 to ptr, !dbg !1902
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1889
  %21 = icmp eq ptr %20, %type, !dbg !1889
  br i1 %21, label %cache_hit, label %cache_miss, !dbg !1889

cache_miss:                                       ; preds = %assert_ok23
  %ptradd25 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !1889
  %22 = load ptr, ptr %ptradd25, align 8, !dbg !1889
  %23 = call ptr @.dyn_search(ptr %22, ptr @"$sel.acquire"), !dbg !1889
  store ptr %23, ptr %.inlinecache, align 8, !dbg !1889
  store ptr %20, ptr %.cachedtype, align 8, !dbg !1889
  br label %24, !dbg !1889

cache_hit:                                        ; preds = %assert_ok23
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1889
  br label %24, !dbg !1889

24:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %23, %cache_miss ], !dbg !1889
  %25 = icmp eq ptr %fn_phi, null, !dbg !1889
  br i1 %25, label %missing_function, label %match, !dbg !1889

missing_function:                                 ; preds = %24
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg28, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 86) #5, !dbg !1902
  unreachable, !dbg !1902

match:                                            ; preds = %24
  %27 = load ptr, ptr %allocator6, align 8
  %28 = call i64 %fn_phi(ptr %retparam, ptr %27, i64 %12, i32 0, i64 0), !dbg !1902
  %not_err = icmp eq i64 %28, 0, !dbg !1902
  %29 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1902
  br i1 %29, label %after_check, label %assign_optional, !dbg !1902

assign_optional:                                  ; preds = %match
  store i64 %28, ptr %error_var, align 8, !dbg !1902
  br label %panic_block, !dbg !1902

after_check:                                      ; preds = %match
  %30 = load ptr, ptr %retparam, align 8, !dbg !1902
  store ptr %30, ptr %blockret, align 8, !dbg !1902
  br label %expr_block.exit, !dbg !1902

expr_block.exit:                                  ; preds = %after_check, %if.then8
  %31 = load ptr, ptr %blockret, align 8, !dbg !1902
  store ptr %31, ptr %taddr, align 8
  %32 = load ptr, ptr %taddr, align 8
  %33 = load i64, ptr %elements5, align 8, !dbg !1896
  %add = add i64 0, %33, !dbg !1896
  %gt = icmp ugt i64 0, %add, !dbg !1896
  %sub29 = sub i64 %add, 0, !dbg !1896
  %34 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !1896
  br i1 %34, label %panic30, label %checkok36, !dbg !1896

checkok36:                                        ; preds = %expr_block.exit
  %size37 = sub i64 %add, 0, !dbg !1896
  %35 = insertvalue %"MenuItem*[]" undef, ptr %32, 0, !dbg !1896
  %36 = insertvalue %"MenuItem*[]" %35, i64 %size37, 1, !dbg !1896
  br label %noerr_block, !dbg !1896

panic_block:                                      ; preds = %assign_optional
  %37 = insertvalue %any undef, ptr %error_var, 0, !dbg !1896
  %38 = insertvalue %any %37, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !1896
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg40, align 8
  store %any %38, ptr %varargslots41, align 16
  %39 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %"$$temp42" = insertvalue %"any[]" %39, i64 1, 1
  store %"any[]" %"$$temp42", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 287, ptr align 8 %indirectarg43) #5, !dbg !1898
  unreachable, !dbg !1898

noerr_block:                                      ; preds = %checkok36
  store %"MenuItem*[]" %36, ptr %list, align 8, !dbg !1898
    #dbg_declare(ptr %index, !1906, !DIExpression(), !1907)
  store i64 0, ptr %index, align 8, !dbg !1907
    #dbg_declare(ptr %entry44, !1908, !DIExpression(), !1909)
  %40 = load ptr, ptr %self, align 8, !dbg !1909
  %ptradd45 = getelementptr inbounds i8, ptr %40, i64 56, !dbg !1909
  %41 = load ptr, ptr %ptradd45, align 8, !dbg !1909
  store ptr %41, ptr %entry44, align 8, !dbg !1909
  br label %loop.cond, !dbg !1910

loop.cond:                                        ; preds = %checkok70, %noerr_block
  %42 = load ptr, ptr %entry44, align 8, !dbg !1911
  %i2b = icmp ne ptr %42, null, !dbg !1911
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !1911

loop.body:                                        ; preds = %loop.cond
  %43 = load ptr, ptr %entry44, align 8, !dbg !1913
  %ptradd46 = getelementptr inbounds i8, ptr %43, i64 24, !dbg !1913
  %ptradd47 = getelementptr inbounds i8, ptr %list, i64 8, !dbg !1913
  %44 = load i64, ptr %ptradd47, align 8, !dbg !1913
  %45 = load ptr, ptr %list, align 8, !dbg !1913
  %46 = load i64, ptr %index, align 8, !dbg !1913
  %add48 = add i64 %46, 1, !dbg !1913
  store i64 %add48, ptr %index, align 8, !dbg !1913
  %ge = icmp uge i64 %46, %44, !dbg !1913
  %47 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1913
  br i1 %47, label %panic49, label %checkok59, !dbg !1913

checkok59:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [8 x i8], ptr %45, i64 %46, !dbg !1913
  %48 = ptrtoint ptr %ptroffset to i64, !dbg !1913
  %49 = urem i64 %48, 8, !dbg !1913
  %50 = icmp ne i64 %49, 0, !dbg !1913
  %51 = call i1 @llvm.expect.i1(i1 %50, i1 false), !dbg !1913
  br i1 %51, label %panic60, label %checkok70, !dbg !1913

checkok70:                                        ; preds = %checkok59
  %52 = load ptr, ptr %ptradd46, align 8, !dbg !1913
  store ptr %52, ptr %ptroffset, align 8, !dbg !1913
  %53 = load ptr, ptr %entry44, align 8, !dbg !1915
  %ptradd71 = getelementptr inbounds i8, ptr %53, i64 48, !dbg !1915
  %54 = load ptr, ptr %ptradd71, align 8, !dbg !1915
  store ptr %54, ptr %entry44, align 8, !dbg !1915
  br label %loop.cond, !dbg !1915

loop.exit:                                        ; preds = %loop.cond
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %list, i32 16, i1 false), !dbg !1916
  ret void, !dbg !1916

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg2, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 323) #5, !dbg !1891
  unreachable, !dbg !1891

panic30:                                          ; preds = %expr_block.exit
  store i64 %sub29, ptr %taddr31, align 8
  %56 = insertvalue %any undef, ptr %taddr31, 0
  %57 = insertvalue %any %56, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg34, align 8
  store %any %57, ptr %varargslots, align 16
  %58 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %58, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg35, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 304, ptr align 8 %indirectarg35) #5, !dbg !1896
  unreachable, !dbg !1896

panic49:                                          ; preds = %loop.body
  store i64 %44, ptr %taddr50, align 8
  %59 = insertvalue %any undef, ptr %taddr50, 0
  %60 = insertvalue %any %59, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %46, ptr %taddr51, align 8
  %61 = insertvalue %any undef, ptr %taddr51, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg54, align 8
  store %any %60, ptr %varargslots55, align 16
  %ptradd56 = getelementptr inbounds i8, ptr %varargslots55, i64 16
  store %any %62, ptr %ptradd56, align 16
  %63 = insertvalue %"any[]" undef, ptr %varargslots55, 0
  %"$$temp57" = insertvalue %"any[]" %63, i64 2, 1
  store %"any[]" %"$$temp57", ptr %indirectarg58, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 331, ptr align 8 %indirectarg58) #5, !dbg !1913
  unreachable, !dbg !1913

panic60:                                          ; preds = %checkok59
  store i64 8, ptr %taddr61, align 8
  %64 = insertvalue %any undef, ptr %taddr61, 0
  %65 = insertvalue %any %64, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %49, ptr %taddr62, align 8
  %66 = insertvalue %any undef, ptr %taddr62, 0
  %67 = insertvalue %any %66, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.func.49, i64 6 }, ptr %indirectarg65, align 8
  store %any %65, ptr %varargslots66, align 16
  %ptradd67 = getelementptr inbounds i8, ptr %varargslots66, i64 16
  store %any %67, ptr %ptradd67, align 16
  %68 = insertvalue %"any[]" undef, ptr %varargslots66, 0
  %"$$temp68" = insertvalue %"any[]" %68, i64 2, 1
  store %"any[]" %"$$temp68", ptr %indirectarg69, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, i32 331, ptr align 8 %indirectarg69) #5, !dbg !1913
  unreachable, !dbg !1913
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.iter"(ptr noalias sret(%LinkedHashMapIterator) align 8 %0, ptr %1) #0 comdat !dbg !1917 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %literal = alloca %LinkedHashMapIterator, align 8
  %2 = icmp eq ptr %1, null, !dbg !1925
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1925
  br i1 %3, label %panic, label %checkok, !dbg !1925

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1926, !DIExpression(), !1925)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %4 = load ptr, ptr %self, align 8, !dbg !1925
  store ptr %4, ptr %literal, align 8, !dbg !1925
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 8, !dbg !1925
  %5 = load ptr, ptr %self, align 8, !dbg !1925
  %ptradd3 = getelementptr inbounds i8, ptr %5, i64 56, !dbg !1925
  %6 = load ptr, ptr %ptradd3, align 8, !dbg !1925
  store ptr %6, ptr %ptradd, align 8, !dbg !1925
  %ptradd4 = getelementptr inbounds i8, ptr %literal, i64 16, !dbg !1925
  store i8 0, ptr %ptradd4, align 8, !dbg !1925
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !1925
  ret void, !dbg !1925

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.50, i64 4 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 350) #5, !dbg !1925
  unreachable, !dbg !1925
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.value_iter"(ptr noalias sret(%LinkedHashMapIterator) align 8 %0, ptr %1) #0 comdat !dbg !1927 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %literal = alloca %LinkedHashMapIterator, align 8
  %2 = icmp eq ptr %1, null, !dbg !1931
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1931
  br i1 %3, label %panic, label %checkok, !dbg !1931

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1932, !DIExpression(), !1931)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %4 = load ptr, ptr %self, align 8, !dbg !1931
  store ptr %4, ptr %literal, align 8, !dbg !1931
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 8, !dbg !1931
  %5 = load ptr, ptr %self, align 8, !dbg !1931
  %ptradd3 = getelementptr inbounds i8, ptr %5, i64 56, !dbg !1931
  %6 = load ptr, ptr %ptradd3, align 8, !dbg !1931
  store ptr %6, ptr %ptradd, align 8, !dbg !1931
  %ptradd4 = getelementptr inbounds i8, ptr %literal, i64 16, !dbg !1931
  store i8 0, ptr %ptradd4, align 8, !dbg !1931
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !1931
  ret void, !dbg !1931

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.51, i64 10 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 352) #5, !dbg !1931
  unreachable, !dbg !1931
}

; Function Attrs: nounwind ssp uwtable
define weak_odr void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.key_iter"(ptr noalias sret(%LinkedHashMapIterator) align 8 %0, ptr %1) #0 comdat !dbg !1933 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %literal = alloca %LinkedHashMapIterator, align 8
  %2 = icmp eq ptr %1, null, !dbg !1937
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1937
  br i1 %3, label %panic, label %checkok, !dbg !1937

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1938, !DIExpression(), !1937)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %4 = load ptr, ptr %self, align 8, !dbg !1937
  store ptr %4, ptr %literal, align 8, !dbg !1937
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 8, !dbg !1937
  %5 = load ptr, ptr %self, align 8, !dbg !1937
  %ptradd3 = getelementptr inbounds i8, ptr %5, i64 56, !dbg !1937
  %6 = load ptr, ptr %ptradd3, align 8, !dbg !1937
  store ptr %6, ptr %ptradd, align 8, !dbg !1937
  %ptradd4 = getelementptr inbounds i8, ptr %literal, i64 16, !dbg !1937
  store i8 0, ptr %ptradd4, align 8, !dbg !1937
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !1937
  ret void, !dbg !1937

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.52, i64 8 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 354) #5, !dbg !1937
  unreachable, !dbg !1937
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.next"(ptr %0) #0 comdat !dbg !1939 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1943
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1943
  br i1 %2, label %panic, label %checkok, !dbg !1943

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1944, !DIExpression(), !1945)
  %3 = load ptr, ptr %self, align 8, !dbg !1946
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !1946
  %4 = load i8, ptr %ptradd, align 8, !dbg !1946
  %5 = trunc i8 %4 to i1, !dbg !1946
  br i1 %5, label %if.then, label %if.else, !dbg !1946

if.then:                                          ; preds = %checkok
  %6 = load ptr, ptr %self, align 8, !dbg !1947
  %ptradd3 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1947
  %7 = load ptr, ptr %ptradd3, align 8, !dbg !1947
  %i2b = icmp ne ptr %7, null, !dbg !1947
  br i1 %i2b, label %if.then4, label %if.exit, !dbg !1947

if.then4:                                         ; preds = %if.then
  %8 = load ptr, ptr %self, align 8, !dbg !1948
  %ptradd5 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !1948
  %9 = load ptr, ptr %ptradd5, align 8, !dbg !1948
  %ptradd6 = getelementptr inbounds i8, ptr %9, i64 48, !dbg !1948
  %10 = load ptr, ptr %self, align 8, !dbg !1948
  %ptradd7 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !1948
  %11 = load ptr, ptr %ptradd6, align 8, !dbg !1948
  store ptr %11, ptr %ptradd7, align 8, !dbg !1948
  br label %if.exit, !dbg !1948

if.exit:                                          ; preds = %if.then4, %if.then
  br label %if.exit11, !dbg !1948

if.else:                                          ; preds = %checkok
  %12 = load ptr, ptr %self, align 8, !dbg !1950
  %13 = load ptr, ptr %12, align 8, !dbg !1950
  %ptradd8 = getelementptr inbounds i8, ptr %13, i64 56, !dbg !1950
  %14 = load ptr, ptr %self, align 8, !dbg !1950
  %ptradd9 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !1950
  %15 = load ptr, ptr %ptradd8, align 8, !dbg !1950
  store ptr %15, ptr %ptradd9, align 8, !dbg !1950
  %16 = load ptr, ptr %self, align 8, !dbg !1952
  %ptradd10 = getelementptr inbounds i8, ptr %16, i64 16, !dbg !1952
  store i8 1, ptr %ptradd10, align 8, !dbg !1952
  br label %if.exit11, !dbg !1952

if.exit11:                                        ; preds = %if.else, %if.exit
  %17 = load ptr, ptr %self, align 8, !dbg !1953
  %ptradd12 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !1953
  %18 = load ptr, ptr %ptradd12, align 8, !dbg !1953
  %neq = icmp ne ptr %18, null, !dbg !1953
  %19 = zext i1 %neq to i8, !dbg !1953
  ret i8 %19, !dbg !1953

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.79, i64 4 }, ptr %indirectarg2, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 356) #5, !dbg !1945
  unreachable, !dbg !1945
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.get"(ptr %0, ptr %1) #0 comdat !dbg !1954 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %2 = icmp eq ptr %1, null, !dbg !1957
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1957
  br i1 %3, label %panic, label %checkok, !dbg !1957

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1958, !DIExpression(), !1959)
  %4 = load ptr, ptr %self, align 8, !dbg !1960
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !1960
  %5 = load ptr, ptr %ptradd, align 8, !dbg !1960
  %i2b = icmp ne ptr %5, null, !dbg !1960
  br i1 %i2b, label %cond.lhs, label %cond.rhs, !dbg !1960

cond.lhs:                                         ; preds = %checkok
  %6 = load ptr, ptr %self, align 8, !dbg !1960
  %ptradd3 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1960
  %7 = load ptr, ptr %ptradd3, align 8, !dbg !1960
  br label %cond.phi, !dbg !1960

cond.rhs:                                         ; preds = %checkok
  store i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), ptr %reterr, align 8, !dbg !1960
  br label %err_retblock, !dbg !1960

cond.phi:                                         ; preds = %cond.lhs
  store ptr %7, ptr %0, align 8, !dbg !1960
  ret i64 0, !dbg !1960

err_retblock:                                     ; preds = %cond.rhs
  %8 = load i64, ptr %reterr, align 8, !dbg !1960
  ret i64 %8, !dbg !1960

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 370) #5, !dbg !1959
  unreachable, !dbg !1959
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator.get"(ptr %0, ptr %1) #0 comdat !dbg !1961 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %2 = icmp eq ptr %1, null, !dbg !1965
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1965
  br i1 %3, label %panic, label %checkok, !dbg !1965

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1966, !DIExpression(), !1967)
  %4 = load ptr, ptr %self, align 8, !dbg !1968
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !1968
  %5 = load ptr, ptr %ptradd, align 8, !dbg !1968
  %i2b = icmp ne ptr %5, null, !dbg !1968
  br i1 %i2b, label %cond.lhs, label %cond.rhs, !dbg !1968

cond.lhs:                                         ; preds = %checkok
  %6 = load ptr, ptr %self, align 8, !dbg !1968
  %ptradd3 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1968
  %7 = load ptr, ptr %ptradd3, align 8, !dbg !1968
  %ptradd4 = getelementptr inbounds i8, ptr %7, i64 24, !dbg !1968
  br label %cond.phi, !dbg !1968

cond.rhs:                                         ; preds = %checkok
  store i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), ptr %reterr, align 8, !dbg !1968
  br label %err_retblock, !dbg !1968

cond.phi:                                         ; preds = %cond.lhs
  store ptr %ptradd4, ptr %0, align 8, !dbg !1968
  ret i64 0, !dbg !1968

err_retblock:                                     ; preds = %cond.rhs
  %8 = load i64, ptr %reterr, align 8, !dbg !1968
  ret i64 %8, !dbg !1968

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 375) #5, !dbg !1967
  unreachable, !dbg !1967
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator.get"(ptr %0, ptr %1) #0 comdat !dbg !1969 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %2 = icmp eq ptr %1, null, !dbg !1974
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1974
  br i1 %3, label %panic, label %checkok, !dbg !1974

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !1975, !DIExpression(), !1976)
  %4 = load ptr, ptr %self, align 8, !dbg !1977
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !1977
  %5 = load ptr, ptr %ptradd, align 8, !dbg !1977
  %i2b = icmp ne ptr %5, null, !dbg !1977
  br i1 %i2b, label %cond.lhs, label %cond.rhs, !dbg !1977

cond.lhs:                                         ; preds = %checkok
  %6 = load ptr, ptr %self, align 8, !dbg !1977
  %ptradd3 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1977
  %7 = load ptr, ptr %ptradd3, align 8, !dbg !1977
  %ptradd4 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !1977
  br label %cond.phi, !dbg !1977

cond.rhs:                                         ; preds = %checkok
  store i64 ptrtoint (ptr @std.core.builtin.NOT_FOUND to i64), ptr %reterr, align 8, !dbg !1977
  br label %err_retblock, !dbg !1977

cond.phi:                                         ; preds = %cond.lhs
  store ptr %ptradd4, ptr %0, align 8, !dbg !1977
  ret i64 0, !dbg !1977

err_retblock:                                     ; preds = %cond.rhs
  %8 = load i64, ptr %reterr, align 8, !dbg !1977
  ret i64 %8, !dbg !1977

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 3 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 380) #5, !dbg !1976
  unreachable, !dbg !1976
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.has_next"(ptr %0) #0 comdat !dbg !1978 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %1 = icmp eq ptr %0, null, !dbg !1979
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1979
  br i1 %2, label %panic, label %checkok, !dbg !1979

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !1980, !DIExpression(), !1981)
  %3 = load ptr, ptr %self, align 8, !dbg !1982
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !1982
  %4 = load i8, ptr %ptradd, align 8, !dbg !1982
  %5 = trunc i8 %4 to i1, !dbg !1982
  br i1 %5, label %if.exit, label %if.else, !dbg !1982

if.else:                                          ; preds = %checkok
  %6 = load ptr, ptr %self, align 8, !dbg !1982
  %7 = load ptr, ptr %6, align 8, !dbg !1982
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 56, !dbg !1982
  %8 = load ptr, ptr %ptradd3, align 8, !dbg !1982
  %neq = icmp ne ptr %8, null, !dbg !1982
  %9 = zext i1 %neq to i8, !dbg !1982
  ret i8 %9, !dbg !1982

if.exit:                                          ; preds = %checkok
  %10 = load ptr, ptr %self, align 8, !dbg !1983
  %ptradd4 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !1983
  %11 = load ptr, ptr %ptradd4, align 8, !dbg !1983
  %i2b = icmp ne ptr %11, null, !dbg !1983
  br i1 %i2b, label %and.rhs, label %and.phi, !dbg !1983

and.rhs:                                          ; preds = %if.exit
  %12 = load ptr, ptr %self, align 8, !dbg !1983
  %ptradd5 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !1983
  %13 = load ptr, ptr %ptradd5, align 8, !dbg !1983
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 48, !dbg !1983
  %14 = load ptr, ptr %ptradd6, align 8, !dbg !1983
  %neq7 = icmp ne ptr %14, null, !dbg !1983
  br label %and.phi, !dbg !1983

and.phi:                                          ; preds = %and.rhs, %if.exit
  %val = phi i1 [ false, %if.exit ], [ %neq7, %and.rhs ], !dbg !1983
  %15 = zext i1 %val to i8, !dbg !1983
  ret i8 %15, !dbg !1983

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.80, i64 8 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 385) #5, !dbg !1981
  unreachable, !dbg !1981
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.add_entry"(ptr %0, i32 %1, ptr align 8 %2, ptr %3, i32 %4) #0 !dbg !1984 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %value = alloca ptr, align 8
  %bucket_index = alloca i32, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %any, align 8
  %entry5 = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %val = alloca ptr, align 8
  %allocator7 = alloca %any, align 8
  %size = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator8 = alloca %any, align 8
  %size9 = alloca i64, align 8
  %blockret10 = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg34 = alloca %"any[]", align 8
  %.assign_list = alloca %LinkedEntry, align 8
  %taddr = alloca i64, align 8
  %taddr40 = alloca i64, align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %varargslots44 = alloca [2 x %any], align 16
  %indirectarg47 = alloca %"any[]", align 8
  %taddr50 = alloca i64, align 8
  %taddr51 = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %varargslots55 = alloca [2 x %any], align 16
  %indirectarg58 = alloca %"any[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %taddr69 = alloca i64, align 8
  %taddr70 = alloca i64, align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %varargslots74 = alloca [2 x %any], align 16
  %indirectarg77 = alloca %"any[]", align 8
  %taddr83 = alloca i64, align 8
  %taddr84 = alloca i64, align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %varargslots88 = alloca [2 x %any], align 16
  %indirectarg91 = alloca %"any[]", align 8
  %taddr95 = alloca i64, align 8
  %taddr96 = alloca i64, align 8
  %indirectarg97 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %varargslots100 = alloca [2 x %any], align 16
  %indirectarg103 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1987
  %5 = icmp eq ptr %0, null, !dbg !1987
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1987
  br i1 %6, label %panic, label %checkok, !dbg !1987

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !1988, !DIExpression(), !1989)
  store i32 %1, ptr %hash, align 4
    #dbg_declare(ptr %hash, !1990, !DIExpression(), !1989)
    #dbg_declare(ptr %2, !1991, !DIExpression(), !1989)
  store ptr %3, ptr %value, align 8
    #dbg_declare(ptr %value, !1992, !DIExpression(), !1989)
  store i32 %4, ptr %bucket_index, align 4
    #dbg_declare(ptr %bucket_index, !1993, !DIExpression(), !1989)
  %7 = load ptr, ptr %map, align 8, !dbg !1994
  %ptradd = getelementptr inbounds i8, ptr %7, i64 16, !dbg !1994
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg4, ptr align 8 %ptradd, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %2, ptr align 8 %indirectarg3, ptr align 8 %indirectarg4), !dbg !1994
    #dbg_declare(ptr %entry5, !1995, !DIExpression(), !1996)
  %8 = load ptr, ptr %map, align 8, !dbg !1996
  %ptradd6 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !1996
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd6, i32 16, i1 false)
    #dbg_declare(ptr %val, !1997, !DIExpression(), !1999)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator7, ptr align 8 %allocator, i32 16, i1 false)
  store i64 56, ptr %size, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator8, ptr align 8 %allocator7, i32 16, i1 false)
  %9 = load i64, ptr %size, align 8
  store i64 %9, ptr %size9, align 8
  %10 = load i64, ptr %size9, align 8, !dbg !2000
  %i2nb = icmp eq i64 %10, 0, !dbg !2000
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2000

if.then:                                          ; preds = %checkok
  store ptr null, ptr %blockret10, align 8, !dbg !2000
  br label %expr_block.exit, !dbg !2000

if.exit:                                          ; preds = %checkok
  %11 = load i64, ptr %size9, align 8, !dbg !2004
  br i1 true, label %or.phi, label %or.rhs, !dbg !2005

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x, align 8
  %12 = load i64, ptr %x, align 8, !dbg !2006
  %neq = icmp ne i64 0, %12, !dbg !2006
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !2006

and.rhs:                                          ; preds = %or.rhs
  %13 = load i64, ptr %x, align 8, !dbg !2006
  %14 = load i64, ptr %x, align 8, !dbg !2006
  %sub = sub i64 %14, 1, !dbg !2006
  %and = and i64 %13, %sub, !dbg !2006
  %eq = icmp eq i64 %and, 0, !dbg !2006
  br label %and.phi, !dbg !2006

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val11 = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !2006
  br label %or.phi, !dbg !2006

or.phi:                                           ; preds = %and.phi, %if.exit
  %val12 = phi i1 [ true, %if.exit ], [ %val11, %and.phi ], !dbg !2006
  br i1 %val12, label %assert_ok, label %assert_fail, !dbg !2006

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg15, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 86) #5, !dbg !2004
  unreachable, !dbg !2004

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok20, label %assert_fail16, !dbg !2004

assert_fail16:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg19, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 86) #5, !dbg !2004
  unreachable, !dbg !2004

assert_ok20:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %11, !dbg !2004
  br i1 %lt, label %assert_ok25, label %assert_fail21, !dbg !2004

assert_fail21:                                    ; preds = %assert_ok20
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg24, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 86) #5, !dbg !2004
  unreachable, !dbg !2004

assert_ok25:                                      ; preds = %assert_ok20
  %ptradd26 = getelementptr inbounds i8, ptr %allocator8, i64 8, !dbg !2004
  %18 = load i64, ptr %ptradd26, align 8, !dbg !2004
  %19 = inttoptr i64 %18 to ptr, !dbg !2004
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1987
  %20 = icmp eq ptr %19, %type, !dbg !1987
  br i1 %20, label %cache_hit, label %cache_miss, !dbg !1987

cache_miss:                                       ; preds = %assert_ok25
  %ptradd27 = getelementptr inbounds i8, ptr %19, i64 16, !dbg !1987
  %21 = load ptr, ptr %ptradd27, align 8, !dbg !1987
  %22 = call ptr @.dyn_search(ptr %21, ptr @"$sel.acquire"), !dbg !1987
  store ptr %22, ptr %.inlinecache, align 8, !dbg !1987
  store ptr %19, ptr %.cachedtype, align 8, !dbg !1987
  br label %23, !dbg !1987

cache_hit:                                        ; preds = %assert_ok25
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1987
  br label %23, !dbg !1987

23:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %22, %cache_miss ], !dbg !1987
  %24 = icmp eq ptr %fn_phi, null, !dbg !1987
  br i1 %24, label %missing_function, label %match, !dbg !1987

missing_function:                                 ; preds = %23
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg30, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 86) #5, !dbg !2004
  unreachable, !dbg !2004

match:                                            ; preds = %23
  %26 = load ptr, ptr %allocator8, align 8
  %27 = call i64 %fn_phi(ptr %retparam, ptr %26, i64 %11, i32 0, i64 0), !dbg !2004
  %not_err = icmp eq i64 %27, 0, !dbg !2004
  %28 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2004
  br i1 %28, label %after_check, label %assign_optional, !dbg !2004

assign_optional:                                  ; preds = %match
  store i64 %27, ptr %error_var, align 8, !dbg !2004
  br label %panic_block, !dbg !2004

after_check:                                      ; preds = %match
  %29 = load ptr, ptr %retparam, align 8, !dbg !2004
  store ptr %29, ptr %blockret10, align 8, !dbg !2004
  br label %expr_block.exit, !dbg !2004

expr_block.exit:                                  ; preds = %after_check, %if.then
  br label %noerr_block, !dbg !2004

panic_block:                                      ; preds = %assign_optional
  %30 = insertvalue %any undef, ptr %error_var, 0, !dbg !2004
  %31 = insertvalue %any %30, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !2004
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg33, align 8
  store %any %31, ptr %varargslots, align 16
  %32 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %32, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg34, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 75, ptr align 8 %indirectarg34) #5, !dbg !2002
  unreachable, !dbg !2002

noerr_block:                                      ; preds = %expr_block.exit
  %33 = load ptr, ptr %blockret10, align 8, !dbg !2002
  store ptr %33, ptr %val, align 8, !dbg !2002
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 56, i1 false)
  %34 = load i32, ptr %hash, align 4, !dbg !2008
  store i32 %34, ptr %.assign_list, align 8, !dbg !2008
  %ptradd35 = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !2008
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd35, ptr align 8 %2, i32 16, i1 false), !dbg !2009
  %ptradd36 = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !2009
  %35 = load ptr, ptr %value, align 8, !dbg !2010
  store ptr %35, ptr %ptradd36, align 8, !dbg !2010
  %ptradd37 = getelementptr inbounds i8, ptr %.assign_list, i64 32, !dbg !2010
  %36 = load ptr, ptr %map, align 8, !dbg !2011
  %ptradd38 = getelementptr inbounds i8, ptr %36, i64 8, !dbg !2011
  %37 = load i64, ptr %ptradd38, align 8, !dbg !2011
  %38 = load ptr, ptr %36, align 8, !dbg !2011
  %39 = load i32, ptr %bucket_index, align 4, !dbg !2011
  %zext = zext i32 %39 to i64, !dbg !2011
  %ge = icmp uge i64 %zext, %37, !dbg !2011
  %40 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2011
  br i1 %40, label %panic39, label %checkok48, !dbg !2011

checkok48:                                        ; preds = %noerr_block
  %ptroffset = getelementptr inbounds [8 x i8], ptr %38, i64 %zext, !dbg !2011
  %41 = ptrtoint ptr %ptroffset to i64, !dbg !2011
  %42 = urem i64 %41, 8, !dbg !2011
  %43 = icmp ne i64 %42, 0, !dbg !2011
  %44 = call i1 @llvm.expect.i1(i1 %43, i1 false), !dbg !2011
  br i1 %44, label %panic49, label %checkok59, !dbg !2011

checkok59:                                        ; preds = %checkok48
  %45 = load ptr, ptr %ptroffset, align 8, !dbg !2011
  store ptr %45, ptr %ptradd37, align 8, !dbg !2011
  %ptradd60 = getelementptr inbounds i8, ptr %.assign_list, i64 40, !dbg !2011
  %46 = load ptr, ptr %map, align 8, !dbg !2012
  %ptradd61 = getelementptr inbounds i8, ptr %46, i64 64, !dbg !2012
  %47 = load ptr, ptr %ptradd61, align 8, !dbg !2012
  store ptr %47, ptr %ptradd60, align 8, !dbg !2012
  %ptradd62 = getelementptr inbounds i8, ptr %.assign_list, i64 48, !dbg !2012
  store ptr null, ptr %ptradd62, align 8, !dbg !2013
  %48 = load ptr, ptr %val, align 8, !dbg !2014
  %checknull = icmp eq ptr %48, null, !dbg !2014
  %49 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2014
  br i1 %49, label %panic63, label %checkok67, !dbg !2014

checkok67:                                        ; preds = %checkok59
  %50 = ptrtoint ptr %48 to i64, !dbg !2014
  %51 = urem i64 %50, 8, !dbg !2014
  %52 = icmp ne i64 %51, 0, !dbg !2014
  %53 = call i1 @llvm.expect.i1(i1 %52, i1 false), !dbg !2014
  br i1 %53, label %panic68, label %checkok78, !dbg !2014

checkok78:                                        ; preds = %checkok67
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %48, ptr align 8 %.assign_list, i32 56, i1 false), !dbg !2014
  %54 = load ptr, ptr %val, align 8, !dbg !2015
  store ptr %54, ptr %entry5, align 8, !dbg !2015
  %55 = load ptr, ptr %map, align 8, !dbg !2016
  %ptradd79 = getelementptr inbounds i8, ptr %55, i64 8, !dbg !2016
  %56 = load i64, ptr %ptradd79, align 8, !dbg !2016
  %57 = load ptr, ptr %55, align 8, !dbg !2016
  %58 = load i32, ptr %bucket_index, align 4, !dbg !2016
  %zext80 = zext i32 %58 to i64, !dbg !2016
  %ge81 = icmp uge i64 %zext80, %56, !dbg !2016
  %59 = call i1 @llvm.expect.i1(i1 %ge81, i1 false), !dbg !2016
  br i1 %59, label %panic82, label %checkok92, !dbg !2016

checkok92:                                        ; preds = %checkok78
  %ptroffset93 = getelementptr inbounds [8 x i8], ptr %57, i64 %zext80, !dbg !2016
  %60 = ptrtoint ptr %ptroffset93 to i64, !dbg !2016
  %61 = urem i64 %60, 8, !dbg !2016
  %62 = icmp ne i64 %61, 0, !dbg !2016
  %63 = call i1 @llvm.expect.i1(i1 %62, i1 false), !dbg !2016
  br i1 %63, label %panic94, label %checkok104, !dbg !2016

checkok104:                                       ; preds = %checkok92
  %64 = load ptr, ptr %entry5, align 8, !dbg !2016
  store ptr %64, ptr %ptroffset93, align 8, !dbg !2016
  %65 = load ptr, ptr %map, align 8, !dbg !2017
  %ptradd105 = getelementptr inbounds i8, ptr %65, i64 64, !dbg !2017
  %66 = load ptr, ptr %ptradd105, align 8, !dbg !2017
  %i2b = icmp ne ptr %66, null, !dbg !2017
  br i1 %i2b, label %if.then106, label %if.else, !dbg !2017

if.then106:                                       ; preds = %checkok104
  %67 = load ptr, ptr %map, align 8, !dbg !2018
  %ptradd107 = getelementptr inbounds i8, ptr %67, i64 64, !dbg !2018
  %68 = load ptr, ptr %ptradd107, align 8, !dbg !2018
  %ptradd108 = getelementptr inbounds i8, ptr %68, i64 48, !dbg !2018
  %69 = load ptr, ptr %entry5, align 8, !dbg !2018
  store ptr %69, ptr %ptradd108, align 8, !dbg !2018
  %70 = load ptr, ptr %map, align 8, !dbg !2020
  %ptradd109 = getelementptr inbounds i8, ptr %70, i64 64, !dbg !2020
  %71 = load ptr, ptr %entry5, align 8, !dbg !2020
  %ptradd110 = getelementptr inbounds i8, ptr %71, i64 40, !dbg !2020
  %72 = load ptr, ptr %ptradd109, align 8, !dbg !2020
  store ptr %72, ptr %ptradd110, align 8, !dbg !2020
  br label %if.exit112, !dbg !2020

if.else:                                          ; preds = %checkok104
  %73 = load ptr, ptr %map, align 8, !dbg !2021
  %ptradd111 = getelementptr inbounds i8, ptr %73, i64 56, !dbg !2021
  %74 = load ptr, ptr %entry5, align 8, !dbg !2021
  store ptr %74, ptr %ptradd111, align 8, !dbg !2021
  br label %if.exit112, !dbg !2021

if.exit112:                                       ; preds = %if.else, %if.then106
  %75 = load ptr, ptr %map, align 8, !dbg !2023
  %ptradd113 = getelementptr inbounds i8, ptr %75, i64 64, !dbg !2023
  %76 = load ptr, ptr %entry5, align 8, !dbg !2023
  store ptr %76, ptr %ptradd113, align 8, !dbg !2023
  %77 = load ptr, ptr %map, align 8, !dbg !2024
  %ptradd114 = getelementptr inbounds i8, ptr %77, i64 32, !dbg !2024
  %78 = load i64, ptr %ptradd114, align 8, !dbg !2024
  %add = add i64 %78, 1, !dbg !2024
  store i64 %add, ptr %ptradd114, align 8, !dbg !2024
  %79 = load ptr, ptr %map, align 8, !dbg !2024
  %ptradd115 = getelementptr inbounds i8, ptr %79, i64 40, !dbg !2024
  %80 = load i64, ptr %ptradd115, align 8, !dbg !2024
  %ge116 = icmp uge i64 %78, %80, !dbg !2024
  br i1 %ge116, label %if.then117, label %if.exit119, !dbg !2024

if.then117:                                       ; preds = %if.exit112
  %81 = load ptr, ptr %map, align 8, !dbg !2025
  %ptradd118 = getelementptr inbounds i8, ptr %81, i64 8, !dbg !2025
  %82 = load i64, ptr %ptradd118, align 8, !dbg !2025
  %mul = mul i64 %82, 2, !dbg !2025
  %trunc = trunc i64 %mul to i32, !dbg !2025
  %83 = load ptr, ptr %map, align 8, !dbg !2025
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.resize"(ptr %83, i32 %trunc), !dbg !2025
  br label %if.exit119, !dbg !2025

if.exit119:                                       ; preds = %if.then117, %if.exit112
  ret void, !dbg !2025

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg2, align 8
  %84 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %84(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 393) #5, !dbg !1989
  unreachable, !dbg !1989

panic39:                                          ; preds = %noerr_block
  store i64 %37, ptr %taddr, align 8
  %85 = insertvalue %any undef, ptr %taddr, 0
  %86 = insertvalue %any %85, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr40, align 8
  %87 = insertvalue %any undef, ptr %taddr40, 0
  %88 = insertvalue %any %87, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg43, align 8
  store %any %86, ptr %varargslots44, align 16
  %ptradd45 = getelementptr inbounds i8, ptr %varargslots44, i64 16
  store %any %88, ptr %ptradd45, align 16
  %89 = insertvalue %"any[]" undef, ptr %varargslots44, 0
  %"$$temp46" = insertvalue %"any[]" %89, i64 2, 1
  store %"any[]" %"$$temp46", ptr %indirectarg47, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 403, ptr align 8 %indirectarg47) #5, !dbg !2011
  unreachable, !dbg !2011

panic49:                                          ; preds = %checkok48
  store i64 8, ptr %taddr50, align 8
  %90 = insertvalue %any undef, ptr %taddr50, 0
  %91 = insertvalue %any %90, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr51, align 8
  %92 = insertvalue %any undef, ptr %taddr51, 0
  %93 = insertvalue %any %92, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg54, align 8
  store %any %91, ptr %varargslots55, align 16
  %ptradd56 = getelementptr inbounds i8, ptr %varargslots55, i64 16
  store %any %93, ptr %ptradd56, align 16
  %94 = insertvalue %"any[]" undef, ptr %varargslots55, 0
  %"$$temp57" = insertvalue %"any[]" %94, i64 2, 1
  store %"any[]" %"$$temp57", ptr %indirectarg58, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 403, ptr align 8 %indirectarg58) #5, !dbg !2011
  unreachable, !dbg !2011

panic63:                                          ; preds = %checkok59
  store %"char[]" { ptr @.panic_msg.54, i64 44 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg66, align 8
  %95 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %95(ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, i32 178) #5, !dbg !2014
  unreachable, !dbg !2014

panic68:                                          ; preds = %checkok67
  store i64 8, ptr %taddr69, align 8
  %96 = insertvalue %any undef, ptr %taddr69, 0
  %97 = insertvalue %any %96, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %51, ptr %taddr70, align 8
  %98 = insertvalue %any undef, ptr %taddr70, 0
  %99 = insertvalue %any %98, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg73, align 8
  store %any %97, ptr %varargslots74, align 16
  %ptradd75 = getelementptr inbounds i8, ptr %varargslots74, i64 16
  store %any %99, ptr %ptradd75, align 16
  %100 = insertvalue %"any[]" undef, ptr %varargslots74, 0
  %"$$temp76" = insertvalue %"any[]" %100, i64 2, 1
  store %"any[]" %"$$temp76", ptr %indirectarg77, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, i32 178, ptr align 8 %indirectarg77) #5, !dbg !2014
  unreachable, !dbg !2014

panic82:                                          ; preds = %checkok78
  store i64 %56, ptr %taddr83, align 8
  %101 = insertvalue %any undef, ptr %taddr83, 0
  %102 = insertvalue %any %101, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext80, ptr %taddr84, align 8
  %103 = insertvalue %any undef, ptr %taddr84, 0
  %104 = insertvalue %any %103, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg87, align 8
  store %any %102, ptr %varargslots88, align 16
  %ptradd89 = getelementptr inbounds i8, ptr %varargslots88, i64 16
  store %any %104, ptr %ptradd89, align 16
  %105 = insertvalue %"any[]" undef, ptr %varargslots88, 0
  %"$$temp90" = insertvalue %"any[]" %105, i64 2, 1
  store %"any[]" %"$$temp90", ptr %indirectarg91, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, i32 409, ptr align 8 %indirectarg91) #5, !dbg !2016
  unreachable, !dbg !2016

panic94:                                          ; preds = %checkok92
  store i64 8, ptr %taddr95, align 8
  %106 = insertvalue %any undef, ptr %taddr95, 0
  %107 = insertvalue %any %106, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %61, ptr %taddr96, align 8
  %108 = insertvalue %any undef, ptr %taddr96, 0
  %109 = insertvalue %any %108, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg97, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg98, align 8
  store %"char[]" { ptr @.func.53, i64 9 }, ptr %indirectarg99, align 8
  store %any %107, ptr %varargslots100, align 16
  %ptradd101 = getelementptr inbounds i8, ptr %varargslots100, i64 16
  store %any %109, ptr %ptradd101, align 16
  %110 = insertvalue %"any[]" undef, ptr %varargslots100, 0
  %"$$temp102" = insertvalue %"any[]" %110, i64 2, 1
  store %"any[]" %"$$temp102", ptr %indirectarg103, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg97, ptr align 8 %indirectarg98, ptr align 8 %indirectarg99, i32 409, ptr align 8 %indirectarg103) #5, !dbg !2016
  unreachable, !dbg !2016
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.resize"(ptr %0, i32 %1) #0 !dbg !2027 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %new_capacity = alloca i32, align 4
  %old_table = alloca %"LinkedEntry*[]", align 8
  %old_capacity = alloca i32, align 4
  %new_table = alloca %"LinkedEntry*[]", align 8
  %allocator = alloca %any, align 8
  %elements = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator5 = alloca %any, align 8
  %elements6 = alloca i64, align 8
  %allocator7 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr32 = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg36 = alloca %"any[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots42 = alloca [1 x %any], align 16
  %indirectarg44 = alloca %"any[]", align 8
  %.anon = alloca i64, align 8
  %i = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr53 = alloca i64, align 8
  %taddr54 = alloca i64, align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %varargslots58 = alloca [2 x %any], align 16
  %indirectarg61 = alloca %"any[]", align 8
  %taddr64 = alloca i64, align 8
  %taddr65 = alloca i64, align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %varargslots69 = alloca [2 x %any], align 16
  %indirectarg72 = alloca %"any[]", align 8
  %lo_head = alloca ptr, align 8
  %lo_tail = alloca ptr, align 8
  %hi_head = alloca ptr, align 8
  %hi_tail = alloca ptr, align 8
  %next = alloca ptr, align 8
  %taddr102 = alloca i64, align 8
  %taddr103 = alloca i64, align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg106 = alloca %"char[]", align 8
  %varargslots107 = alloca [2 x %any], align 16
  %indirectarg110 = alloca %"any[]", align 8
  %taddr114 = alloca i64, align 8
  %taddr115 = alloca i64, align 8
  %indirectarg116 = alloca %"char[]", align 8
  %indirectarg117 = alloca %"char[]", align 8
  %indirectarg118 = alloca %"char[]", align 8
  %varargslots119 = alloca [2 x %any], align 16
  %indirectarg122 = alloca %"any[]", align 8
  %taddr133 = alloca i64, align 8
  %taddr134 = alloca i64, align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %varargslots138 = alloca [2 x %any], align 16
  %indirectarg141 = alloca %"any[]", align 8
  %taddr145 = alloca i64, align 8
  %taddr146 = alloca i64, align 8
  %indirectarg147 = alloca %"char[]", align 8
  %indirectarg148 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %varargslots150 = alloca [2 x %any], align 16
  %indirectarg153 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2030
  %2 = icmp eq ptr %0, null, !dbg !2030
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2030
  br i1 %3, label %panic, label %checkok, !dbg !2030

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2031, !DIExpression(), !2032)
  store i32 %1, ptr %new_capacity, align 4
    #dbg_declare(ptr %new_capacity, !2033, !DIExpression(), !2032)
    #dbg_declare(ptr %old_table, !2034, !DIExpression(), !2035)
  %4 = load ptr, ptr %map, align 8, !dbg !2035
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %old_table, ptr align 8 %4, i32 16, i1 false), !dbg !2035
    #dbg_declare(ptr %old_capacity, !2036, !DIExpression(), !2037)
  %ptradd = getelementptr inbounds i8, ptr %old_table, i64 8, !dbg !2037
  %5 = load i64, ptr %ptradd, align 8, !dbg !2037
  %trunc = trunc i64 %5 to i32, !dbg !2037
  store i32 %trunc, ptr %old_capacity, align 4, !dbg !2037
  %6 = load i32, ptr %old_capacity, align 4, !dbg !2038
  %eq = icmp eq i32 %6, -2147483648, !dbg !2038
  br i1 %eq, label %if.then, label %if.exit, !dbg !2038

if.then:                                          ; preds = %checkok
  %7 = load ptr, ptr %map, align 8, !dbg !2039
  %ptradd3 = getelementptr inbounds i8, ptr %7, i64 40, !dbg !2039
  store i64 4294967295, ptr %ptradd3, align 8, !dbg !2039
  ret void, !dbg !2041

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %new_table, !2042, !DIExpression(), !2043)
  %8 = load ptr, ptr %map, align 8, !dbg !2043
  %ptradd4 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !2043
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd4, i32 16, i1 false)
  %9 = load i32, ptr %new_capacity, align 4, !dbg !2043
  %zext = zext i32 %9 to i64, !dbg !2043
  store i64 %zext, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator5, ptr align 8 %allocator, i32 16, i1 false)
  %10 = load i64, ptr %elements, align 8
  store i64 %10, ptr %elements6, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator7, ptr align 8 %allocator5, i32 16, i1 false)
  %11 = load i64, ptr %elements6, align 8, !dbg !2044
  %mul = mul i64 8, %11, !dbg !2044
  store i64 %mul, ptr %size, align 8
  %12 = load i64, ptr %size, align 8, !dbg !2048
  %i2nb = icmp eq i64 %12, 0, !dbg !2048
  br i1 %i2nb, label %if.then8, label %if.exit9, !dbg !2048

if.then8:                                         ; preds = %if.exit
  store ptr null, ptr %blockret, align 8, !dbg !2048
  br label %expr_block.exit, !dbg !2048

if.exit9:                                         ; preds = %if.exit
  %13 = load i64, ptr %size, align 8, !dbg !2050
  br i1 true, label %or.phi, label %or.rhs, !dbg !2051

or.rhs:                                           ; preds = %if.exit9
  store i64 0, ptr %x, align 8
  %14 = load i64, ptr %x, align 8, !dbg !2052
  %neq = icmp ne i64 0, %14, !dbg !2052
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !2052

and.rhs:                                          ; preds = %or.rhs
  %15 = load i64, ptr %x, align 8, !dbg !2052
  %16 = load i64, ptr %x, align 8, !dbg !2052
  %sub = sub i64 %16, 1, !dbg !2052
  %and = and i64 %15, %sub, !dbg !2052
  %eq10 = icmp eq i64 %and, 0, !dbg !2052
  br label %and.phi, !dbg !2052

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq10, %and.rhs ], !dbg !2052
  br label %or.phi, !dbg !2052

or.phi:                                           ; preds = %and.phi, %if.exit9
  %val11 = phi i1 [ true, %if.exit9 ], [ %val, %and.phi ], !dbg !2052
  br i1 %val11, label %assert_ok, label %assert_fail, !dbg !2052

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg14, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 98) #5, !dbg !2050
  unreachable, !dbg !2050

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok19, label %assert_fail15, !dbg !2050

assert_fail15:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg18, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 98) #5, !dbg !2050
  unreachable, !dbg !2050

assert_ok19:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %13, !dbg !2050
  br i1 %lt, label %assert_ok24, label %assert_fail20, !dbg !2050

assert_fail20:                                    ; preds = %assert_ok19
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg23, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 98) #5, !dbg !2050
  unreachable, !dbg !2050

assert_ok24:                                      ; preds = %assert_ok19
  %ptradd25 = getelementptr inbounds i8, ptr %allocator7, i64 8, !dbg !2050
  %20 = load i64, ptr %ptradd25, align 8, !dbg !2050
  %21 = inttoptr i64 %20 to ptr, !dbg !2050
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2030
  %22 = icmp eq ptr %21, %type, !dbg !2030
  br i1 %22, label %cache_hit, label %cache_miss, !dbg !2030

cache_miss:                                       ; preds = %assert_ok24
  %ptradd26 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !2030
  %23 = load ptr, ptr %ptradd26, align 8, !dbg !2030
  %24 = call ptr @.dyn_search(ptr %23, ptr @"$sel.acquire"), !dbg !2030
  store ptr %24, ptr %.inlinecache, align 8, !dbg !2030
  store ptr %21, ptr %.cachedtype, align 8, !dbg !2030
  br label %25, !dbg !2030

cache_hit:                                        ; preds = %assert_ok24
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2030
  br label %25, !dbg !2030

25:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %24, %cache_miss ], !dbg !2030
  %26 = icmp eq ptr %fn_phi, null, !dbg !2030
  br i1 %26, label %missing_function, label %match, !dbg !2030

missing_function:                                 ; preds = %25
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg29, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 98) #5, !dbg !2050
  unreachable, !dbg !2050

match:                                            ; preds = %25
  %28 = load ptr, ptr %allocator7, align 8
  %29 = call i64 %fn_phi(ptr %retparam, ptr %28, i64 %13, i32 1, i64 0), !dbg !2050
  %not_err = icmp eq i64 %29, 0, !dbg !2050
  %30 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2050
  br i1 %30, label %after_check, label %assign_optional, !dbg !2050

assign_optional:                                  ; preds = %match
  store i64 %29, ptr %error_var, align 8, !dbg !2050
  br label %panic_block, !dbg !2050

after_check:                                      ; preds = %match
  %31 = load ptr, ptr %retparam, align 8, !dbg !2050
  store ptr %31, ptr %blockret, align 8, !dbg !2050
  br label %expr_block.exit, !dbg !2050

expr_block.exit:                                  ; preds = %after_check, %if.then8
  %32 = load ptr, ptr %blockret, align 8, !dbg !2050
  store ptr %32, ptr %taddr, align 8
  %33 = load ptr, ptr %taddr, align 8
  %34 = load i64, ptr %elements6, align 8, !dbg !2044
  %add = add i64 0, %34, !dbg !2044
  %gt = icmp ugt i64 0, %add, !dbg !2044
  %sub30 = sub i64 %add, 0, !dbg !2044
  %35 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !2044
  br i1 %35, label %panic31, label %checkok37, !dbg !2044

checkok37:                                        ; preds = %expr_block.exit
  %size38 = sub i64 %add, 0, !dbg !2044
  %36 = insertvalue %"LinkedEntry*[]" undef, ptr %33, 0, !dbg !2044
  %37 = insertvalue %"LinkedEntry*[]" %36, i64 %size38, 1, !dbg !2044
  br label %noerr_block, !dbg !2044

panic_block:                                      ; preds = %assign_optional
  %38 = insertvalue %any undef, ptr %error_var, 0, !dbg !2044
  %39 = insertvalue %any %38, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !2044
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg41, align 8
  store %any %39, ptr %varargslots42, align 16
  %40 = insertvalue %"any[]" undef, ptr %varargslots42, 0
  %"$$temp43" = insertvalue %"any[]" %40, i64 1, 1
  store %"any[]" %"$$temp43", ptr %indirectarg44, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 262, ptr align 8 %indirectarg44) #5, !dbg !2046
  unreachable, !dbg !2046

noerr_block:                                      ; preds = %checkok37
  store %"LinkedEntry*[]" %37, ptr %new_table, align 8, !dbg !2046
  %41 = load ptr, ptr %map, align 8, !dbg !2054
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %41, ptr align 8 %new_table, i32 16, i1 false), !dbg !2054
  %42 = load i32, ptr %new_capacity, align 4, !dbg !2055
  %uifp = uitofp i32 %42 to float, !dbg !2055
  %43 = load ptr, ptr %map, align 8, !dbg !2055
  %ptradd45 = getelementptr inbounds i8, ptr %43, i64 48, !dbg !2055
  %44 = load float, ptr %ptradd45, align 8, !dbg !2055
  %fmul = fmul float %uifp, %44, !dbg !2055
  %fpui = fptoui float %fmul to i32, !dbg !2055
  %zext46 = zext i32 %fpui to i64, !dbg !2055
  %45 = load ptr, ptr %map, align 8, !dbg !2055
  %ptradd47 = getelementptr inbounds i8, ptr %45, i64 40, !dbg !2055
  store i64 %zext46, ptr %ptradd47, align 8, !dbg !2055
  %ptradd48 = getelementptr inbounds i8, ptr %old_table, i64 8, !dbg !2056
  %46 = load i64, ptr %ptradd48, align 8, !dbg !2056
    #dbg_declare(ptr %.anon, !2058, !DIExpression(), !2056)
  store i64 0, ptr %.anon, align 8, !dbg !2056
  br label %loop.cond, !dbg !2056

loop.cond:                                        ; preds = %loop.inc, %noerr_block
  %47 = load i64, ptr %.anon, align 8, !dbg !2056
  %lt49 = icmp ult i64 %47, %46, !dbg !2056
  br i1 %lt49, label %loop.body, label %loop.exit156, !dbg !2056

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %i, !2059, !DIExpression(), !2061)
  %48 = load i64, ptr %.anon, align 8, !dbg !2061
  %trunc50 = trunc i64 %48 to i32, !dbg !2061
  store i32 %trunc50, ptr %i, align 4, !dbg !2061
    #dbg_declare(ptr %e, !2062, !DIExpression(), !2061)
  %ptradd51 = getelementptr inbounds i8, ptr %old_table, i64 8, !dbg !2061
  %49 = load i64, ptr %ptradd51, align 8, !dbg !2061
  %50 = load ptr, ptr %old_table, align 8, !dbg !2061
  %51 = load i64, ptr %.anon, align 8, !dbg !2061
  %ge = icmp uge i64 %51, %49, !dbg !2061
  %52 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2061
  br i1 %52, label %panic52, label %checkok62, !dbg !2061

checkok62:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [8 x i8], ptr %50, i64 %51, !dbg !2061
  %53 = ptrtoint ptr %ptroffset to i64, !dbg !2061
  %54 = urem i64 %53, 8, !dbg !2061
  %55 = icmp ne i64 %54, 0, !dbg !2061
  %56 = call i1 @llvm.expect.i1(i1 %55, i1 false), !dbg !2061
  br i1 %56, label %panic63, label %checkok73, !dbg !2061

checkok73:                                        ; preds = %checkok62
  %57 = load ptr, ptr %ptroffset, align 8, !dbg !2061
  store ptr %57, ptr %e, align 8, !dbg !2061
  %58 = load ptr, ptr %e, align 8, !dbg !2063
  %i2nb74 = icmp eq ptr %58, null, !dbg !2063
  br i1 %i2nb74, label %if.then75, label %if.exit76, !dbg !2063

if.then75:                                        ; preds = %checkok73
  br label %loop.inc, !dbg !2063

if.exit76:                                        ; preds = %checkok73
    #dbg_declare(ptr %lo_head, !2065, !DIExpression(), !2066)
  store ptr null, ptr %lo_head, align 8, !dbg !2066
    #dbg_declare(ptr %lo_tail, !2067, !DIExpression(), !2068)
  store ptr null, ptr %lo_tail, align 8, !dbg !2068
    #dbg_declare(ptr %hi_head, !2069, !DIExpression(), !2070)
  store ptr null, ptr %hi_head, align 8, !dbg !2070
    #dbg_declare(ptr %hi_tail, !2071, !DIExpression(), !2072)
  store ptr null, ptr %hi_tail, align 8, !dbg !2072
  br label %loop.body78, !dbg !2073

loop.cond77:                                      ; preds = %if.exit93
  %59 = load ptr, ptr %e, align 8, !dbg !2074
  %i2b = icmp ne ptr %59, null, !dbg !2074
  br i1 %i2b, label %loop.body78, label %loop.exit, !dbg !2074

loop.body78:                                      ; preds = %loop.cond77, %if.exit76
    #dbg_declare(ptr %next, !2076, !DIExpression(), !2078)
  %60 = load ptr, ptr %e, align 8, !dbg !2078
  %ptradd79 = getelementptr inbounds i8, ptr %60, i64 32, !dbg !2078
  %61 = load ptr, ptr %ptradd79, align 8, !dbg !2078
  store ptr %61, ptr %next, align 8, !dbg !2078
  %62 = load ptr, ptr %e, align 8, !dbg !2079
  %63 = load i32, ptr %62, align 8, !dbg !2079
  %64 = load i32, ptr %old_capacity, align 4, !dbg !2079
  %and80 = and i32 %63, %64, !dbg !2079
  %eq81 = icmp eq i32 0, %and80, !dbg !2079
  br i1 %eq81, label %if.then82, label %if.else87, !dbg !2079

if.then82:                                        ; preds = %loop.body78
  %65 = load ptr, ptr %lo_tail, align 8, !dbg !2080
  %i2nb83 = icmp eq ptr %65, null, !dbg !2080
  br i1 %i2nb83, label %if.then84, label %if.else, !dbg !2080

if.then84:                                        ; preds = %if.then82
  %66 = load ptr, ptr %e, align 8, !dbg !2082
  store ptr %66, ptr %lo_head, align 8, !dbg !2082
  br label %if.exit86, !dbg !2082

if.else:                                          ; preds = %if.then82
  %67 = load ptr, ptr %lo_tail, align 8, !dbg !2084
  %ptradd85 = getelementptr inbounds i8, ptr %67, i64 32, !dbg !2084
  %68 = load ptr, ptr %e, align 8, !dbg !2084
  store ptr %68, ptr %ptradd85, align 8, !dbg !2084
  br label %if.exit86, !dbg !2084

if.exit86:                                        ; preds = %if.else, %if.then84
  %69 = load ptr, ptr %e, align 8, !dbg !2086
  store ptr %69, ptr %lo_tail, align 8, !dbg !2086
  br label %if.exit93, !dbg !2086

if.else87:                                        ; preds = %loop.body78
  %70 = load ptr, ptr %hi_tail, align 8, !dbg !2087
  %i2nb88 = icmp eq ptr %70, null, !dbg !2087
  br i1 %i2nb88, label %if.then89, label %if.else90, !dbg !2087

if.then89:                                        ; preds = %if.else87
  %71 = load ptr, ptr %e, align 8, !dbg !2089
  store ptr %71, ptr %hi_head, align 8, !dbg !2089
  br label %if.exit92, !dbg !2089

if.else90:                                        ; preds = %if.else87
  %72 = load ptr, ptr %hi_tail, align 8, !dbg !2091
  %ptradd91 = getelementptr inbounds i8, ptr %72, i64 32, !dbg !2091
  %73 = load ptr, ptr %e, align 8, !dbg !2091
  store ptr %73, ptr %ptradd91, align 8, !dbg !2091
  br label %if.exit92, !dbg !2091

if.exit92:                                        ; preds = %if.else90, %if.then89
  %74 = load ptr, ptr %e, align 8, !dbg !2093
  store ptr %74, ptr %hi_tail, align 8, !dbg !2093
  br label %if.exit93, !dbg !2093

if.exit93:                                        ; preds = %if.exit92, %if.exit86
  %75 = load ptr, ptr %e, align 8, !dbg !2094
  %ptradd94 = getelementptr inbounds i8, ptr %75, i64 32, !dbg !2094
  store ptr null, ptr %ptradd94, align 8, !dbg !2094
  %76 = load ptr, ptr %next, align 8, !dbg !2095
  store ptr %76, ptr %e, align 8, !dbg !2095
  br label %loop.cond77, !dbg !2095

loop.exit:                                        ; preds = %loop.cond77
  %77 = load ptr, ptr %lo_tail, align 8, !dbg !2096
  %i2b95 = icmp ne ptr %77, null, !dbg !2096
  br i1 %i2b95, label %if.then96, label %if.exit124, !dbg !2096

if.then96:                                        ; preds = %loop.exit
  %78 = load ptr, ptr %lo_tail, align 8, !dbg !2097
  %ptradd97 = getelementptr inbounds i8, ptr %78, i64 32, !dbg !2097
  store ptr null, ptr %ptradd97, align 8, !dbg !2097
  %ptradd98 = getelementptr inbounds i8, ptr %new_table, i64 8, !dbg !2099
  %79 = load i64, ptr %ptradd98, align 8, !dbg !2099
  %80 = load ptr, ptr %new_table, align 8, !dbg !2099
  %81 = load i32, ptr %i, align 4, !dbg !2099
  %zext99 = zext i32 %81 to i64, !dbg !2099
  %ge100 = icmp uge i64 %zext99, %79, !dbg !2099
  %82 = call i1 @llvm.expect.i1(i1 %ge100, i1 false), !dbg !2099
  br i1 %82, label %panic101, label %checkok111, !dbg !2099

checkok111:                                       ; preds = %if.then96
  %ptroffset112 = getelementptr inbounds [8 x i8], ptr %80, i64 %zext99, !dbg !2099
  %83 = ptrtoint ptr %ptroffset112 to i64, !dbg !2099
  %84 = urem i64 %83, 8, !dbg !2099
  %85 = icmp ne i64 %84, 0, !dbg !2099
  %86 = call i1 @llvm.expect.i1(i1 %85, i1 false), !dbg !2099
  br i1 %86, label %panic113, label %checkok123, !dbg !2099

checkok123:                                       ; preds = %checkok111
  %87 = load ptr, ptr %lo_head, align 8, !dbg !2099
  store ptr %87, ptr %ptroffset112, align 8, !dbg !2099
  br label %if.exit124, !dbg !2099

if.exit124:                                       ; preds = %checkok123, %loop.exit
  %88 = load ptr, ptr %hi_tail, align 8, !dbg !2100
  %i2b125 = icmp ne ptr %88, null, !dbg !2100
  br i1 %i2b125, label %if.then126, label %if.exit155, !dbg !2100

if.then126:                                       ; preds = %if.exit124
  %89 = load ptr, ptr %hi_tail, align 8, !dbg !2101
  %ptradd127 = getelementptr inbounds i8, ptr %89, i64 32, !dbg !2101
  store ptr null, ptr %ptradd127, align 8, !dbg !2101
  %ptradd128 = getelementptr inbounds i8, ptr %new_table, i64 8, !dbg !2103
  %90 = load i64, ptr %ptradd128, align 8, !dbg !2103
  %91 = load ptr, ptr %new_table, align 8, !dbg !2103
  %92 = load i32, ptr %i, align 4, !dbg !2103
  %93 = load i32, ptr %old_capacity, align 4, !dbg !2103
  %add129 = add i32 %92, %93, !dbg !2103
  %zext130 = zext i32 %add129 to i64, !dbg !2103
  %ge131 = icmp uge i64 %zext130, %90, !dbg !2103
  %94 = call i1 @llvm.expect.i1(i1 %ge131, i1 false), !dbg !2103
  br i1 %94, label %panic132, label %checkok142, !dbg !2103

checkok142:                                       ; preds = %if.then126
  %ptroffset143 = getelementptr inbounds [8 x i8], ptr %91, i64 %zext130, !dbg !2103
  %95 = ptrtoint ptr %ptroffset143 to i64, !dbg !2103
  %96 = urem i64 %95, 8, !dbg !2103
  %97 = icmp ne i64 %96, 0, !dbg !2103
  %98 = call i1 @llvm.expect.i1(i1 %97, i1 false), !dbg !2103
  br i1 %98, label %panic144, label %checkok154, !dbg !2103

checkok154:                                       ; preds = %checkok142
  %99 = load ptr, ptr %hi_head, align 8, !dbg !2103
  store ptr %99, ptr %ptroffset143, align 8, !dbg !2103
  br label %if.exit155, !dbg !2103

if.exit155:                                       ; preds = %checkok154, %if.exit124
  br label %loop.inc, !dbg !2103

loop.inc:                                         ; preds = %if.exit155, %if.then75
  %100 = load i64, ptr %.anon, align 8, !dbg !2056
  %addnuw = add nuw i64 %100, 1, !dbg !2056
  store i64 %addnuw, ptr %.anon, align 8, !dbg !2056
  br label %loop.cond, !dbg !2056

loop.exit156:                                     ; preds = %loop.cond
  %101 = load ptr, ptr %old_table, align 8, !dbg !2104
  %102 = load ptr, ptr %map, align 8, !dbg !2104
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_internal"(ptr %102, ptr %101) #6, !dbg !2104
  ret void, !dbg !2104

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg2, align 8
  %103 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %103(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 429) #5, !dbg !2032
  unreachable, !dbg !2032

panic31:                                          ; preds = %expr_block.exit
  store i64 %sub30, ptr %taddr32, align 8
  %104 = insertvalue %any undef, ptr %taddr32, 0
  %105 = insertvalue %any %104, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.17, i64 43 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg35, align 8
  store %any %105, ptr %varargslots, align 16
  %106 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %106, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg36, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 270, ptr align 8 %indirectarg36) #5, !dbg !2044
  unreachable, !dbg !2044

panic52:                                          ; preds = %loop.body
  store i64 %49, ptr %taddr53, align 8
  %107 = insertvalue %any undef, ptr %taddr53, 0
  %108 = insertvalue %any %107, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %51, ptr %taddr54, align 8
  %109 = insertvalue %any undef, ptr %taddr54, 0
  %110 = insertvalue %any %109, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg57, align 8
  store %any %108, ptr %varargslots58, align 16
  %ptradd59 = getelementptr inbounds i8, ptr %varargslots58, i64 16
  store %any %110, ptr %ptradd59, align 16
  %111 = insertvalue %"any[]" undef, ptr %varargslots58, 0
  %"$$temp60" = insertvalue %"any[]" %111, i64 2, 1
  store %"any[]" %"$$temp60", ptr %indirectarg61, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 445, ptr align 8 %indirectarg61) #5, !dbg !2061
  unreachable, !dbg !2061

panic63:                                          ; preds = %checkok62
  store i64 8, ptr %taddr64, align 8
  %112 = insertvalue %any undef, ptr %taddr64, 0
  %113 = insertvalue %any %112, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %54, ptr %taddr65, align 8
  %114 = insertvalue %any undef, ptr %taddr65, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg68, align 8
  store %any %113, ptr %varargslots69, align 16
  %ptradd70 = getelementptr inbounds i8, ptr %varargslots69, i64 16
  store %any %115, ptr %ptradd70, align 16
  %116 = insertvalue %"any[]" undef, ptr %varargslots69, 0
  %"$$temp71" = insertvalue %"any[]" %116, i64 2, 1
  store %"any[]" %"$$temp71", ptr %indirectarg72, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, i32 445, ptr align 8 %indirectarg72) #5, !dbg !2061
  unreachable, !dbg !2061

panic101:                                         ; preds = %if.then96
  store i64 %79, ptr %taddr102, align 8
  %117 = insertvalue %any undef, ptr %taddr102, 0
  %118 = insertvalue %any %117, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext99, ptr %taddr103, align 8
  %119 = insertvalue %any undef, ptr %taddr103, 0
  %120 = insertvalue %any %119, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg105, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg106, align 8
  store %any %118, ptr %varargslots107, align 16
  %ptradd108 = getelementptr inbounds i8, ptr %varargslots107, i64 16
  store %any %120, ptr %ptradd108, align 16
  %121 = insertvalue %"any[]" undef, ptr %varargslots107, 0
  %"$$temp109" = insertvalue %"any[]" %121, i64 2, 1
  store %"any[]" %"$$temp109", ptr %indirectarg110, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, ptr align 8 %indirectarg106, i32 490, ptr align 8 %indirectarg110) #5, !dbg !2099
  unreachable, !dbg !2099

panic113:                                         ; preds = %checkok111
  store i64 8, ptr %taddr114, align 8
  %122 = insertvalue %any undef, ptr %taddr114, 0
  %123 = insertvalue %any %122, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %84, ptr %taddr115, align 8
  %124 = insertvalue %any undef, ptr %taddr115, 0
  %125 = insertvalue %any %124, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg116, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg117, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg118, align 8
  store %any %123, ptr %varargslots119, align 16
  %ptradd120 = getelementptr inbounds i8, ptr %varargslots119, i64 16
  store %any %125, ptr %ptradd120, align 16
  %126 = insertvalue %"any[]" undef, ptr %varargslots119, 0
  %"$$temp121" = insertvalue %"any[]" %126, i64 2, 1
  store %"any[]" %"$$temp121", ptr %indirectarg122, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg116, ptr align 8 %indirectarg117, ptr align 8 %indirectarg118, i32 490, ptr align 8 %indirectarg122) #5, !dbg !2099
  unreachable, !dbg !2099

panic132:                                         ; preds = %if.then126
  store i64 %90, ptr %taddr133, align 8
  %127 = insertvalue %any undef, ptr %taddr133, 0
  %128 = insertvalue %any %127, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext130, ptr %taddr134, align 8
  %129 = insertvalue %any undef, ptr %taddr134, 0
  %130 = insertvalue %any %129, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg135, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg136, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg137, align 8
  store %any %128, ptr %varargslots138, align 16
  %ptradd139 = getelementptr inbounds i8, ptr %varargslots138, i64 16
  store %any %130, ptr %ptradd139, align 16
  %131 = insertvalue %"any[]" undef, ptr %varargslots138, 0
  %"$$temp140" = insertvalue %"any[]" %131, i64 2, 1
  store %"any[]" %"$$temp140", ptr %indirectarg141, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg135, ptr align 8 %indirectarg136, ptr align 8 %indirectarg137, i32 495, ptr align 8 %indirectarg141) #5, !dbg !2103
  unreachable, !dbg !2103

panic144:                                         ; preds = %checkok142
  store i64 8, ptr %taddr145, align 8
  %132 = insertvalue %any undef, ptr %taddr145, 0
  %133 = insertvalue %any %132, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %96, ptr %taddr146, align 8
  %134 = insertvalue %any undef, ptr %taddr146, 0
  %135 = insertvalue %any %134, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg147, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg148, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg149, align 8
  store %any %133, ptr %varargslots150, align 16
  %ptradd151 = getelementptr inbounds i8, ptr %varargslots150, i64 16
  store %any %135, ptr %ptradd151, align 16
  %136 = insertvalue %"any[]" undef, ptr %varargslots150, 0
  %"$$temp152" = insertvalue %"any[]" %136, i64 2, 1
  store %"any[]" %"$$temp152", ptr %indirectarg153, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg147, ptr align 8 %indirectarg148, ptr align 8 %indirectarg149, i32 495, ptr align 8 %indirectarg153) #5, !dbg !2103
  unreachable, !dbg !2103
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format"(ptr %0, ptr %1, ptr %2) #0 comdat !dbg !2105 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %f = alloca ptr, align 8
  %len = alloca i64, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr10 = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %map = alloca %LinkedHashMap, align 8
  %entry16 = alloca ptr, align 8
  %entry18 = alloca ptr, align 8
  %error_var19 = alloca i64, align 8
  %retparam20 = alloca i64, align 8
  %indirectarg21 = alloca %"char[]", align 8
  %error_var28 = alloca i64, align 8
  %varargslots29 = alloca [2 x %any], align 16
  %retparam34 = alloca i64, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"any[]", align 8
  %reterr = alloca i64, align 8
  %retparam44 = alloca i64, align 8
  %indirectarg45 = alloca %"char[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !2108
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2108
  br i1 %4, label %panic, label %checkok, !dbg !2108

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
    #dbg_declare(ptr %self, !2109, !DIExpression(), !2110)
  store ptr %2, ptr %f, align 8
    #dbg_declare(ptr %f, !2111, !DIExpression(), !2110)
    #dbg_declare(ptr %len, !2112, !DIExpression(), !2113)
  store i64 0, ptr %len, align 8, !dbg !2113
  %5 = load i64, ptr %len, align 8, !dbg !2114
  %6 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.81, i64 2 }, ptr %indirectarg3, align 8
  %7 = call i64 @std.io.Formatter.print(ptr %retparam, ptr %6, ptr align 8 %indirectarg3), !dbg !2114
  %not_err = icmp eq i64 %7, 0, !dbg !2114
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2114
  br i1 %8, label %after_check, label %assign_optional, !dbg !2114

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %error_var, align 8, !dbg !2114
  br label %guard_block, !dbg !2114

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !2114

guard_block:                                      ; preds = %assign_optional
  %9 = load i64, ptr %error_var, align 8, !dbg !2114
  ret i64 %9, !dbg !2114

noerr_block:                                      ; preds = %after_check
  %10 = load i64, ptr %retparam, align 8, !dbg !2114
  %add = add i64 %5, %10, !dbg !2114
  store i64 %add, ptr %len, align 8, !dbg !2114
  %11 = load ptr, ptr %self, align 8, !dbg !2115
  %checknull = icmp eq ptr %11, null, !dbg !2115
  %12 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2115
  br i1 %12, label %panic4, label %checkok8, !dbg !2115

checkok8:                                         ; preds = %noerr_block
  %13 = ptrtoint ptr %11 to i64, !dbg !2115
  %14 = urem i64 %13, 8, !dbg !2115
  %15 = icmp ne i64 %14, 0, !dbg !2115
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false), !dbg !2115
  br i1 %16, label %panic9, label %checkok15, !dbg !2115

checkok15:                                        ; preds = %checkok8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %map, ptr align 8 %11, i32 72, i1 false)
    #dbg_declare(ptr %entry16, !2116, !DIExpression(), !2118)
  %ptradd17 = getelementptr inbounds i8, ptr %map, i64 56, !dbg !2118
  %17 = load ptr, ptr %ptradd17, align 8, !dbg !2118
  store ptr %17, ptr %entry16, align 8, !dbg !2118
  br label %loop.cond, !dbg !2119

loop.cond:                                        ; preds = %noerr_block41, %checkok15
  %18 = load ptr, ptr %entry16, align 8, !dbg !2120
  %i2b = icmp ne ptr %18, null, !dbg !2120
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !2120

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry18, !2122, !DIExpression(), !2115)
  %19 = load ptr, ptr %entry16, align 8, !dbg !2123
  store ptr %19, ptr %entry18, align 8, !dbg !2123
  %20 = load i64, ptr %len, align 8, !dbg !2126
  %lt = icmp ult i64 2, %20, !dbg !2126
  br i1 %lt, label %if.then, label %if.exit, !dbg !2126

if.then:                                          ; preds = %loop.body
  %21 = load i64, ptr %len, align 8, !dbg !2126
  %22 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.82, i64 2 }, ptr %indirectarg21, align 8
  %23 = call i64 @std.io.Formatter.print(ptr %retparam20, ptr %22, ptr align 8 %indirectarg21), !dbg !2126
  %not_err22 = icmp eq i64 %23, 0, !dbg !2126
  %24 = call i1 @llvm.expect.i1(i1 %not_err22, i1 true), !dbg !2126
  br i1 %24, label %after_check24, label %assign_optional23, !dbg !2126

assign_optional23:                                ; preds = %if.then
  store i64 %23, ptr %error_var19, align 8, !dbg !2126
  br label %guard_block25, !dbg !2126

after_check24:                                    ; preds = %if.then
  br label %noerr_block26, !dbg !2126

guard_block25:                                    ; preds = %assign_optional23
  %25 = load i64, ptr %error_var19, align 8, !dbg !2126
  ret i64 %25, !dbg !2126

noerr_block26:                                    ; preds = %after_check24
  %26 = load i64, ptr %retparam20, align 8, !dbg !2126
  %add27 = add i64 %21, %26, !dbg !2126
  store i64 %add27, ptr %len, align 8, !dbg !2126
  br label %if.exit, !dbg !2126

if.exit:                                          ; preds = %noerr_block26, %loop.body
  %27 = load i64, ptr %len, align 8, !dbg !2128
  %28 = load ptr, ptr %entry18, align 8, !dbg !2128
  %ptradd30 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !2128
  %29 = insertvalue %any undef, ptr %ptradd30, 0, !dbg !2128
  %30 = insertvalue %any %29, i64 ptrtoint (ptr @"$ct.String" to i64), 1, !dbg !2128
  store %any %30, ptr %varargslots29, align 16, !dbg !2128
  %31 = load ptr, ptr %entry18, align 8, !dbg !2128
  %ptradd31 = getelementptr inbounds i8, ptr %31, i64 24, !dbg !2128
  %32 = insertvalue %any undef, ptr %ptradd31, 0, !dbg !2128
  %33 = insertvalue %any %32, i64 ptrtoint (ptr @"$ct.p$cforms.MenuItem" to i64), 1, !dbg !2128
  %ptradd32 = getelementptr inbounds i8, ptr %varargslots29, i64 16, !dbg !2128
  store %any %33, ptr %ptradd32, align 16, !dbg !2128
  %34 = insertvalue %"any[]" undef, ptr %varargslots29, 0, !dbg !2128
  %"$$temp33" = insertvalue %"any[]" %34, i64 2, 1, !dbg !2128
  %35 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.83, i64 6 }, ptr %indirectarg35, align 8
  store %"any[]" %"$$temp33", ptr %indirectarg36, align 8
  %36 = call i64 @std.io.Formatter.printf(ptr %retparam34, ptr %35, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36), !dbg !2128
  %not_err37 = icmp eq i64 %36, 0, !dbg !2128
  %37 = call i1 @llvm.expect.i1(i1 %not_err37, i1 true), !dbg !2128
  br i1 %37, label %after_check39, label %assign_optional38, !dbg !2128

assign_optional38:                                ; preds = %if.exit
  store i64 %36, ptr %error_var28, align 8, !dbg !2128
  br label %guard_block40, !dbg !2128

after_check39:                                    ; preds = %if.exit
  br label %noerr_block41, !dbg !2128

guard_block40:                                    ; preds = %assign_optional38
  %38 = load i64, ptr %error_var28, align 8, !dbg !2128
  ret i64 %38, !dbg !2128

noerr_block41:                                    ; preds = %after_check39
  %39 = load i64, ptr %retparam34, align 8, !dbg !2128
  %add42 = add i64 %27, %39, !dbg !2128
  store i64 %add42, ptr %len, align 8, !dbg !2128
  %40 = load ptr, ptr %entry16, align 8, !dbg !2129
  %ptradd43 = getelementptr inbounds i8, ptr %40, i64 48, !dbg !2129
  %41 = load ptr, ptr %ptradd43, align 8, !dbg !2129
  store ptr %41, ptr %entry16, align 8, !dbg !2129
  br label %loop.cond, !dbg !2129

loop.exit:                                        ; preds = %loop.cond
  %42 = load i64, ptr %len, align 8, !dbg !2130
  %43 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.84, i64 2 }, ptr %indirectarg45, align 8
  %44 = call i64 @std.io.Formatter.print(ptr %retparam44, ptr %43, ptr align 8 %indirectarg45), !dbg !2130
  %not_err46 = icmp eq i64 %44, 0, !dbg !2130
  %45 = call i1 @llvm.expect.i1(i1 %not_err46, i1 true), !dbg !2130
  br i1 %45, label %after_check48, label %assign_optional47, !dbg !2130

assign_optional47:                                ; preds = %loop.exit
  store i64 %44, ptr %reterr, align 8, !dbg !2130
  br label %err_retblock, !dbg !2130

after_check48:                                    ; preds = %loop.exit
  %46 = load i64, ptr %retparam44, align 8, !dbg !2130
  %add49 = add i64 %42, %46, !dbg !2130
  store i64 %add49, ptr %0, align 8, !dbg !2130
  ret i64 0, !dbg !2130

err_retblock:                                     ; preds = %assign_optional47
  %47 = load i64, ptr %reterr, align 8, !dbg !2130
  ret i64 %47, !dbg !2130

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 502) #5, !dbg !2110
  unreachable, !dbg !2110

panic4:                                           ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.57, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg7, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 506) #5, !dbg !2115
  unreachable, !dbg !2115

panic9:                                           ; preds = %checkok8
  store i64 8, ptr %taddr, align 8
  %50 = insertvalue %any undef, ptr %taddr, 0
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %14, ptr %taddr10, align 8
  %52 = insertvalue %any undef, ptr %taddr10, 0
  %53 = insertvalue %any %52, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg13, align 8
  store %any %51, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %53, ptr %ptradd, align 16
  %54 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %54, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 506, ptr align 8 %indirectarg14) #5, !dbg !2115
  unreachable, !dbg !2115
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.transfer"(ptr %0, ptr align 8 %1) #0 !dbg !2131 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %src = alloca %"LinkedEntry*[]", align 8
  %new_capacity = alloca i32, align 4
  %.anon = alloca i64, align 8
  %j = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr7 = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg12 = alloca %"any[]", align 8
  %taddr15 = alloca i64, align 8
  %taddr16 = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %varargslots20 = alloca [2 x %any], align 16
  %indirectarg23 = alloca %"any[]", align 8
  %next = alloca ptr, align 8
  %i = alloca i32, align 4
  %hash = alloca i32, align 4
  %capacity = alloca i32, align 4
  %taddr31 = alloca i64, align 8
  %taddr32 = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %varargslots36 = alloca [2 x %any], align 16
  %indirectarg39 = alloca %"any[]", align 8
  %taddr43 = alloca i64, align 8
  %taddr44 = alloca i64, align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %varargslots48 = alloca [2 x %any], align 16
  %indirectarg51 = alloca %"any[]", align 8
  %taddr58 = alloca i64, align 8
  %taddr59 = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %varargslots63 = alloca [2 x %any], align 16
  %indirectarg66 = alloca %"any[]", align 8
  %taddr70 = alloca i64, align 8
  %taddr71 = alloca i64, align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %varargslots75 = alloca [2 x %any], align 16
  %indirectarg78 = alloca %"any[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !2134
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2134
  br i1 %3, label %panic, label %checkok, !dbg !2134

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2135, !DIExpression(), !2136)
    #dbg_declare(ptr %1, !2137, !DIExpression(), !2136)
    #dbg_declare(ptr %src, !2138, !DIExpression(), !2139)
  %4 = load ptr, ptr %map, align 8, !dbg !2139
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %src, ptr align 8 %4, i32 16, i1 false), !dbg !2139
    #dbg_declare(ptr %new_capacity, !2140, !DIExpression(), !2141)
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2141
  %5 = load i64, ptr %ptradd, align 8, !dbg !2141
  %trunc = trunc i64 %5 to i32, !dbg !2141
  store i32 %trunc, ptr %new_capacity, align 4, !dbg !2141
  %ptradd3 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !2142
  %6 = load i64, ptr %ptradd3, align 8, !dbg !2142
    #dbg_declare(ptr %.anon, !2144, !DIExpression(), !2142)
  store i64 0, ptr %.anon, align 8, !dbg !2142
  br label %loop.cond, !dbg !2142

loop.cond:                                        ; preds = %loop.inc, %checkok
  %7 = load i64, ptr %.anon, align 8, !dbg !2142
  %lt = icmp ult i64 %7, %6, !dbg !2142
  br i1 %lt, label %loop.body, label %loop.exit80, !dbg !2142

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %j, !2145, !DIExpression(), !2147)
  %8 = load i64, ptr %.anon, align 8, !dbg !2147
  %trunc4 = trunc i64 %8 to i32, !dbg !2147
  store i32 %trunc4, ptr %j, align 4, !dbg !2147
    #dbg_declare(ptr %e, !2148, !DIExpression(), !2147)
  %ptradd5 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !2147
  %9 = load i64, ptr %ptradd5, align 8, !dbg !2147
  %10 = load ptr, ptr %src, align 8, !dbg !2147
  %11 = load i64, ptr %.anon, align 8, !dbg !2147
  %ge = icmp uge i64 %11, %9, !dbg !2147
  %12 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2147
  br i1 %12, label %panic6, label %checkok13, !dbg !2147

checkok13:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [8 x i8], ptr %10, i64 %11, !dbg !2147
  %13 = ptrtoint ptr %ptroffset to i64, !dbg !2147
  %14 = urem i64 %13, 8, !dbg !2147
  %15 = icmp ne i64 %14, 0, !dbg !2147
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false), !dbg !2147
  br i1 %16, label %panic14, label %checkok24, !dbg !2147

checkok24:                                        ; preds = %checkok13
  %17 = load ptr, ptr %ptroffset, align 8, !dbg !2147
  store ptr %17, ptr %e, align 8, !dbg !2147
  %18 = load ptr, ptr %e, align 8, !dbg !2149
  %i2nb = icmp eq ptr %18, null, !dbg !2149
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2149

if.then:                                          ; preds = %checkok24
  br label %loop.inc, !dbg !2149

if.exit:                                          ; preds = %checkok24
  br label %loop.body26, !dbg !2151

loop.cond25:                                      ; preds = %checkok79
  %19 = load ptr, ptr %e, align 8, !dbg !2152
  %i2b = icmp ne ptr %19, null, !dbg !2152
  br i1 %i2b, label %loop.body26, label %loop.exit, !dbg !2152

loop.body26:                                      ; preds = %loop.cond25, %if.exit
    #dbg_declare(ptr %next, !2154, !DIExpression(), !2156)
  %20 = load ptr, ptr %e, align 8, !dbg !2156
  %ptradd27 = getelementptr inbounds i8, ptr %20, i64 32, !dbg !2156
  %21 = load ptr, ptr %ptradd27, align 8, !dbg !2156
  store ptr %21, ptr %next, align 8, !dbg !2156
    #dbg_declare(ptr %i, !2157, !DIExpression(), !2158)
  %22 = load ptr, ptr %e, align 8, !dbg !2158
  %23 = load i32, ptr %22, align 8
  store i32 %23, ptr %hash, align 4
  %24 = load i32, ptr %new_capacity, align 4
  store i32 %24, ptr %capacity, align 4
  %25 = load i32, ptr %hash, align 4, !dbg !2159
  %26 = load i32, ptr %capacity, align 4, !dbg !2159
  %sub = sub i32 %26, 1, !dbg !2159
  %and = and i32 %25, %sub, !dbg !2159
  store i32 %and, ptr %i, align 4, !dbg !2159
  %ptradd28 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2161
  %27 = load i64, ptr %ptradd28, align 8, !dbg !2161
  %28 = load ptr, ptr %1, align 8, !dbg !2161
  %29 = load i32, ptr %i, align 4, !dbg !2161
  %zext = zext i32 %29 to i64, !dbg !2161
  %ge29 = icmp uge i64 %zext, %27, !dbg !2161
  %30 = call i1 @llvm.expect.i1(i1 %ge29, i1 false), !dbg !2161
  br i1 %30, label %panic30, label %checkok40, !dbg !2161

checkok40:                                        ; preds = %loop.body26
  %ptroffset41 = getelementptr inbounds [8 x i8], ptr %28, i64 %zext, !dbg !2161
  %31 = ptrtoint ptr %ptroffset41 to i64, !dbg !2161
  %32 = urem i64 %31, 8, !dbg !2161
  %33 = icmp ne i64 %32, 0, !dbg !2161
  %34 = call i1 @llvm.expect.i1(i1 %33, i1 false), !dbg !2161
  br i1 %34, label %panic42, label %checkok52, !dbg !2161

checkok52:                                        ; preds = %checkok40
  %35 = load ptr, ptr %e, align 8, !dbg !2161
  %ptradd53 = getelementptr inbounds i8, ptr %35, i64 32, !dbg !2161
  %36 = load ptr, ptr %ptroffset41, align 8, !dbg !2161
  store ptr %36, ptr %ptradd53, align 8, !dbg !2161
  %ptradd54 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2162
  %37 = load i64, ptr %ptradd54, align 8, !dbg !2162
  %38 = load ptr, ptr %1, align 8, !dbg !2162
  %39 = load i32, ptr %i, align 4, !dbg !2162
  %zext55 = zext i32 %39 to i64, !dbg !2162
  %ge56 = icmp uge i64 %zext55, %37, !dbg !2162
  %40 = call i1 @llvm.expect.i1(i1 %ge56, i1 false), !dbg !2162
  br i1 %40, label %panic57, label %checkok67, !dbg !2162

checkok67:                                        ; preds = %checkok52
  %ptroffset68 = getelementptr inbounds [8 x i8], ptr %38, i64 %zext55, !dbg !2162
  %41 = ptrtoint ptr %ptroffset68 to i64, !dbg !2162
  %42 = urem i64 %41, 8, !dbg !2162
  %43 = icmp ne i64 %42, 0, !dbg !2162
  %44 = call i1 @llvm.expect.i1(i1 %43, i1 false), !dbg !2162
  br i1 %44, label %panic69, label %checkok79, !dbg !2162

checkok79:                                        ; preds = %checkok67
  %45 = load ptr, ptr %e, align 8, !dbg !2162
  store ptr %45, ptr %ptroffset68, align 8, !dbg !2162
  %46 = load ptr, ptr %next, align 8, !dbg !2163
  store ptr %46, ptr %e, align 8, !dbg !2163
  br label %loop.cond25, !dbg !2163

loop.exit:                                        ; preds = %loop.cond25
  br label %loop.inc, !dbg !2163

loop.inc:                                         ; preds = %loop.exit, %if.then
  %47 = load i64, ptr %.anon, align 8, !dbg !2142
  %addnuw = add nuw i64 %47, 1, !dbg !2142
  store i64 %addnuw, ptr %.anon, align 8, !dbg !2142
  br label %loop.cond, !dbg !2142

loop.exit80:                                      ; preds = %loop.cond
  ret void, !dbg !2142

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 514) #5, !dbg !2136
  unreachable, !dbg !2136

panic6:                                           ; preds = %loop.body
  store i64 %9, ptr %taddr, align 8
  %49 = insertvalue %any undef, ptr %taddr, 0
  %50 = insertvalue %any %49, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %11, ptr %taddr7, align 8
  %51 = insertvalue %any undef, ptr %taddr7, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg10, align 8
  store %any %50, ptr %varargslots, align 16
  %ptradd11 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %52, ptr %ptradd11, align 16
  %53 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %53, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg12, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 518, ptr align 8 %indirectarg12) #5, !dbg !2147
  unreachable, !dbg !2147

panic14:                                          ; preds = %checkok13
  store i64 8, ptr %taddr15, align 8
  %54 = insertvalue %any undef, ptr %taddr15, 0
  %55 = insertvalue %any %54, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %14, ptr %taddr16, align 8
  %56 = insertvalue %any undef, ptr %taddr16, 0
  %57 = insertvalue %any %56, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg19, align 8
  store %any %55, ptr %varargslots20, align 16
  %ptradd21 = getelementptr inbounds i8, ptr %varargslots20, i64 16
  store %any %57, ptr %ptradd21, align 16
  %58 = insertvalue %"any[]" undef, ptr %varargslots20, 0
  %"$$temp22" = insertvalue %"any[]" %58, i64 2, 1
  store %"any[]" %"$$temp22", ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 518, ptr align 8 %indirectarg23) #5, !dbg !2147
  unreachable, !dbg !2147

panic30:                                          ; preds = %loop.body26
  store i64 %27, ptr %taddr31, align 8
  %59 = insertvalue %any undef, ptr %taddr31, 0
  %60 = insertvalue %any %59, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr32, align 8
  %61 = insertvalue %any undef, ptr %taddr32, 0
  %62 = insertvalue %any %61, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg35, align 8
  store %any %60, ptr %varargslots36, align 16
  %ptradd37 = getelementptr inbounds i8, ptr %varargslots36, i64 16
  store %any %62, ptr %ptradd37, align 16
  %63 = insertvalue %"any[]" undef, ptr %varargslots36, 0
  %"$$temp38" = insertvalue %"any[]" %63, i64 2, 1
  store %"any[]" %"$$temp38", ptr %indirectarg39, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 525, ptr align 8 %indirectarg39) #5, !dbg !2161
  unreachable, !dbg !2161

panic42:                                          ; preds = %checkok40
  store i64 8, ptr %taddr43, align 8
  %64 = insertvalue %any undef, ptr %taddr43, 0
  %65 = insertvalue %any %64, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %32, ptr %taddr44, align 8
  %66 = insertvalue %any undef, ptr %taddr44, 0
  %67 = insertvalue %any %66, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg47, align 8
  store %any %65, ptr %varargslots48, align 16
  %ptradd49 = getelementptr inbounds i8, ptr %varargslots48, i64 16
  store %any %67, ptr %ptradd49, align 16
  %68 = insertvalue %"any[]" undef, ptr %varargslots48, 0
  %"$$temp50" = insertvalue %"any[]" %68, i64 2, 1
  store %"any[]" %"$$temp50", ptr %indirectarg51, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 525, ptr align 8 %indirectarg51) #5, !dbg !2161
  unreachable, !dbg !2161

panic57:                                          ; preds = %checkok52
  store i64 %37, ptr %taddr58, align 8
  %69 = insertvalue %any undef, ptr %taddr58, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext55, ptr %taddr59, align 8
  %71 = insertvalue %any undef, ptr %taddr59, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg62, align 8
  store %any %70, ptr %varargslots63, align 16
  %ptradd64 = getelementptr inbounds i8, ptr %varargslots63, i64 16
  store %any %72, ptr %ptradd64, align 16
  %73 = insertvalue %"any[]" undef, ptr %varargslots63, 0
  %"$$temp65" = insertvalue %"any[]" %73, i64 2, 1
  store %"any[]" %"$$temp65", ptr %indirectarg66, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 526, ptr align 8 %indirectarg66) #5, !dbg !2162
  unreachable, !dbg !2162

panic69:                                          ; preds = %checkok67
  store i64 8, ptr %taddr70, align 8
  %74 = insertvalue %any undef, ptr %taddr70, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr71, align 8
  %76 = insertvalue %any undef, ptr %taddr71, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.func.62, i64 8 }, ptr %indirectarg74, align 8
  store %any %75, ptr %varargslots75, align 16
  %ptradd76 = getelementptr inbounds i8, ptr %varargslots75, i64 16
  store %any %77, ptr %ptradd76, align 16
  %78 = insertvalue %"any[]" undef, ptr %varargslots75, 0
  %"$$temp77" = insertvalue %"any[]" %78, i64 2, 1
  store %"any[]" %"$$temp77", ptr %indirectarg78, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, i32 526, ptr align 8 %indirectarg78) #5, !dbg !2162
  unreachable, !dbg !2162
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.put_all_for_create"(ptr %0, ptr %1) #0 !dbg !2164 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %other_map = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr9 = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %map16 = alloca %LinkedHashMap, align 8
  %map17 = alloca %LinkedHashMap, align 8
  %entry18 = alloca ptr, align 8
  %entry20 = alloca ptr, align 8
  %key = alloca %"char[]", align 8
  %value = alloca ptr, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !2167
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2167
  br i1 %3, label %panic, label %checkok, !dbg !2167

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2168, !DIExpression(), !2169)
  store ptr %1, ptr %other_map, align 8
    #dbg_declare(ptr %other_map, !2170, !DIExpression(), !2169)
  %4 = load ptr, ptr %other_map, align 8, !dbg !2171
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !2171
  %5 = load i64, ptr %ptradd, align 8, !dbg !2171
  %i2nb = icmp eq i64 %5, 0, !dbg !2171
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2171

if.then:                                          ; preds = %checkok
  ret void, !dbg !2171

if.exit:                                          ; preds = %checkok
  %6 = load ptr, ptr %other_map, align 8, !dbg !2172
  %checknull = icmp eq ptr %6, null, !dbg !2172
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2172
  br i1 %7, label %panic3, label %checkok7, !dbg !2172

checkok7:                                         ; preds = %if.exit
  %8 = ptrtoint ptr %6 to i64, !dbg !2172
  %9 = urem i64 %8, 8, !dbg !2172
  %10 = icmp ne i64 %9, 0, !dbg !2172
  %11 = call i1 @llvm.expect.i1(i1 %10, i1 false), !dbg !2172
  br i1 %11, label %panic8, label %checkok15, !dbg !2172

checkok15:                                        ; preds = %checkok7
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %map16, ptr align 8 %6, i32 72, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %map17, ptr align 8 %map16, i32 72, i1 false)
    #dbg_declare(ptr %entry18, !2173, !DIExpression(), !2175)
  %ptradd19 = getelementptr inbounds i8, ptr %map17, i64 56, !dbg !2175
  %12 = load ptr, ptr %ptradd19, align 8, !dbg !2175
  store ptr %12, ptr %entry18, align 8, !dbg !2175
  br label %loop.cond, !dbg !2178

loop.cond:                                        ; preds = %loop.body, %checkok15
  %13 = load ptr, ptr %entry18, align 8, !dbg !2179
  %i2b = icmp ne ptr %13, null, !dbg !2179
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !2179

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %entry20, !2181, !DIExpression(), !2176)
  %14 = load ptr, ptr %entry18, align 8, !dbg !2182
  store ptr %14, ptr %entry20, align 8, !dbg !2182
    #dbg_declare(ptr %key, !2185, !DIExpression(), !2172)
    #dbg_declare(ptr %value, !2186, !DIExpression(), !2172)
  %15 = load ptr, ptr %entry20, align 8, !dbg !2187
  %ptradd21 = getelementptr inbounds i8, ptr %15, i64 8, !dbg !2187
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %key, ptr align 8 %ptradd21, i32 16, i1 false), !dbg !2187
  %16 = load ptr, ptr %entry20, align 8, !dbg !2187
  %ptradd22 = getelementptr inbounds i8, ptr %16, i64 24, !dbg !2187
  %17 = load ptr, ptr %ptradd22, align 8, !dbg !2187
  store ptr %17, ptr %value, align 8, !dbg !2187
  %18 = load ptr, ptr %map, align 8, !dbg !2190
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg23, ptr align 8 %key, i32 16, i1 false)
  %19 = load ptr, ptr %value, align 8
  %20 = call i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.set"(ptr %18, ptr align 8 %indirectarg23, ptr %19), !dbg !2190
  %21 = load ptr, ptr %entry18, align 8, !dbg !2192
  %ptradd24 = getelementptr inbounds i8, ptr %21, i64 48, !dbg !2192
  %22 = load ptr, ptr %ptradd24, align 8, !dbg !2192
  store ptr %22, ptr %entry18, align 8, !dbg !2192
  br label %loop.cond, !dbg !2192

loop.exit:                                        ; preds = %loop.cond
  ret void, !dbg !2192

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg2, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 533) #5, !dbg !2169
  unreachable, !dbg !2169

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.85, i64 50 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg6, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 536) #5, !dbg !2172
  unreachable, !dbg !2172

panic8:                                           ; preds = %checkok7
  store i64 8, ptr %taddr, align 8
  %25 = insertvalue %any undef, ptr %taddr, 0
  %26 = insertvalue %any %25, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %9, ptr %taddr9, align 8
  %27 = insertvalue %any undef, ptr %taddr9, 0
  %28 = insertvalue %any %27, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.63, i64 18 }, ptr %indirectarg12, align 8
  store %any %26, ptr %varargslots, align 16
  %ptradd13 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %28, ptr %ptradd13, align 16
  %29 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %29, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 536, ptr align 8 %indirectarg14) #5, !dbg !2172
  unreachable, !dbg !2172
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.put_for_create"(ptr %0, ptr align 8 %1, ptr %2) #0 !dbg !2193 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %value = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %i = alloca i32, align 4
  %hash4 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr7 = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg12 = alloca %"any[]", align 8
  %taddr15 = alloca i64, align 8
  %taddr16 = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %varargslots20 = alloca [2 x %any], align 16
  %indirectarg23 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !2196
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2196
  br i1 %4, label %panic, label %checkok, !dbg !2196

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2197, !DIExpression(), !2198)
    #dbg_declare(ptr %1, !2199, !DIExpression(), !2198)
  store ptr %2, ptr %value, align 8
    #dbg_declare(ptr %value, !2200, !DIExpression(), !2198)
    #dbg_declare(ptr %hash, !2201, !DIExpression(), !2202)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %5 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !2203
  %6 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %5) #6, !dbg !2202
  store i32 %6, ptr %hash, align 4, !dbg !2202
    #dbg_declare(ptr %i, !2205, !DIExpression(), !2206)
  %7 = load i32, ptr %hash, align 4
  store i32 %7, ptr %hash4, align 4
  %8 = load ptr, ptr %map, align 8, !dbg !2206
  %ptradd = getelementptr inbounds i8, ptr %8, i64 8, !dbg !2206
  %9 = load i64, ptr %ptradd, align 8, !dbg !2206
  %trunc = trunc i64 %9 to i32, !dbg !2206
  store i32 %trunc, ptr %capacity, align 4
  %10 = load i32, ptr %hash4, align 4, !dbg !2207
  %11 = load i32, ptr %capacity, align 4, !dbg !2207
  %sub = sub i32 %11, 1, !dbg !2207
  %and = and i32 %10, %sub, !dbg !2207
  store i32 %and, ptr %i, align 4, !dbg !2207
    #dbg_declare(ptr %e, !2209, !DIExpression(), !2211)
  %12 = load ptr, ptr %map, align 8, !dbg !2211
  %ptradd5 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !2211
  %13 = load i64, ptr %ptradd5, align 8, !dbg !2211
  %14 = load ptr, ptr %12, align 8, !dbg !2211
  %15 = load i32, ptr %i, align 4, !dbg !2211
  %zext = zext i32 %15 to i64, !dbg !2211
  %ge = icmp uge i64 %zext, %13, !dbg !2211
  %16 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2211
  br i1 %16, label %panic6, label %checkok13, !dbg !2211

checkok13:                                        ; preds = %checkok
  %ptroffset = getelementptr inbounds [8 x i8], ptr %14, i64 %zext, !dbg !2211
  %17 = ptrtoint ptr %ptroffset to i64, !dbg !2211
  %18 = urem i64 %17, 8, !dbg !2211
  %19 = icmp ne i64 %18, 0, !dbg !2211
  %20 = call i1 @llvm.expect.i1(i1 %19, i1 false), !dbg !2211
  br i1 %20, label %panic14, label %checkok24, !dbg !2211

checkok24:                                        ; preds = %checkok13
  %21 = load ptr, ptr %ptroffset, align 8, !dbg !2211
  store ptr %21, ptr %e, align 8, !dbg !2211
  br label %loop.cond, !dbg !2211

loop.cond:                                        ; preds = %if.exit, %checkok24
  %22 = load ptr, ptr %e, align 8, !dbg !2211
  %neq = icmp ne ptr %22, null, !dbg !2211
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !2211

loop.body:                                        ; preds = %loop.cond
  %23 = load ptr, ptr %e, align 8, !dbg !2212
  %24 = load i32, ptr %23, align 8, !dbg !2212
  %25 = load i32, ptr %hash, align 4, !dbg !2212
  %eq = icmp eq i32 %24, %25, !dbg !2212
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !2212

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %1, i32 16, i1 false)
  %26 = load ptr, ptr %e, align 8, !dbg !2212
  %ptradd25 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !2212
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd25, i32 16, i1 false)
  %27 = load %"char[]", ptr %a, align 8, !dbg !2214
  %28 = load %"char[]", ptr %b, align 8, !dbg !2214
  %29 = extractvalue %"char[]" %27, 1, !dbg !2214
  %30 = extractvalue %"char[]" %28, 1, !dbg !2214
  %31 = extractvalue %"char[]" %27, 0, !dbg !2214
  %32 = extractvalue %"char[]" %28, 0, !dbg !2214
  %eq26 = icmp eq i64 %29, %30, !dbg !2214
  br i1 %eq26, label %slice_cmp_values, label %slice_cmp_exit, !dbg !2214

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %33 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %33, %29
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd27 = getelementptr inbounds i8, ptr %31, i64 %33
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %33
  %34 = load i8, ptr %ptradd27, align 1
  %35 = load i8, ptr %ptradd28, align 1
  %eq29 = icmp eq i8 %34, %35
  %36 = add i64 %33, 1
  store i64 %36, ptr %cmp.idx, align 8
  br i1 %eq29, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then, label %if.exit

if.then:                                          ; preds = %and.phi
  %37 = load ptr, ptr %e, align 8, !dbg !2216
  %ptradd30 = getelementptr inbounds i8, ptr %37, i64 24, !dbg !2216
  %38 = load ptr, ptr %value, align 8, !dbg !2216
  store ptr %38, ptr %ptradd30, align 8, !dbg !2216
  ret void, !dbg !2218

if.exit:                                          ; preds = %and.phi
  %39 = load ptr, ptr %e, align 8, !dbg !2211
  %ptradd31 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !2211
  %40 = load ptr, ptr %ptradd31, align 8, !dbg !2211
  store ptr %40, ptr %e, align 8, !dbg !2211
  br label %loop.cond, !dbg !2211

loop.exit:                                        ; preds = %loop.cond
  %41 = load i32, ptr %i, align 4, !dbg !2219
  %42 = load ptr, ptr %map, align 8, !dbg !2219
  %43 = load i32, ptr %hash, align 4, !dbg !2219
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg32, ptr align 8 %1, i32 16, i1 false)
  %44 = load ptr, ptr %value, align 8
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.create_entry"(ptr %42, i32 %43, ptr align 8 %indirectarg32, ptr %44, i32 %41), !dbg !2219
  ret void, !dbg !2219

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.65, i64 14 }, ptr %indirectarg2, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 541) #5, !dbg !2198
  unreachable, !dbg !2198

panic6:                                           ; preds = %checkok
  store i64 %13, ptr %taddr, align 8
  %46 = insertvalue %any undef, ptr %taddr, 0
  %47 = insertvalue %any %46, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr7, align 8
  %48 = insertvalue %any undef, ptr %taddr7, 0
  %49 = insertvalue %any %48, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.65, i64 14 }, ptr %indirectarg10, align 8
  store %any %47, ptr %varargslots, align 16
  %ptradd11 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %49, ptr %ptradd11, align 16
  %50 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %50, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg12, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 545, ptr align 8 %indirectarg12) #5, !dbg !2211
  unreachable, !dbg !2211

panic14:                                          ; preds = %checkok13
  store i64 8, ptr %taddr15, align 8
  %51 = insertvalue %any undef, ptr %taddr15, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %18, ptr %taddr16, align 8
  %53 = insertvalue %any undef, ptr %taddr16, 0
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.65, i64 14 }, ptr %indirectarg19, align 8
  store %any %52, ptr %varargslots20, align 16
  %ptradd21 = getelementptr inbounds i8, ptr %varargslots20, i64 16
  store %any %54, ptr %ptradd21, align 16
  %55 = insertvalue %"any[]" undef, ptr %varargslots20, 0
  %"$$temp22" = insertvalue %"any[]" %55, i64 2, 1
  store %"any[]" %"$$temp22", ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 545, ptr align 8 %indirectarg23) #5, !dbg !2211
  unreachable, !dbg !2211
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_internal"(ptr %0, ptr %1) #0 !dbg !2220 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %ptr3 = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2223
  %2 = icmp eq ptr %0, null, !dbg !2223
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2223
  br i1 %3, label %panic, label %checkok, !dbg !2223

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2224, !DIExpression(), !2225)
  store ptr %1, ptr %ptr, align 8
    #dbg_declare(ptr %ptr, !2226, !DIExpression(), !2225)
  %4 = load ptr, ptr %map, align 8, !dbg !2227
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !2227
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd, i32 16, i1 false)
  %5 = load ptr, ptr %ptr, align 8
  store ptr %5, ptr %ptr3, align 8
  %6 = load ptr, ptr %ptr3, align 8, !dbg !2228
  %i2nb = icmp eq ptr %6, null, !dbg !2228
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2228

if.then:                                          ; preds = %checkok
  br label %expr_block.exit, !dbg !2228

if.exit:                                          ; preds = %checkok
  %7 = load ptr, ptr %ptr3, align 8, !dbg !2230
  %neq = icmp ne ptr %7, null, !dbg !2230
  br i1 %neq, label %assert_ok, label %assert_fail, !dbg !2230

assert_fail:                                      ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.67, i64 75 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.66, i64 13 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 123) #5, !dbg !2230
  unreachable, !dbg !2230

assert_ok:                                        ; preds = %if.exit
  %ptradd7 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !2230
  %9 = load i64, ptr %ptradd7, align 8, !dbg !2230
  %10 = inttoptr i64 %9 to ptr, !dbg !2230
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2223
  %11 = icmp eq ptr %10, %type, !dbg !2223
  br i1 %11, label %cache_hit, label %cache_miss, !dbg !2223

cache_miss:                                       ; preds = %assert_ok
  %ptradd8 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !2223
  %12 = load ptr, ptr %ptradd8, align 8, !dbg !2223
  %13 = call ptr @.dyn_search(ptr %12, ptr @"$sel.release"), !dbg !2223
  store ptr %13, ptr %.inlinecache, align 8, !dbg !2223
  store ptr %10, ptr %.cachedtype, align 8, !dbg !2223
  br label %14, !dbg !2223

cache_hit:                                        ; preds = %assert_ok
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2223
  br label %14, !dbg !2223

14:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %13, %cache_miss ], !dbg !2223
  %15 = icmp eq ptr %fn_phi, null, !dbg !2223
  br i1 %15, label %missing_function, label %match, !dbg !2223

missing_function:                                 ; preds = %14
  store %"char[]" { ptr @.panic_msg.68, i64 44 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.66, i64 13 }, ptr %indirectarg11, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 123) #5, !dbg !2230
  unreachable, !dbg !2230

match:                                            ; preds = %14
  %17 = load ptr, ptr %allocator, align 8, !dbg !2230
  call void %fn_phi(ptr %17, ptr %7, i8 zeroext 0), !dbg !2230
  br label %expr_block.exit, !dbg !2230

expr_block.exit:                                  ; preds = %match, %if.then
  ret void, !dbg !2230

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.66, i64 13 }, ptr %indirectarg2, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 556) #5, !dbg !2225
  unreachable, !dbg !2225
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.remove_entry_for_key"(ptr %0, ptr align 8 %1) #0 !dbg !2231 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %c = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %i = alloca i32, align 4
  %hash4 = alloca i32, align 4
  %capacity = alloca i32, align 4
  %prev = alloca ptr, align 8
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr8 = alloca i64, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %taddr16 = alloca i64, align 8
  %taddr17 = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %varargslots21 = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %a = alloca %"char[]", align 8
  %b = alloca %"char[]", align 8
  %cmp.idx = alloca i64, align 8
  %taddr41 = alloca i64, align 8
  %taddr42 = alloca i64, align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %varargslots46 = alloca [2 x %any], align 16
  %indirectarg49 = alloca %"any[]", align 8
  %taddr53 = alloca i64, align 8
  %taddr54 = alloca i64, align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %varargslots58 = alloca [2 x %any], align 16
  %indirectarg61 = alloca %"any[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !2232
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2232
  br i1 %3, label %panic, label %checkok, !dbg !2232

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2233, !DIExpression(), !2234)
    #dbg_declare(ptr %1, !2235, !DIExpression(), !2234)
  %4 = load ptr, ptr %map, align 8, !dbg !2236
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !2236
  %5 = load i64, ptr %ptradd, align 8, !dbg !2236
  %i2nb = icmp eq i64 %5, 0, !dbg !2236
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2236

if.then:                                          ; preds = %checkok
  ret i8 0, !dbg !2236

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %hash, !2237, !DIExpression(), !2238)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %c, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %c, i32 16, i1 false)
  %6 = call i32 @std.hash.fnv32a.hash(ptr align 8 %indirectarg3), !dbg !2239
  %7 = call i32 @"std_collections_map$String$p$cforms.MenuItem$.rehash"(i32 %6) #6, !dbg !2238
  store i32 %7, ptr %hash, align 4, !dbg !2238
    #dbg_declare(ptr %i, !2241, !DIExpression(), !2242)
  %8 = load i32, ptr %hash, align 4
  store i32 %8, ptr %hash4, align 4
  %9 = load ptr, ptr %map, align 8, !dbg !2242
  %ptradd5 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !2242
  %10 = load i64, ptr %ptradd5, align 8, !dbg !2242
  %trunc = trunc i64 %10 to i32, !dbg !2242
  store i32 %trunc, ptr %capacity, align 4
  %11 = load i32, ptr %hash4, align 4, !dbg !2243
  %12 = load i32, ptr %capacity, align 4, !dbg !2243
  %sub = sub i32 %12, 1, !dbg !2243
  %and = and i32 %11, %sub, !dbg !2243
  store i32 %and, ptr %i, align 4, !dbg !2243
    #dbg_declare(ptr %prev, !2245, !DIExpression(), !2246)
  store ptr null, ptr %prev, align 8, !dbg !2246
    #dbg_declare(ptr %e, !2247, !DIExpression(), !2248)
  %13 = load ptr, ptr %map, align 8, !dbg !2248
  %ptradd6 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !2248
  %14 = load i64, ptr %ptradd6, align 8, !dbg !2248
  %15 = load ptr, ptr %13, align 8, !dbg !2248
  %16 = load i32, ptr %i, align 4, !dbg !2248
  %zext = zext i32 %16 to i64, !dbg !2248
  %ge = icmp uge i64 %zext, %14, !dbg !2248
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2248
  br i1 %17, label %panic7, label %checkok14, !dbg !2248

checkok14:                                        ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr %15, i64 %zext, !dbg !2248
  %18 = ptrtoint ptr %ptroffset to i64, !dbg !2248
  %19 = urem i64 %18, 8, !dbg !2248
  %20 = icmp ne i64 %19, 0, !dbg !2248
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false), !dbg !2248
  br i1 %21, label %panic15, label %checkok25, !dbg !2248

checkok25:                                        ; preds = %checkok14
  %22 = load ptr, ptr %ptroffset, align 8, !dbg !2248
  store ptr %22, ptr %e, align 8, !dbg !2248
  br label %loop.cond, !dbg !2249

loop.cond:                                        ; preds = %if.exit86, %checkok25
  %23 = load ptr, ptr %e, align 8, !dbg !2250
  %i2b = icmp ne ptr %23, null, !dbg !2250
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !2250

loop.body:                                        ; preds = %loop.cond
  %24 = load ptr, ptr %e, align 8, !dbg !2252
  %25 = load i32, ptr %24, align 8, !dbg !2252
  %26 = load i32, ptr %hash, align 4, !dbg !2252
  %eq = icmp eq i32 %25, %26, !dbg !2252
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !2252

and.rhs:                                          ; preds = %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %a, ptr align 8 %1, i32 16, i1 false)
  %27 = load ptr, ptr %e, align 8, !dbg !2252
  %ptradd26 = getelementptr inbounds i8, ptr %27, i64 8, !dbg !2252
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %b, ptr align 8 %ptradd26, i32 16, i1 false)
  %28 = load %"char[]", ptr %a, align 8, !dbg !2254
  %29 = load %"char[]", ptr %b, align 8, !dbg !2254
  %30 = extractvalue %"char[]" %28, 1, !dbg !2254
  %31 = extractvalue %"char[]" %29, 1, !dbg !2254
  %32 = extractvalue %"char[]" %28, 0, !dbg !2254
  %33 = extractvalue %"char[]" %29, 0, !dbg !2254
  %eq27 = icmp eq i64 %30, %31, !dbg !2254
  br i1 %eq27, label %slice_cmp_values, label %slice_cmp_exit, !dbg !2254

slice_cmp_values:                                 ; preds = %and.rhs
  store i64 0, ptr %cmp.idx, align 8
  br label %slice_loop_start

slice_loop_start:                                 ; preds = %slice_loop_comparison, %slice_cmp_values
  %34 = load i64, ptr %cmp.idx, align 8
  %lt = icmp slt i64 %34, %30
  br i1 %lt, label %slice_loop_comparison, label %slice_cmp_exit

slice_loop_comparison:                            ; preds = %slice_loop_start
  %ptradd28 = getelementptr inbounds i8, ptr %32, i64 %34
  %ptradd29 = getelementptr inbounds i8, ptr %33, i64 %34
  %35 = load i8, ptr %ptradd28, align 1
  %36 = load i8, ptr %ptradd29, align 1
  %eq30 = icmp eq i8 %35, %36
  %37 = add i64 %34, 1
  store i64 %37, ptr %cmp.idx, align 8
  br i1 %eq30, label %slice_loop_start, label %slice_cmp_exit

slice_cmp_exit:                                   ; preds = %slice_loop_comparison, %slice_loop_start, %and.rhs
  %slice_cmp_phi = phi i1 [ true, %slice_loop_start ], [ false, %and.rhs ], [ false, %slice_loop_comparison ]
  br label %and.phi

and.phi:                                          ; preds = %slice_cmp_exit, %loop.body
  %val = phi i1 [ false, %loop.body ], [ %slice_cmp_phi, %slice_cmp_exit ]
  br i1 %val, label %if.then31, label %if.exit86

if.then31:                                        ; preds = %and.phi
  %38 = load ptr, ptr %prev, align 8, !dbg !2256
  %i2b32 = icmp ne ptr %38, null, !dbg !2256
  br i1 %i2b32, label %if.then33, label %if.else, !dbg !2256

if.then33:                                        ; preds = %if.then31
  %39 = load ptr, ptr %e, align 8, !dbg !2258
  %ptradd34 = getelementptr inbounds i8, ptr %39, i64 32, !dbg !2258
  %40 = load ptr, ptr %prev, align 8, !dbg !2258
  %ptradd35 = getelementptr inbounds i8, ptr %40, i64 32, !dbg !2258
  %41 = load ptr, ptr %ptradd34, align 8, !dbg !2258
  store ptr %41, ptr %ptradd35, align 8, !dbg !2258
  br label %if.exit63, !dbg !2258

if.else:                                          ; preds = %if.then31
  %42 = load ptr, ptr %e, align 8, !dbg !2260
  %ptradd36 = getelementptr inbounds i8, ptr %42, i64 32, !dbg !2260
  %43 = load ptr, ptr %map, align 8, !dbg !2260
  %ptradd37 = getelementptr inbounds i8, ptr %43, i64 8, !dbg !2260
  %44 = load i64, ptr %ptradd37, align 8, !dbg !2260
  %45 = load ptr, ptr %43, align 8, !dbg !2260
  %46 = load i32, ptr %i, align 4, !dbg !2260
  %zext38 = zext i32 %46 to i64, !dbg !2260
  %ge39 = icmp uge i64 %zext38, %44, !dbg !2260
  %47 = call i1 @llvm.expect.i1(i1 %ge39, i1 false), !dbg !2260
  br i1 %47, label %panic40, label %checkok50, !dbg !2260

checkok50:                                        ; preds = %if.else
  %ptroffset51 = getelementptr inbounds [8 x i8], ptr %45, i64 %zext38, !dbg !2260
  %48 = ptrtoint ptr %ptroffset51 to i64, !dbg !2260
  %49 = urem i64 %48, 8, !dbg !2260
  %50 = icmp ne i64 %49, 0, !dbg !2260
  %51 = call i1 @llvm.expect.i1(i1 %50, i1 false), !dbg !2260
  br i1 %51, label %panic52, label %checkok62, !dbg !2260

checkok62:                                        ; preds = %checkok50
  %52 = load ptr, ptr %ptradd36, align 8, !dbg !2260
  store ptr %52, ptr %ptroffset51, align 8, !dbg !2260
  br label %if.exit63, !dbg !2260

if.exit63:                                        ; preds = %checkok62, %if.then33
  %53 = load ptr, ptr %e, align 8, !dbg !2262
  %ptradd64 = getelementptr inbounds i8, ptr %53, i64 40, !dbg !2262
  %54 = load ptr, ptr %ptradd64, align 8, !dbg !2262
  %i2b65 = icmp ne ptr %54, null, !dbg !2262
  br i1 %i2b65, label %if.then66, label %if.else70, !dbg !2262

if.then66:                                        ; preds = %if.exit63
  %55 = load ptr, ptr %e, align 8, !dbg !2263
  %ptradd67 = getelementptr inbounds i8, ptr %55, i64 48, !dbg !2263
  %56 = load ptr, ptr %e, align 8, !dbg !2263
  %ptradd68 = getelementptr inbounds i8, ptr %56, i64 40, !dbg !2263
  %57 = load ptr, ptr %ptradd68, align 8, !dbg !2263
  %ptradd69 = getelementptr inbounds i8, ptr %57, i64 48, !dbg !2263
  %58 = load ptr, ptr %ptradd67, align 8, !dbg !2263
  store ptr %58, ptr %ptradd69, align 8, !dbg !2263
  br label %if.exit73, !dbg !2263

if.else70:                                        ; preds = %if.exit63
  %59 = load ptr, ptr %e, align 8, !dbg !2265
  %ptradd71 = getelementptr inbounds i8, ptr %59, i64 48, !dbg !2265
  %60 = load ptr, ptr %map, align 8, !dbg !2265
  %ptradd72 = getelementptr inbounds i8, ptr %60, i64 56, !dbg !2265
  %61 = load ptr, ptr %ptradd71, align 8, !dbg !2265
  store ptr %61, ptr %ptradd72, align 8, !dbg !2265
  br label %if.exit73, !dbg !2265

if.exit73:                                        ; preds = %if.else70, %if.then66
  %62 = load ptr, ptr %e, align 8, !dbg !2267
  %ptradd74 = getelementptr inbounds i8, ptr %62, i64 48, !dbg !2267
  %63 = load ptr, ptr %ptradd74, align 8, !dbg !2267
  %i2b75 = icmp ne ptr %63, null, !dbg !2267
  br i1 %i2b75, label %if.then76, label %if.else80, !dbg !2267

if.then76:                                        ; preds = %if.exit73
  %64 = load ptr, ptr %e, align 8, !dbg !2268
  %ptradd77 = getelementptr inbounds i8, ptr %64, i64 40, !dbg !2268
  %65 = load ptr, ptr %e, align 8, !dbg !2268
  %ptradd78 = getelementptr inbounds i8, ptr %65, i64 48, !dbg !2268
  %66 = load ptr, ptr %ptradd78, align 8, !dbg !2268
  %ptradd79 = getelementptr inbounds i8, ptr %66, i64 40, !dbg !2268
  %67 = load ptr, ptr %ptradd77, align 8, !dbg !2268
  store ptr %67, ptr %ptradd79, align 8, !dbg !2268
  br label %if.exit83, !dbg !2268

if.else80:                                        ; preds = %if.exit73
  %68 = load ptr, ptr %e, align 8, !dbg !2270
  %ptradd81 = getelementptr inbounds i8, ptr %68, i64 40, !dbg !2270
  %69 = load ptr, ptr %map, align 8, !dbg !2270
  %ptradd82 = getelementptr inbounds i8, ptr %69, i64 64, !dbg !2270
  %70 = load ptr, ptr %ptradd81, align 8, !dbg !2270
  store ptr %70, ptr %ptradd82, align 8, !dbg !2270
  br label %if.exit83, !dbg !2270

if.exit83:                                        ; preds = %if.else80, %if.then76
  %71 = load ptr, ptr %map, align 8, !dbg !2272
  %ptradd84 = getelementptr inbounds i8, ptr %71, i64 32, !dbg !2272
  %72 = load i64, ptr %ptradd84, align 8, !dbg !2272
  %sub85 = sub i64 %72, 1, !dbg !2272
  store i64 %sub85, ptr %ptradd84, align 8, !dbg !2272
  %73 = load ptr, ptr %map, align 8, !dbg !2273
  %74 = load ptr, ptr %e, align 8, !dbg !2273
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_entry"(ptr %73, ptr %74), !dbg !2273
  ret i8 1, !dbg !2274

if.exit86:                                        ; preds = %and.phi
  %75 = load ptr, ptr %e, align 8, !dbg !2275
  store ptr %75, ptr %prev, align 8, !dbg !2275
  %76 = load ptr, ptr %e, align 8, !dbg !2276
  %ptradd87 = getelementptr inbounds i8, ptr %76, i64 32, !dbg !2276
  %77 = load ptr, ptr %ptradd87, align 8, !dbg !2276
  store ptr %77, ptr %e, align 8, !dbg !2276
  br label %loop.cond, !dbg !2276

loop.exit:                                        ; preds = %loop.cond
  ret i8 0, !dbg !2277

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg2, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 561) #5, !dbg !2234
  unreachable, !dbg !2234

panic7:                                           ; preds = %if.exit
  store i64 %14, ptr %taddr, align 8
  %79 = insertvalue %any undef, ptr %taddr, 0
  %80 = insertvalue %any %79, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext, ptr %taddr8, align 8
  %81 = insertvalue %any undef, ptr %taddr8, 0
  %82 = insertvalue %any %81, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg11, align 8
  store %any %80, ptr %varargslots, align 16
  %ptradd12 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %82, ptr %ptradd12, align 16
  %83 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %83, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 568, ptr align 8 %indirectarg13) #5, !dbg !2248
  unreachable, !dbg !2248

panic15:                                          ; preds = %checkok14
  store i64 8, ptr %taddr16, align 8
  %84 = insertvalue %any undef, ptr %taddr16, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr17, align 8
  %86 = insertvalue %any undef, ptr %taddr17, 0
  %87 = insertvalue %any %86, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg20, align 8
  store %any %85, ptr %varargslots21, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots21, i64 16
  store %any %87, ptr %ptradd22, align 16
  %88 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp23" = insertvalue %"any[]" %88, i64 2, 1
  store %"any[]" %"$$temp23", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 568, ptr align 8 %indirectarg24) #5, !dbg !2248
  unreachable, !dbg !2248

panic40:                                          ; preds = %if.else
  store i64 %44, ptr %taddr41, align 8
  %89 = insertvalue %any undef, ptr %taddr41, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %zext38, ptr %taddr42, align 8
  %91 = insertvalue %any undef, ptr %taddr42, 0
  %92 = insertvalue %any %91, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg45, align 8
  store %any %90, ptr %varargslots46, align 16
  %ptradd47 = getelementptr inbounds i8, ptr %varargslots46, i64 16
  store %any %92, ptr %ptradd47, align 16
  %93 = insertvalue %"any[]" undef, ptr %varargslots46, 0
  %"$$temp48" = insertvalue %"any[]" %93, i64 2, 1
  store %"any[]" %"$$temp48", ptr %indirectarg49, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 580, ptr align 8 %indirectarg49) #5, !dbg !2260
  unreachable, !dbg !2260

panic52:                                          ; preds = %checkok50
  store i64 8, ptr %taddr53, align 8
  %94 = insertvalue %any undef, ptr %taddr53, 0
  %95 = insertvalue %any %94, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %49, ptr %taddr54, align 8
  %96 = insertvalue %any undef, ptr %taddr54, 0
  %97 = insertvalue %any %96, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.69, i64 20 }, ptr %indirectarg57, align 8
  store %any %95, ptr %varargslots58, align 16
  %ptradd59 = getelementptr inbounds i8, ptr %varargslots58, i64 16
  store %any %97, ptr %ptradd59, align 16
  %98 = insertvalue %"any[]" undef, ptr %varargslots58, 0
  %"$$temp60" = insertvalue %"any[]" %98, i64 2, 1
  store %"any[]" %"$$temp60", ptr %indirectarg61, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 580, ptr align 8 %indirectarg61) #5, !dbg !2260
  unreachable, !dbg !2260
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.create_entry"(ptr %0, i32 %1, ptr align 8 %2, ptr %3, i32 %4) #0 !dbg !2278 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %hash = alloca i32, align 4
  %value = alloca ptr, align 8
  %bucket_index = alloca i32, align 4
  %e = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg7 = alloca %"any[]", align 8
  %taddr10 = alloca i64, align 8
  %taddr11 = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %varargslots15 = alloca [2 x %any], align 16
  %indirectarg18 = alloca %"any[]", align 8
  %taddr21 = alloca i64, align 8
  %taddr22 = alloca i64, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %varargslots26 = alloca [2 x %any], align 16
  %indirectarg29 = alloca %"any[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %any, align 8
  %entry34 = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %val = alloca ptr, align 8
  %allocator36 = alloca %any, align 8
  %size = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator37 = alloca %any, align 8
  %size38 = alloca i64, align 8
  %blockret39 = alloca ptr, align 8
  %x = alloca i64, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %varargslots64 = alloca [1 x %any], align 16
  %indirectarg66 = alloca %"any[]", align 8
  %.assign_list = alloca %LinkedEntry, align 8
  %taddr74 = alloca i64, align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %varargslots78 = alloca [1 x %any], align 16
  %indirectarg80 = alloca %"any[]", align 8
  %taddr84 = alloca i64, align 8
  %taddr85 = alloca i64, align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %varargslots89 = alloca [2 x %any], align 16
  %indirectarg92 = alloca %"any[]", align 8
  %taddr96 = alloca i64, align 8
  %taddr97 = alloca i64, align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %varargslots101 = alloca [2 x %any], align 16
  %indirectarg104 = alloca %"any[]", align 8
  %indirectarg107 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %taddr112 = alloca i64, align 8
  %taddr113 = alloca i64, align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg116 = alloca %"char[]", align 8
  %varargslots117 = alloca [2 x %any], align 16
  %indirectarg120 = alloca %"any[]", align 8
  %taddr126 = alloca i64, align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %varargslots130 = alloca [1 x %any], align 16
  %indirectarg132 = alloca %"any[]", align 8
  %taddr136 = alloca i64, align 8
  %taddr137 = alloca i64, align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg140 = alloca %"char[]", align 8
  %varargslots141 = alloca [2 x %any], align 16
  %indirectarg144 = alloca %"any[]", align 8
  %taddr148 = alloca i64, align 8
  %taddr149 = alloca i64, align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %indirectarg152 = alloca %"char[]", align 8
  %varargslots153 = alloca [2 x %any], align 16
  %indirectarg156 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2281
  %5 = icmp eq ptr %0, null, !dbg !2281
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !2281
  br i1 %6, label %panic, label %checkok, !dbg !2281

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2282, !DIExpression(), !2283)
  store i32 %1, ptr %hash, align 4
    #dbg_declare(ptr %hash, !2284, !DIExpression(), !2283)
    #dbg_declare(ptr %2, !2285, !DIExpression(), !2283)
  store ptr %3, ptr %value, align 8
    #dbg_declare(ptr %value, !2286, !DIExpression(), !2283)
  store i32 %4, ptr %bucket_index, align 4
    #dbg_declare(ptr %bucket_index, !2287, !DIExpression(), !2283)
    #dbg_declare(ptr %e, !2288, !DIExpression(), !2289)
  %7 = load ptr, ptr %map, align 8, !dbg !2289
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !2289
  %8 = load i64, ptr %ptradd, align 8, !dbg !2289
  %9 = load ptr, ptr %7, align 8, !dbg !2289
  %10 = load i32, ptr %bucket_index, align 4, !dbg !2289
  %sext = sext i32 %10 to i64, !dbg !2289
  %lt = icmp slt i64 %sext, 0, !dbg !2289
  %11 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !2289
  br i1 %11, label %panic3, label %checkok8, !dbg !2289

checkok8:                                         ; preds = %checkok
  %ge = icmp sge i64 %sext, %8, !dbg !2289
  %12 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2289
  br i1 %12, label %panic9, label %checkok19, !dbg !2289

checkok19:                                        ; preds = %checkok8
  %ptroffset = getelementptr inbounds [8 x i8], ptr %9, i64 %sext, !dbg !2289
  %13 = ptrtoint ptr %ptroffset to i64, !dbg !2289
  %14 = urem i64 %13, 8, !dbg !2289
  %15 = icmp ne i64 %14, 0, !dbg !2289
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false), !dbg !2289
  br i1 %16, label %panic20, label %checkok30, !dbg !2289

checkok30:                                        ; preds = %checkok19
  %17 = load ptr, ptr %ptroffset, align 8, !dbg !2289
  store ptr %17, ptr %e, align 8, !dbg !2289
  %18 = load ptr, ptr %map, align 8, !dbg !2290
  %ptradd31 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !2290
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg32, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg33, ptr align 8 %ptradd31, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %2, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33), !dbg !2290
    #dbg_declare(ptr %entry34, !2291, !DIExpression(), !2292)
  %19 = load ptr, ptr %map, align 8, !dbg !2292
  %ptradd35 = getelementptr inbounds i8, ptr %19, i64 16, !dbg !2292
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd35, i32 16, i1 false)
    #dbg_declare(ptr %val, !2293, !DIExpression(), !2295)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator36, ptr align 8 %allocator, i32 16, i1 false)
  store i64 56, ptr %size, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator37, ptr align 8 %allocator36, i32 16, i1 false)
  %20 = load i64, ptr %size, align 8
  store i64 %20, ptr %size38, align 8
  %21 = load i64, ptr %size38, align 8, !dbg !2296
  %i2nb = icmp eq i64 %21, 0, !dbg !2296
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2296

if.then:                                          ; preds = %checkok30
  store ptr null, ptr %blockret39, align 8, !dbg !2296
  br label %expr_block.exit, !dbg !2296

if.exit:                                          ; preds = %checkok30
  %22 = load i64, ptr %size38, align 8, !dbg !2300
  br i1 true, label %or.phi, label %or.rhs, !dbg !2301

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x, align 8
  %23 = load i64, ptr %x, align 8, !dbg !2302
  %neq = icmp ne i64 0, %23, !dbg !2302
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !2302

and.rhs:                                          ; preds = %or.rhs
  %24 = load i64, ptr %x, align 8, !dbg !2302
  %25 = load i64, ptr %x, align 8, !dbg !2302
  %sub = sub i64 %25, 1, !dbg !2302
  %and = and i64 %24, %sub, !dbg !2302
  %eq = icmp eq i64 %and, 0, !dbg !2302
  br label %and.phi, !dbg !2302

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val40 = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !2302
  br label %or.phi, !dbg !2302

or.phi:                                           ; preds = %and.phi, %if.exit
  %val41 = phi i1 [ true, %if.exit ], [ %val40, %and.phi ], !dbg !2302
  br i1 %val41, label %assert_ok, label %assert_fail, !dbg !2302

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.12, i64 65 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg44, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 86) #5, !dbg !2300
  unreachable, !dbg !2300

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok49, label %assert_fail45, !dbg !2300

assert_fail45:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg48, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 86) #5, !dbg !2300
  unreachable, !dbg !2300

assert_ok49:                                      ; preds = %assert_ok
  %lt50 = icmp ult i64 0, %22, !dbg !2300
  br i1 %lt50, label %assert_ok55, label %assert_fail51, !dbg !2300

assert_fail51:                                    ; preds = %assert_ok49
  store %"char[]" { ptr @.panic_msg.15, i64 59 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg54, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 86) #5, !dbg !2300
  unreachable, !dbg !2300

assert_ok55:                                      ; preds = %assert_ok49
  %ptradd56 = getelementptr inbounds i8, ptr %allocator37, i64 8, !dbg !2300
  %29 = load i64, ptr %ptradd56, align 8, !dbg !2300
  %30 = inttoptr i64 %29 to ptr, !dbg !2300
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2281
  %31 = icmp eq ptr %30, %type, !dbg !2281
  br i1 %31, label %cache_hit, label %cache_miss, !dbg !2281

cache_miss:                                       ; preds = %assert_ok55
  %ptradd57 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !2281
  %32 = load ptr, ptr %ptradd57, align 8, !dbg !2281
  %33 = call ptr @.dyn_search(ptr %32, ptr @"$sel.acquire"), !dbg !2281
  store ptr %33, ptr %.inlinecache, align 8, !dbg !2281
  store ptr %30, ptr %.cachedtype, align 8, !dbg !2281
  br label %34, !dbg !2281

cache_hit:                                        ; preds = %assert_ok55
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2281
  br label %34, !dbg !2281

34:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %33, %cache_miss ], !dbg !2281
  %35 = icmp eq ptr %fn_phi, null, !dbg !2281
  br i1 %35, label %missing_function, label %match, !dbg !2281

missing_function:                                 ; preds = %34
  store %"char[]" { ptr @.panic_msg.16, i64 44 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg60, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 86) #5, !dbg !2300
  unreachable, !dbg !2300

match:                                            ; preds = %34
  %37 = load ptr, ptr %allocator37, align 8
  %38 = call i64 %fn_phi(ptr %retparam, ptr %37, i64 %22, i32 0, i64 0), !dbg !2300
  %not_err = icmp eq i64 %38, 0, !dbg !2300
  %39 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2300
  br i1 %39, label %after_check, label %assign_optional, !dbg !2300

assign_optional:                                  ; preds = %match
  store i64 %38, ptr %error_var, align 8, !dbg !2300
  br label %panic_block, !dbg !2300

after_check:                                      ; preds = %match
  %40 = load ptr, ptr %retparam, align 8, !dbg !2300
  store ptr %40, ptr %blockret39, align 8, !dbg !2300
  br label %expr_block.exit, !dbg !2300

expr_block.exit:                                  ; preds = %after_check, %if.then
  br label %noerr_block, !dbg !2300

panic_block:                                      ; preds = %assign_optional
  %41 = insertvalue %any undef, ptr %error_var, 0, !dbg !2300
  %42 = insertvalue %any %41, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !2300
  store %"char[]" { ptr @.panic_msg.18, i64 36 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg63, align 8
  store %any %42, ptr %varargslots64, align 16
  %43 = insertvalue %"any[]" undef, ptr %varargslots64, 0
  %"$$temp65" = insertvalue %"any[]" %43, i64 1, 1
  store %"any[]" %"$$temp65", ptr %indirectarg66, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 75, ptr align 8 %indirectarg66) #5, !dbg !2298
  unreachable, !dbg !2298

noerr_block:                                      ; preds = %expr_block.exit
  %44 = load ptr, ptr %blockret39, align 8, !dbg !2298
  store ptr %44, ptr %val, align 8, !dbg !2298
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 56, i1 false)
  %45 = load i32, ptr %hash, align 4, !dbg !2304
  store i32 %45, ptr %.assign_list, align 8, !dbg !2304
  %ptradd67 = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !2304
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd67, ptr align 8 %2, i32 16, i1 false), !dbg !2304
  %ptradd68 = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !2304
  %46 = load ptr, ptr %value, align 8, !dbg !2304
  store ptr %46, ptr %ptradd68, align 8, !dbg !2304
  %ptradd69 = getelementptr inbounds i8, ptr %.assign_list, i64 32, !dbg !2304
  %47 = load ptr, ptr %map, align 8, !dbg !2304
  %ptradd70 = getelementptr inbounds i8, ptr %47, i64 8, !dbg !2304
  %48 = load i64, ptr %ptradd70, align 8, !dbg !2304
  %49 = load ptr, ptr %47, align 8, !dbg !2304
  %50 = load i32, ptr %bucket_index, align 4, !dbg !2304
  %sext71 = sext i32 %50 to i64, !dbg !2304
  %lt72 = icmp slt i64 %sext71, 0, !dbg !2304
  %51 = call i1 @llvm.expect.i1(i1 %lt72, i1 false), !dbg !2304
  br i1 %51, label %panic73, label %checkok81, !dbg !2304

checkok81:                                        ; preds = %noerr_block
  %ge82 = icmp sge i64 %sext71, %48, !dbg !2304
  %52 = call i1 @llvm.expect.i1(i1 %ge82, i1 false), !dbg !2304
  br i1 %52, label %panic83, label %checkok93, !dbg !2304

checkok93:                                        ; preds = %checkok81
  %ptroffset94 = getelementptr inbounds [8 x i8], ptr %49, i64 %sext71, !dbg !2304
  %53 = ptrtoint ptr %ptroffset94 to i64, !dbg !2304
  %54 = urem i64 %53, 8, !dbg !2304
  %55 = icmp ne i64 %54, 0, !dbg !2304
  %56 = call i1 @llvm.expect.i1(i1 %55, i1 false), !dbg !2304
  br i1 %56, label %panic95, label %checkok105, !dbg !2304

checkok105:                                       ; preds = %checkok93
  %57 = load ptr, ptr %ptroffset94, align 8, !dbg !2304
  store ptr %57, ptr %ptradd69, align 8, !dbg !2304
  %58 = load ptr, ptr %val, align 8, !dbg !2305
  %checknull = icmp eq ptr %58, null, !dbg !2305
  %59 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2305
  br i1 %59, label %panic106, label %checkok110, !dbg !2305

checkok110:                                       ; preds = %checkok105
  %60 = ptrtoint ptr %58 to i64, !dbg !2305
  %61 = urem i64 %60, 8, !dbg !2305
  %62 = icmp ne i64 %61, 0, !dbg !2305
  %63 = call i1 @llvm.expect.i1(i1 %62, i1 false), !dbg !2305
  br i1 %63, label %panic111, label %checkok121, !dbg !2305

checkok121:                                       ; preds = %checkok110
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %58, ptr align 8 %.assign_list, i32 56, i1 false), !dbg !2305
  %64 = load ptr, ptr %val, align 8, !dbg !2306
  store ptr %64, ptr %entry34, align 8, !dbg !2306
  %65 = load ptr, ptr %map, align 8, !dbg !2307
  %ptradd122 = getelementptr inbounds i8, ptr %65, i64 8, !dbg !2307
  %66 = load i64, ptr %ptradd122, align 8, !dbg !2307
  %67 = load ptr, ptr %65, align 8, !dbg !2307
  %68 = load i32, ptr %bucket_index, align 4, !dbg !2307
  %sext123 = sext i32 %68 to i64, !dbg !2307
  %lt124 = icmp slt i64 %sext123, 0, !dbg !2307
  %69 = call i1 @llvm.expect.i1(i1 %lt124, i1 false), !dbg !2307
  br i1 %69, label %panic125, label %checkok133, !dbg !2307

checkok133:                                       ; preds = %checkok121
  %ge134 = icmp sge i64 %sext123, %66, !dbg !2307
  %70 = call i1 @llvm.expect.i1(i1 %ge134, i1 false), !dbg !2307
  br i1 %70, label %panic135, label %checkok145, !dbg !2307

checkok145:                                       ; preds = %checkok133
  %ptroffset146 = getelementptr inbounds [8 x i8], ptr %67, i64 %sext123, !dbg !2307
  %71 = ptrtoint ptr %ptroffset146 to i64, !dbg !2307
  %72 = urem i64 %71, 8, !dbg !2307
  %73 = icmp ne i64 %72, 0, !dbg !2307
  %74 = call i1 @llvm.expect.i1(i1 %73, i1 false), !dbg !2307
  br i1 %74, label %panic147, label %checkok157, !dbg !2307

checkok157:                                       ; preds = %checkok145
  %75 = load ptr, ptr %entry34, align 8, !dbg !2307
  store ptr %75, ptr %ptroffset146, align 8, !dbg !2307
  %76 = load ptr, ptr %map, align 8, !dbg !2308
  %ptradd158 = getelementptr inbounds i8, ptr %76, i64 32, !dbg !2308
  %77 = load i64, ptr %ptradd158, align 8, !dbg !2308
  %add = add i64 %77, 1, !dbg !2308
  store i64 %add, ptr %ptradd158, align 8, !dbg !2308
  ret void, !dbg !2308

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg2, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 611) #5, !dbg !2283
  unreachable, !dbg !2283

panic3:                                           ; preds = %checkok
  store i64 %sext, ptr %taddr, align 8
  %79 = insertvalue %any undef, ptr %taddr, 0
  %80 = insertvalue %any %79, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg6, align 8
  store %any %80, ptr %varargslots, align 16
  %81 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %81, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg7, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 613, ptr align 8 %indirectarg7) #5, !dbg !2289
  unreachable, !dbg !2289

panic9:                                           ; preds = %checkok8
  store i64 %8, ptr %taddr10, align 8
  %82 = insertvalue %any undef, ptr %taddr10, 0
  %83 = insertvalue %any %82, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext, ptr %taddr11, align 8
  %84 = insertvalue %any undef, ptr %taddr11, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg14, align 8
  store %any %83, ptr %varargslots15, align 16
  %ptradd16 = getelementptr inbounds i8, ptr %varargslots15, i64 16
  store %any %85, ptr %ptradd16, align 16
  %86 = insertvalue %"any[]" undef, ptr %varargslots15, 0
  %"$$temp17" = insertvalue %"any[]" %86, i64 2, 1
  store %"any[]" %"$$temp17", ptr %indirectarg18, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 613, ptr align 8 %indirectarg18) #5, !dbg !2289
  unreachable, !dbg !2289

panic20:                                          ; preds = %checkok19
  store i64 8, ptr %taddr21, align 8
  %87 = insertvalue %any undef, ptr %taddr21, 0
  %88 = insertvalue %any %87, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %14, ptr %taddr22, align 8
  %89 = insertvalue %any undef, ptr %taddr22, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg25, align 8
  store %any %88, ptr %varargslots26, align 16
  %ptradd27 = getelementptr inbounds i8, ptr %varargslots26, i64 16
  store %any %90, ptr %ptradd27, align 16
  %91 = insertvalue %"any[]" undef, ptr %varargslots26, 0
  %"$$temp28" = insertvalue %"any[]" %91, i64 2, 1
  store %"any[]" %"$$temp28", ptr %indirectarg29, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 613, ptr align 8 %indirectarg29) #5, !dbg !2289
  unreachable, !dbg !2289

panic73:                                          ; preds = %noerr_block
  store i64 %sext71, ptr %taddr74, align 8
  %92 = insertvalue %any undef, ptr %taddr74, 0
  %93 = insertvalue %any %92, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg77, align 8
  store %any %93, ptr %varargslots78, align 16
  %94 = insertvalue %"any[]" undef, ptr %varargslots78, 0
  %"$$temp79" = insertvalue %"any[]" %94, i64 1, 1
  store %"any[]" %"$$temp79", ptr %indirectarg80, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, i32 617, ptr align 8 %indirectarg80) #5, !dbg !2304
  unreachable, !dbg !2304

panic83:                                          ; preds = %checkok81
  store i64 %48, ptr %taddr84, align 8
  %95 = insertvalue %any undef, ptr %taddr84, 0
  %96 = insertvalue %any %95, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext71, ptr %taddr85, align 8
  %97 = insertvalue %any undef, ptr %taddr85, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg88, align 8
  store %any %96, ptr %varargslots89, align 16
  %ptradd90 = getelementptr inbounds i8, ptr %varargslots89, i64 16
  store %any %98, ptr %ptradd90, align 16
  %99 = insertvalue %"any[]" undef, ptr %varargslots89, 0
  %"$$temp91" = insertvalue %"any[]" %99, i64 2, 1
  store %"any[]" %"$$temp91", ptr %indirectarg92, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, i32 617, ptr align 8 %indirectarg92) #5, !dbg !2304
  unreachable, !dbg !2304

panic95:                                          ; preds = %checkok93
  store i64 8, ptr %taddr96, align 8
  %100 = insertvalue %any undef, ptr %taddr96, 0
  %101 = insertvalue %any %100, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %54, ptr %taddr97, align 8
  %102 = insertvalue %any undef, ptr %taddr97, 0
  %103 = insertvalue %any %102, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg98, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg100, align 8
  store %any %101, ptr %varargslots101, align 16
  %ptradd102 = getelementptr inbounds i8, ptr %varargslots101, i64 16
  store %any %103, ptr %ptradd102, align 16
  %104 = insertvalue %"any[]" undef, ptr %varargslots101, 0
  %"$$temp103" = insertvalue %"any[]" %104, i64 2, 1
  store %"any[]" %"$$temp103", ptr %indirectarg104, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg98, ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, i32 617, ptr align 8 %indirectarg104) #5, !dbg !2304
  unreachable, !dbg !2304

panic106:                                         ; preds = %checkok105
  store %"char[]" { ptr @.panic_msg.54, i64 44 }, ptr %indirectarg107, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg109, align 8
  %105 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %105(ptr align 8 %indirectarg107, ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, i32 178) #5, !dbg !2305
  unreachable, !dbg !2305

panic111:                                         ; preds = %checkok110
  store i64 8, ptr %taddr112, align 8
  %106 = insertvalue %any undef, ptr %taddr112, 0
  %107 = insertvalue %any %106, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %61, ptr %taddr113, align 8
  %108 = insertvalue %any undef, ptr %taddr113, 0
  %109 = insertvalue %any %108, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg115, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg116, align 8
  store %any %107, ptr %varargslots117, align 16
  %ptradd118 = getelementptr inbounds i8, ptr %varargslots117, i64 16
  store %any %109, ptr %ptradd118, align 16
  %110 = insertvalue %"any[]" undef, ptr %varargslots117, 0
  %"$$temp119" = insertvalue %"any[]" %110, i64 2, 1
  store %"any[]" %"$$temp119", ptr %indirectarg120, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, ptr align 8 %indirectarg116, i32 178, ptr align 8 %indirectarg120) #5, !dbg !2305
  unreachable, !dbg !2305

panic125:                                         ; preds = %checkok121
  store i64 %sext123, ptr %taddr126, align 8
  %111 = insertvalue %any undef, ptr %taddr126, 0
  %112 = insertvalue %any %111, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.71, i64 38 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg129, align 8
  store %any %112, ptr %varargslots130, align 16
  %113 = insertvalue %"any[]" undef, ptr %varargslots130, 0
  %"$$temp131" = insertvalue %"any[]" %113, i64 1, 1
  store %"any[]" %"$$temp131", ptr %indirectarg132, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, i32 618, ptr align 8 %indirectarg132) #5, !dbg !2307
  unreachable, !dbg !2307

panic135:                                         ; preds = %checkok133
  store i64 %66, ptr %taddr136, align 8
  %114 = insertvalue %any undef, ptr %taddr136, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext123, ptr %taddr137, align 8
  %116 = insertvalue %any undef, ptr %taddr137, 0
  %117 = insertvalue %any %116, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.23, i64 59 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg139, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg140, align 8
  store %any %115, ptr %varargslots141, align 16
  %ptradd142 = getelementptr inbounds i8, ptr %varargslots141, i64 16
  store %any %117, ptr %ptradd142, align 16
  %118 = insertvalue %"any[]" undef, ptr %varargslots141, 0
  %"$$temp143" = insertvalue %"any[]" %118, i64 2, 1
  store %"any[]" %"$$temp143", ptr %indirectarg144, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, ptr align 8 %indirectarg140, i32 618, ptr align 8 %indirectarg144) #5, !dbg !2307
  unreachable, !dbg !2307

panic147:                                         ; preds = %checkok145
  store i64 8, ptr %taddr148, align 8
  %119 = insertvalue %any undef, ptr %taddr148, 0
  %120 = insertvalue %any %119, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %72, ptr %taddr149, align 8
  %121 = insertvalue %any undef, ptr %taddr149, 0
  %122 = insertvalue %any %121, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.24, i64 94 }, ptr %indirectarg150, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg151, align 8
  store %"char[]" { ptr @.func.70, i64 12 }, ptr %indirectarg152, align 8
  store %any %120, ptr %varargslots153, align 16
  %ptradd154 = getelementptr inbounds i8, ptr %varargslots153, i64 16
  store %any %122, ptr %ptradd154, align 16
  %123 = insertvalue %"any[]" undef, ptr %varargslots153, 0
  %"$$temp155" = insertvalue %"any[]" %123, i64 2, 1
  store %"any[]" %"$$temp155", ptr %indirectarg156, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg150, ptr align 8 %indirectarg151, ptr align 8 %indirectarg152, i32 618, ptr align 8 %indirectarg156) #5, !dbg !2307
  unreachable, !dbg !2307
}

; Function Attrs: nounwind ssp uwtable
define internal void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_entry"(ptr %0, ptr %1) #0 !dbg !2309 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %entry3 = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %ptr = alloca ptr, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2312
  %2 = icmp eq ptr %0, null, !dbg !2312
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2312
  br i1 %3, label %panic, label %checkok, !dbg !2312

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !2313, !DIExpression(), !2314)
  store ptr %1, ptr %entry3, align 8
    #dbg_declare(ptr %entry3, !2315, !DIExpression(), !2314)
  %4 = load ptr, ptr %self, align 8, !dbg !2316
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !2316
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd, i32 16, i1 false)
  %5 = load ptr, ptr %entry3, align 8, !dbg !2316
  %ptradd4 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !2316
  %6 = load ptr, ptr %ptradd4, align 8
  store ptr %6, ptr %ptr, align 8
  %7 = load ptr, ptr %ptr, align 8, !dbg !2317
  %i2nb = icmp eq ptr %7, null, !dbg !2317
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2317

if.then:                                          ; preds = %checkok
  br label %expr_block.exit, !dbg !2317

if.exit:                                          ; preds = %checkok
  %8 = load ptr, ptr %ptr, align 8, !dbg !2319
  %neq = icmp ne ptr %8, null, !dbg !2319
  br i1 %neq, label %assert_ok, label %assert_fail, !dbg !2319

assert_fail:                                      ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.67, i64 75 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.72, i64 10 }, ptr %indirectarg7, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 123) #5, !dbg !2319
  unreachable, !dbg !2319

assert_ok:                                        ; preds = %if.exit
  %ptradd8 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !2319
  %10 = load i64, ptr %ptradd8, align 8, !dbg !2319
  %11 = inttoptr i64 %10 to ptr, !dbg !2319
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2312
  %12 = icmp eq ptr %11, %type, !dbg !2312
  br i1 %12, label %cache_hit, label %cache_miss, !dbg !2312

cache_miss:                                       ; preds = %assert_ok
  %ptradd9 = getelementptr inbounds i8, ptr %11, i64 16, !dbg !2312
  %13 = load ptr, ptr %ptradd9, align 8, !dbg !2312
  %14 = call ptr @.dyn_search(ptr %13, ptr @"$sel.release"), !dbg !2312
  store ptr %14, ptr %.inlinecache, align 8, !dbg !2312
  store ptr %11, ptr %.cachedtype, align 8, !dbg !2312
  br label %15, !dbg !2312

cache_hit:                                        ; preds = %assert_ok
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2312
  br label %15, !dbg !2312

15:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %14, %cache_miss ], !dbg !2312
  %16 = icmp eq ptr %fn_phi, null, !dbg !2312
  br i1 %16, label %missing_function, label %match, !dbg !2312

missing_function:                                 ; preds = %15
  store %"char[]" { ptr @.panic_msg.68, i64 44 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.13, i64 16 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.72, i64 10 }, ptr %indirectarg12, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 123) #5, !dbg !2319
  unreachable, !dbg !2319

match:                                            ; preds = %15
  %18 = load ptr, ptr %allocator, align 8, !dbg !2319
  call void %fn_phi(ptr %18, ptr %8, i8 zeroext 0), !dbg !2319
  br label %expr_block.exit, !dbg !2319

expr_block.exit:                                  ; preds = %match, %if.then
  %19 = load ptr, ptr %entry3, align 8, !dbg !2320
  %20 = load ptr, ptr %self, align 8, !dbg !2320
  call void @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_internal"(ptr %20, ptr %19) #6, !dbg !2320
  ret void, !dbg !2320

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.72, i64 10 }, ptr %indirectarg2, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 622) #5, !dbg !2314
  unreachable, !dbg !2314
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator.len"(ptr align 8 %0) #0 comdat !dbg !2321 {
entry:
    #dbg_declare(ptr %0, !2324, !DIExpression(), !2325)
  %1 = load ptr, ptr %0, align 8, !dbg !2325
  %ptradd = getelementptr inbounds i8, ptr %1, i64 32, !dbg !2325
  %2 = load i64, ptr %ptradd, align 8, !dbg !2325
  ret i64 %2, !dbg !2325
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator.len"(ptr align 8 %0) #0 comdat !dbg !2326 {
entry:
    #dbg_declare(ptr %0, !2329, !DIExpression(), !2330)
  %1 = load ptr, ptr %0, align 8, !dbg !2330
  %ptradd = getelementptr inbounds i8, ptr %1, i64 32, !dbg !2330
  %2 = load i64, ptr %ptradd, align 8, !dbg !2330
  ret i64 %2, !dbg !2330
}

; Function Attrs: nounwind ssp uwtable
define weak_odr i64 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.len"(ptr align 8 %0) #0 comdat !dbg !2331 {
entry:
    #dbg_declare(ptr %0, !2334, !DIExpression(), !2335)
  %1 = load ptr, ptr %0, align 8, !dbg !2335
  %ptradd = getelementptr inbounds i8, ptr %1, i64 32, !dbg !2335
  %2 = load i64, ptr %ptradd, align 8, !dbg !2335
  ret i64 %2, !dbg !2335
}

; Function Attrs: nounwind ssp uwtable
define weak_odr zeroext i8 @"std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.has_value"(ptr %0, ptr %1) #0 comdat !dbg !2336 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %map = alloca ptr, align 8
  %v = alloca ptr, align 8
  %entry3 = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  %2 = icmp eq ptr %0, null, !dbg !2339
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2339
  br i1 %3, label %panic, label %checkok, !dbg !2339

checkok:                                          ; preds = %entry
  store ptr %0, ptr %map, align 8
    #dbg_declare(ptr %map, !2340, !DIExpression(), !2341)
  store ptr %1, ptr %v, align 8
    #dbg_declare(ptr %v, !2342, !DIExpression(), !2341)
  %4 = load ptr, ptr %map, align 8, !dbg !2343
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !2343
  %5 = load i64, ptr %ptradd, align 8, !dbg !2343
  %i2nb = icmp eq i64 %5, 0, !dbg !2343
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !2343

if.then:                                          ; preds = %checkok
  ret i8 0, !dbg !2343

if.exit:                                          ; preds = %checkok
    #dbg_declare(ptr %entry3, !2344, !DIExpression(), !2345)
  %6 = load ptr, ptr %map, align 8, !dbg !2345
  %ptradd4 = getelementptr inbounds i8, ptr %6, i64 56, !dbg !2345
  %7 = load ptr, ptr %ptradd4, align 8, !dbg !2345
  store ptr %7, ptr %entry3, align 8, !dbg !2345
  br label %loop.cond, !dbg !2346

loop.cond:                                        ; preds = %if.exit7, %if.exit
  %8 = load ptr, ptr %entry3, align 8, !dbg !2347
  %i2b = icmp ne ptr %8, null, !dbg !2347
  br i1 %i2b, label %loop.body, label %loop.exit, !dbg !2347

loop.body:                                        ; preds = %loop.cond
  %9 = load ptr, ptr %v, align 8
  store ptr %9, ptr %a, align 8
  %10 = load ptr, ptr %entry3, align 8, !dbg !2349
  %ptradd5 = getelementptr inbounds i8, ptr %10, i64 24, !dbg !2349
  %11 = load ptr, ptr %ptradd5, align 8
  store ptr %11, ptr %b, align 8
  %12 = load ptr, ptr %a, align 8, !dbg !2351
  %13 = load ptr, ptr %b, align 8, !dbg !2351
  %eq = icmp eq ptr %12, %13, !dbg !2351
  br i1 %eq, label %if.then6, label %if.exit7, !dbg !2351

if.then6:                                         ; preds = %loop.body
  ret i8 1, !dbg !2349

if.exit7:                                         ; preds = %loop.body
  %14 = load ptr, ptr %entry3, align 8, !dbg !2353
  %ptradd8 = getelementptr inbounds i8, ptr %14, i64 48, !dbg !2353
  %15 = load ptr, ptr %ptradd8, align 8, !dbg !2353
  store ptr %15, ptr %entry3, align 8, !dbg !2353
  br label %loop.cond, !dbg !2353

loop.exit:                                        ; preds = %loop.cond
  ret i8 0, !dbg !2354

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.26, i64 61 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.77, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.75, i64 9 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 337) #5, !dbg !2341
  unreachable, !dbg !2341
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #2

define weak ptr @.dyn_search(ptr %0, ptr %1) unnamed_addr comdat {
entry:
  br label %check

check:                                            ; preds = %no_match, %entry
  %2 = phi ptr [ %0, %entry ], [ %9, %no_match ]
  %3 = icmp eq ptr %2, null
  br i1 %3, label %missing_function, label %compare

missing_function:                                 ; preds = %check
  ret ptr null

compare:                                          ; preds = %check
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %match, label %no_match

match:                                            ; preds = %compare
  %7 = load ptr, ptr %2, align 8
  ret ptr %7

no_match:                                         ; preds = %compare
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8
  br label %check
}

; Function Attrs: nounwind ssp uwtable
declare void @std.core.builtin.panicf(ptr align 8, ptr align 8, ptr align 8, i32, ptr align 8) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare nonnull ptr @llvm.threadlocal.address.p0(ptr nonnull) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @std.hash.fnv32a.hash(ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare void @std.core.String.copy(ptr noalias sret(%"char[]") align 8, ptr align 8, ptr align 8) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.Formatter.print(ptr, ptr, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.Formatter.printf(ptr, ptr, ptr align 8, ptr align 8) #0

define internal void @.c3_dynamic_register() align 8 {
entry:
  %next_val = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format", i32 0, i32 2), align 8
  %0 = icmp eq ptr %next_val, inttoptr (i64 -1 to ptr)
  br i1 %0, label %dtable_check, label %dtable_skip

dtable_check:                                     ; preds = %dtable_check, %entry
  %dtable_ref = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.HashMap", i32 0, i32 2), %entry ], [ %next_dtable_ref, %dtable_check ]
  %dtable_ptr = load ptr, ptr %dtable_ref, align 8
  %1 = icmp eq ptr %dtable_ptr, null
  %next_dtable_ref = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr, i32 0, i32 2
  br i1 %1, label %dtable_found, label %dtable_check

dtable_found:                                     ; preds = %dtable_check
  store ptr @"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format", ptr %dtable_ref, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format", i32 0, i32 2), align 8
  br label %dtable_skip

dtable_skip:                                      ; preds = %dtable_found, %entry
  %next_val1 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format", i32 0, i32 2), align 8
  %2 = icmp eq ptr %next_val1, inttoptr (i64 -1 to ptr)
  br i1 %2, label %dtable_check2, label %dtable_skip7

dtable_check2:                                    ; preds = %dtable_check2, %dtable_skip
  %dtable_ref3 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap", i32 0, i32 2), %dtable_skip ], [ %next_dtable_ref5, %dtable_check2 ]
  %dtable_ptr4 = load ptr, ptr %dtable_ref3, align 8
  %3 = icmp eq ptr %dtable_ptr4, null
  %next_dtable_ref5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr4, i32 0, i32 2
  br i1 %3, label %dtable_found6, label %dtable_check2

dtable_found6:                                    ; preds = %dtable_check2
  store ptr @"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format", ptr %dtable_ref3, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format", i32 0, i32 2), align 8
  br label %dtable_skip7

dtable_skip7:                                     ; preds = %dtable_found6, %dtable_skip
  ret void
}

attributes #0 = { nounwind ssp uwtable "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { noreturn }
attributes #6 = { alwaysinline }

!llvm.module.flags = !{!730, !731, !732, !733, !734, !735}
!llvm.dbg.cu = !{!736}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "DEFAULT_INITIAL_CAPACITY", linkageName: "std_collections_map$String$p$cforms.MenuItem$.DEFAULT_INITIAL_CAPACITY", scope: !2, file: !2, line: 11, type: !3, isLocal: false, isDefinition: true, align: 4)
!2 = !DIFile(filename: "hashmap.c3", directory: "C:/Compilers/C3/lib/std/collections")
!3 = !DIBasicType(name: "uint", size: 32, encoding: DW_ATE_unsigned)
!4 = !DIGlobalVariableExpression(var: !5, expr: !DIExpression())
!5 = distinct !DIGlobalVariable(name: "MAXIMUM_CAPACITY", linkageName: "std_collections_map$String$p$cforms.MenuItem$.MAXIMUM_CAPACITY", scope: !2, file: !2, line: 12, type: !3, isLocal: false, isDefinition: true, align: 4)
!6 = !DIGlobalVariableExpression(var: !7, expr: !DIExpression())
!7 = distinct !DIGlobalVariable(name: "DEFAULT_LOAD_FACTOR", linkageName: "std_collections_map$String$p$cforms.MenuItem$.DEFAULT_LOAD_FACTOR", scope: !2, file: !2, line: 13, type: !8, isLocal: false, isDefinition: true, align: 4)
!8 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "VALUE_IS_EQUATABLE", linkageName: "std_collections_map$String$p$cforms.MenuItem$.VALUE_IS_EQUATABLE", scope: !2, file: !2, line: 14, type: !11, isLocal: false, isDefinition: true, align: 1)
!11 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(name: "COPY_KEYS", linkageName: "std_collections_map$String$p$cforms.MenuItem$.COPY_KEYS", scope: !2, file: !2, line: 15, type: !11, isLocal: false, isDefinition: true, align: 1)
!14 = !DIGlobalVariableExpression(var: !15, expr: !DIExpression())
!15 = distinct !DIGlobalVariable(name: "MAP_HEAP_ALLOCATOR", linkageName: "std_collections_map$String$p$cforms.MenuItem$.MAP_HEAP_ALLOCATOR", scope: !2, file: !2, line: 17, type: !16, isLocal: false, isDefinition: true, align: 8)
!16 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allocator", size: 128, align: 64, elements: !17, identifier: "Allocator")
!17 = !{!18, !20}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !16, baseType: !19, size: 64, align: 64)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void*", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16, baseType: !21, size: 64, align: 64, offset: 64)
!21 = !DIBasicType(name: "typeid", size: 64, encoding: DW_ATE_address)
!22 = !DIGlobalVariableExpression(var: !23, expr: !DIExpression())
!23 = distinct !DIGlobalVariable(name: "ONHEAP", linkageName: "std_collections_map$String$p$cforms.MenuItem$.ONHEAP", scope: !2, file: !2, line: 19, type: !24, isLocal: false, isDefinition: true, align: 8)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "HashMap", scope: !2, file: !2, line: 29, size: 384, align: 64, elements: !25, identifier: "std_collections_map$String$p$cforms.MenuItem$.HashMap")
!25 = !{!26, !696, !697, !698, !699}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !24, file: !2, line: 31, baseType: !27, size: 128, align: 64)
!27 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry*[]", size: 128, align: 64, elements: !28, identifier: "Entry*[]")
!28 = !{!29, !695}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, baseType: !30, size: 64, align: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Entry**", baseType: !31, size: 64, align: 64, dwarfAddressSpace: 0)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Entry*", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", scope: !2, file: !2, line: 21, size: 320, align: 64, elements: !33, identifier: "std_collections_map$String$p$cforms.MenuItem$.Entry")
!33 = !{!34, !35, !46, !694}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !32, file: !2, line: 23, baseType: !3, size: 32, align: 32)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !32, file: !2, line: 24, baseType: !36, size: 128, align: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", scope: !2, file: !2, line: 48, baseType: !37, align: 8)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "String", baseType: !38)
!38 = !DICompositeType(tag: DW_TAG_structure_type, name: "char[]", size: 128, align: 64, elements: !39, identifier: "char[]")
!39 = !{!40, !43}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !38, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char*", baseType: !42, size: 64, align: 64, dwarfAddressSpace: 0)
!42 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !38, baseType: !44, size: 64, align: 64, offset: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "usz", baseType: !45)
!45 = !DIBasicType(name: "ulong", size: 64, encoding: DW_ATE_unsigned)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !32, file: !2, line: 25, baseType: !47, size: 64, align: 64, offset: 192)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "Value", scope: !2, file: !2, line: 48, baseType: !48, align: 8)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MenuItem*", baseType: !49, size: 64, align: 64, dwarfAddressSpace: 0)
!49 = !DICompositeType(tag: DW_TAG_structure_type, name: "MenuItem", scope: !2, file: !2, line: 112, size: 1920, align: 64, elements: !50, identifier: "cforms.MenuItem")
!50 = !{!51, !92, !93, !95, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !116, !123, !124, !125, !686, !691, !692, !693}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !49, file: !2, line: 114, baseType: !52, size: 768, align: 64)
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "MenuBase", scope: !49, file: !2, line: 56, size: 768, align: 64, elements: !53, identifier: "cforms.MenuBase")
!53 = !{!54, !57, !81, !82}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !52, file: !2, line: 58, baseType: !55, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hmenu", scope: !2, file: !2, line: 16, baseType: !56, align: 8)
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "Handle", scope: !2, file: !2, line: 6, baseType: !19, align: 8)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !52, file: !2, line: 59, baseType: !58, size: 320, align: 64, offset: 64)
!58 = !DICompositeType(tag: DW_TAG_structure_type, name: "Font", scope: !52, file: !2, line: 5, size: 320, align: 64, elements: !59, identifier: "cforms.Font")
!59 = !{!60, !61, !63, !75, !76, !77, !78, !79}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !58, file: !2, line: 7, baseType: !37, size: 128, align: 64)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !58, file: !2, line: 8, baseType: !62, size: 32, align: 32, offset: 128)
!62 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !58, file: !2, line: 9, baseType: !64, size: 32, align: 32, offset: 160)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FontWeight", scope: !58, file: !2, line: 45, baseType: !62, size: 32, align: 32, elements: !65)
!65 = !{!66, !67, !68, !69, !70, !71, !72, !73, !74}
!66 = !DIEnumerator(name: "THIN", value: 0)
!67 = !DIEnumerator(name: "EXTRA_LIGHT", value: 1)
!68 = !DIEnumerator(name: "LIGHT", value: 2)
!69 = !DIEnumerator(name: "NORMAL", value: 3)
!70 = !DIEnumerator(name: "MEDIUM", value: 4)
!71 = !DIEnumerator(name: "SEMI_BOLD", value: 5)
!72 = !DIEnumerator(name: "BOLD", value: 6)
!73 = !DIEnumerator(name: "EXTRA_BOLD", value: 7)
!74 = !DIEnumerator(name: "THICK", value: 8)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "italics", scope: !58, file: !2, line: 10, baseType: !11, size: 8, align: 8, offset: 192)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "underline", scope: !58, file: !2, line: 11, baseType: !11, size: 8, align: 8, offset: 200)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "strikeout", scope: !58, file: !2, line: 12, baseType: !11, size: 8, align: 8, offset: 208)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_isCreated", scope: !58, file: !2, line: 13, baseType: !11, size: 8, align: 8, offset: 216)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !58, file: !2, line: 14, baseType: !80, size: 64, align: 64, offset: 256)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hfont", scope: !2, file: !2, line: 12, baseType: !56, align: 8)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_menuCount", scope: !52, file: !2, line: 60, baseType: !3, size: 32, align: 32, offset: 384)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_menuList", scope: !52, file: !2, line: 62, baseType: !83, size: 320, align: 64, offset: 448)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuItemList", scope: !2, file: !2, line: 47, baseType: !84, align: 8)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !2, file: !2, line: 18, size: 320, align: 64, elements: !85, identifier: "std_collections_list$p$cforms.MenuItem$.List")
!85 = !{!86, !87, !88, !89}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !84, file: !2, line: 20, baseType: !44, size: 64, align: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !84, file: !2, line: 21, baseType: !44, size: 64, align: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !84, file: !2, line: 22, baseType: !16, size: 128, align: 64, offset: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !84, file: !2, line: 23, baseType: !90, size: 64, align: 64, offset: 256)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !91, size: 64, align: 64, dwarfAddressSpace: 0)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 47, baseType: !48, align: 8)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "parentHandle", scope: !49, file: !2, line: 115, baseType: !55, size: 64, align: 64, offset: 768)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_formHwnd", scope: !49, file: !2, line: 116, baseType: !94, size: 64, align: 64, offset: 832)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hwnd", scope: !2, file: !2, line: 19, baseType: !56, align: 8)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "bgColor", scope: !49, file: !2, line: 117, baseType: !96, size: 64, align: 32, offset: 896)
!96 = !DICompositeType(tag: DW_TAG_structure_type, name: "Color", scope: !49, file: !2, line: 14, size: 64, align: 32, elements: !97, identifier: "cforms.Color")
!97 = !{!98, !99}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !96, file: !2, line: 16, baseType: !3, size: 32, align: 32)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !96, file: !2, line: 17, baseType: !100, size: 32, align: 32, offset: 32)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "Colorref", scope: !2, file: !2, line: 36, baseType: !3, align: 4)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "fgColor", scope: !49, file: !2, line: 118, baseType: !96, size: 64, align: 32, offset: 960)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "idNum", scope: !49, file: !2, line: 119, baseType: !3, size: 32, align: 32, offset: 1024)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !49, file: !2, line: 121, baseType: !3, size: 32, align: 32, offset: 1056)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_evtFlag", scope: !49, file: !2, line: 122, baseType: !3, size: 32, align: 32, offset: 1088)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "iLevel", scope: !49, file: !2, line: 123, baseType: !62, size: 32, align: 32, offset: 1120)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "hasCheckMark", scope: !49, file: !2, line: 124, baseType: !11, size: 8, align: 8, offset: 1152)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "_isCreated", scope: !49, file: !2, line: 125, baseType: !11, size: 8, align: 8, offset: 1160)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "_isEnabled", scope: !49, file: !2, line: 126, baseType: !11, size: 8, align: 8, offset: 1168)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "_popup", scope: !49, file: !2, line: 127, baseType: !11, size: 8, align: 8, offset: 1176)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_formMenu", scope: !49, file: !2, line: 128, baseType: !11, size: 8, align: 8, offset: 1184)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !49, file: !2, line: 129, baseType: !37, size: 128, align: 64, offset: 1216)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "_wideText", scope: !49, file: !2, line: 130, baseType: !113, size: 64, align: 64, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Char16*", baseType: !114, size: 64, align: 64, dwarfAddressSpace: 0)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "Char16", scope: !2, file: !2, line: 33, baseType: !115, align: 2)
!115 = !DIBasicType(name: "ushort", size: 16, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !49, file: !2, line: 131, baseType: !117, size: 8, align: 8, offset: 1408)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MenuType", scope: !49, file: !2, line: 49, baseType: !42, size: 8, align: 8, elements: !118)
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "BASE_MENU", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "MENU_ITEM", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "POPUP", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "SEPRATOR", value: 3, isUnsigned: true)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "_parent", scope: !49, file: !2, line: 132, baseType: !48, size: 64, align: 64, offset: 1472)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "uFlag", scope: !49, file: !2, line: 133, baseType: !3, size: 32, align: 32, offset: 1536)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "_mbar", scope: !49, file: !2, line: 134, baseType: !126, size: 64, align: 64, offset: 1600)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MenuBar*", baseType: !127, size: 64, align: 64, dwarfAddressSpace: 0)
!127 = !DICompositeType(tag: DW_TAG_structure_type, name: "MenuBar", scope: !2, file: !2, line: 98, size: 1216, align: 64, elements: !128, identifier: "cforms.MenuBar")
!128 = !{!129, !130, !131, !681, !682, !683, !684, !685}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !127, file: !2, line: 100, baseType: !52, size: 768, align: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "_formHwnd", scope: !127, file: !2, line: 101, baseType: !94, size: 64, align: 64, offset: 768)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_pForm", scope: !127, file: !2, line: 102, baseType: !132, size: 64, align: 64, offset: 832)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Form*", baseType: !133, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Form", scope: !2, file: !2, line: 69, size: 5632, align: 64, elements: !134, identifier: "cforms.Form")
!134 = !{!135, !516, !529, !539, !545, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !576, !590, !600, !623, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !675, !676}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !133, file: !2, line: 71, baseType: !136, size: 2496, align: 64)
!136 = !DICompositeType(tag: DW_TAG_structure_type, name: "Control", scope: !133, file: !2, line: 55, size: 2496, align: 64, elements: !137, identifier: "cforms.Control")
!137 = !{!138, !157, !161, !162, !163, !164, !165, !166, !167, !168, !169, !172, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !292, !293, !294, !295, !296, !297, !298, !299, !300, !322, !323, !324, !325, !326, !327, !514, !515}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !136, file: !2, line: 57, baseType: !139, size: 8, align: 8)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ControlType", scope: !136, file: !2, line: 25, baseType: !42, size: 8, align: 8, elements: !140)
!140 = !{!141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!141 = !DIEnumerator(name: "NONE", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "BUTTON", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "CALENDAR", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "CHECK_BOX", value: 3, isUnsigned: true)
!145 = !DIEnumerator(name: "COMBO_BOX", value: 4, isUnsigned: true)
!146 = !DIEnumerator(name: "DATE_TIME_PICKER", value: 5, isUnsigned: true)
!147 = !DIEnumerator(name: "GROUP_BOX", value: 6, isUnsigned: true)
!148 = !DIEnumerator(name: "LABEL", value: 7, isUnsigned: true)
!149 = !DIEnumerator(name: "LIST_BOX", value: 8, isUnsigned: true)
!150 = !DIEnumerator(name: "LIST_VIEW", value: 9, isUnsigned: true)
!151 = !DIEnumerator(name: "NUM_PICKER", value: 10, isUnsigned: true)
!152 = !DIEnumerator(name: "PROGRESS_BAR", value: 11, isUnsigned: true)
!153 = !DIEnumerator(name: "RADIO_BUTTON", value: 12, isUnsigned: true)
!154 = !DIEnumerator(name: "TEXT_BOX", value: 13, isUnsigned: true)
!155 = !DIEnumerator(name: "TRACK_BAR", value: 14, isUnsigned: true)
!156 = !DIEnumerator(name: "TREE_VIEW", value: 15, isUnsigned: true)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !2, line: 58, baseType: !158, size: 64, align: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "DString", scope: !2, file: !2, line: 7, baseType: !159, align: 8)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "DStringOpaque*", baseType: !160, size: 64, align: 64, dwarfAddressSpace: 0)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "DStringOpaque", scope: !2, file: !2, line: 8, baseType: null, align: 1)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !136, file: !2, line: 59, baseType: !37, size: 128, align: 64, offset: 128)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !136, file: !2, line: 60, baseType: !94, size: 64, align: 64, offset: 256)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "backColor", scope: !136, file: !2, line: 61, baseType: !96, size: 64, align: 32, offset: 320)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "foreColor", scope: !136, file: !2, line: 62, baseType: !96, size: 64, align: 32, offset: 384)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !136, file: !2, line: 63, baseType: !62, size: 32, align: 32, offset: 448)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !136, file: !2, line: 64, baseType: !62, size: 32, align: 32, offset: 480)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "xpos", scope: !136, file: !2, line: 65, baseType: !62, size: 32, align: 32, offset: 512)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ypos", scope: !136, file: !2, line: 66, baseType: !62, size: 32, align: 32, offset: 544)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "ctlID", scope: !136, file: !2, line: 67, baseType: !170, size: 64, align: 64, offset: 576)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "iptr", baseType: !171)
!171 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "contextMenu", scope: !136, file: !2, line: 68, baseType: !173, size: 64, align: 64, offset: 640)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ContextMenu*", baseType: !174, size: 64, align: 64, dwarfAddressSpace: 0)
!174 = !DICompositeType(tag: DW_TAG_structure_type, name: "ContextMenu", scope: !2, file: !2, line: 23, size: 1600, align: 64, elements: !175, identifier: "cforms.ContextMenu")
!175 = !{!176, !177, !179, !249, !250, !251, !252, !253, !254, !255, !256, !258, !259, !260, !261, !266, !267, !268}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !174, file: !2, line: 25, baseType: !52, size: 768, align: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !174, file: !2, line: 26, baseType: !178, size: 64, align: 64, offset: 768)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Control*", baseType: !136, size: 64, align: 64, dwarfAddressSpace: 0)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "tray", scope: !174, file: !2, line: 27, baseType: !180, size: 64, align: 64, offset: 832)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TrayIcon*", baseType: !181, size: 64, align: 64, dwarfAddressSpace: 0)
!181 = !DICompositeType(tag: DW_TAG_structure_type, name: "TrayIcon", scope: !2, file: !2, line: 40, size: 8640, align: 64, elements: !182, identifier: "cforms.TrayIcon")
!182 = !{!183, !184, !185, !186, !194, !196, !197, !198, !204, !230, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "_resetIcon", scope: !181, file: !2, line: 42, baseType: !11, size: 8, align: 8)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "_cmenuUsed", scope: !181, file: !2, line: 43, baseType: !11, size: 8, align: 8, offset: 8)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "_retainIcon", scope: !181, file: !2, line: 44, baseType: !11, size: 8, align: 8, offset: 16)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "menuTrigger", scope: !181, file: !2, line: 45, baseType: !187, size: 32, align: 32, offset: 32)
!187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TrayMenuTrigger", scope: !181, file: !2, line: 145, baseType: !62, size: 32, align: 32, elements: !188)
!188 = !{!189, !190, !191, !192, !193}
!189 = !DIEnumerator(name: "NONE", value: 0)
!190 = !DIEnumerator(name: "LEFT_CLICK", value: 1)
!191 = !DIEnumerator(name: "LEFT_DOUBLE_CLICK", value: 2)
!192 = !DIEnumerator(name: "RIGHT_CLICK", value: 3)
!193 = !DIEnumerator(name: "ANY_CLICK", value: 4)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "_hTrayIcon", scope: !181, file: !2, line: 46, baseType: !195, size: 64, align: 64, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hicon", scope: !2, file: !2, line: 14, baseType: !56, align: 8)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "_msgWinHwnd", scope: !181, file: !2, line: 47, baseType: !94, size: 64, align: 64, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "contextMenu", scope: !181, file: !2, line: 48, baseType: !173, size: 64, align: 64, offset: 192)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !181, file: !2, line: 49, baseType: !199, size: 64, align: 64, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "any*", baseType: !200, size: 64, align: 64, dwarfAddressSpace: 0)
!200 = !DICompositeType(tag: DW_TAG_structure_type, name: "any", size: 128, align: 64, elements: !201, identifier: "any")
!201 = !{!202, !203}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !200, baseType: !19, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !200, baseType: !21, size: 64, align: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "_nid", scope: !181, file: !2, line: 50, baseType: !205, size: 7616, align: 64, offset: 320)
!205 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotifyIconData", scope: !181, file: !2, line: 423, size: 7616, align: 64, elements: !206, identifier: "cforms.NotifyIconData")
!206 = !{!207, !209, !210, !211, !212, !213, !214, !218, !219, !220, !224, !225, !229}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "cbSize", scope: !205, file: !2, line: 425, baseType: !208, size: 32, align: 32)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "Dword", scope: !2, file: !2, line: 34, baseType: !3, align: 4)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "hWnd", scope: !205, file: !2, line: 426, baseType: !94, size: 64, align: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "uID", scope: !205, file: !2, line: 427, baseType: !3, size: 32, align: 32, offset: 128)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "uFlags", scope: !205, file: !2, line: 428, baseType: !3, size: 32, align: 32, offset: 160)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "uCallbackMessage", scope: !205, file: !2, line: 429, baseType: !3, size: 32, align: 32, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "hIcon", scope: !205, file: !2, line: 430, baseType: !195, size: 64, align: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "toolTipText", scope: !205, file: !2, line: 431, baseType: !215, size: 2048, align: 16, offset: 320)
!215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 2048, align: 16, elements: !216)
!216 = !{!217}
!217 = !DISubrange(count: 128, lowerBound: 0)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "dwState", scope: !205, file: !2, line: 432, baseType: !208, size: 32, align: 32, offset: 2368)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dwStateMask", scope: !205, file: !2, line: 433, baseType: !208, size: 32, align: 32, offset: 2400)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "balloonText", scope: !205, file: !2, line: 434, baseType: !221, size: 4096, align: 16, offset: 2432)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 4096, align: 16, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 256, lowerBound: 0)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "uVersionOrTimeout", scope: !205, file: !2, line: 435, baseType: !3, size: 32, align: 32, offset: 6528)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "balloonTitle", scope: !205, file: !2, line: 436, baseType: !226, size: 1024, align: 16, offset: 6560)
!226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 1024, align: 16, elements: !227)
!227 = !{!228}
!228 = !DISubrange(count: 64, lowerBound: 0)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "dwInfoFlags", scope: !205, file: !2, line: 437, baseType: !208, size: 32, align: 32, offset: 7584)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "onBalloonShow", scope: !181, file: !2, line: 52, baseType: !231, size: 64, align: 64, offset: 7936)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "TrayIconEventHandler", scope: !2, file: !2, line: 10, baseType: !232, align: 8)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TrayIconEventHandler", baseType: !233, size: 64, align: 64, dwarfAddressSpace: 0)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !180, !235}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "EventArgs*", baseType: !236, size: 64, align: 64, dwarfAddressSpace: 0)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "EventArgs", scope: !2, file: !2, line: 23, size: 8, align: 8, elements: !237, identifier: "cforms.EventArgs")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "handled", scope: !236, file: !2, line: 25, baseType: !11, size: 8, align: 8)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "onBalloonClose", scope: !181, file: !2, line: 53, baseType: !231, size: 64, align: 64, offset: 8000)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "onBalloonClick", scope: !181, file: !2, line: 54, baseType: !231, size: 64, align: 64, offset: 8064)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseMove", scope: !181, file: !2, line: 55, baseType: !231, size: 64, align: 64, offset: 8128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "onLeftMouseDown", scope: !181, file: !2, line: 56, baseType: !231, size: 64, align: 64, offset: 8192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "onLeftMouseUp", scope: !181, file: !2, line: 57, baseType: !231, size: 64, align: 64, offset: 8256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "onRightMouseDown", scope: !181, file: !2, line: 58, baseType: !231, size: 64, align: 64, offset: 8320)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "onRightMouseUp", scope: !181, file: !2, line: 59, baseType: !231, size: 64, align: 64, offset: 8384)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "onLeftClick", scope: !181, file: !2, line: 60, baseType: !231, size: 64, align: 64, offset: 8448)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "onRightClick", scope: !181, file: !2, line: 61, baseType: !231, size: 64, align: 64, offset: 8512)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "onLeftDoubleClick", scope: !181, file: !2, line: 62, baseType: !231, size: 64, align: 64, offset: 8576)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !174, file: !2, line: 28, baseType: !62, size: 32, align: 32, offset: 896)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !174, file: !2, line: 28, baseType: !62, size: 32, align: 32, offset: 928)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "rightClick", scope: !174, file: !2, line: 29, baseType: !11, size: 8, align: 8, offset: 960)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "_menuInserted", scope: !174, file: !2, line: 30, baseType: !11, size: 8, align: 8, offset: 968)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "_trayParent", scope: !174, file: !2, line: 31, baseType: !11, size: 8, align: 8, offset: 976)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "_grayCref", scope: !174, file: !2, line: 32, baseType: !100, size: 32, align: 32, offset: 992)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "_dummyHwnd", scope: !174, file: !2, line: 33, baseType: !94, size: 64, align: 64, offset: 1024)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "_defBgBrush", scope: !174, file: !2, line: 34, baseType: !257, size: 64, align: 64, offset: 1088)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hbrush", scope: !2, file: !2, line: 9, baseType: !56, align: 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "_hotBgBrush", scope: !174, file: !2, line: 34, baseType: !257, size: 64, align: 64, offset: 1152)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "_borderBrush", scope: !174, file: !2, line: 34, baseType: !257, size: 64, align: 64, offset: 1216)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "_grayBrush", scope: !174, file: !2, line: 34, baseType: !257, size: 64, align: 64, offset: 1280)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "onMenuShown", scope: !174, file: !2, line: 37, baseType: !262, size: 64, align: 64, offset: 1344)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "EventHandler", scope: !2, file: !2, line: 4, baseType: !263, align: 8)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "EventHandler", baseType: !264, size: 64, align: 64, dwarfAddressSpace: 0)
!264 = !DISubroutineType(types: !265)
!265 = !{null, !178, !235}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "onMenuClose", scope: !174, file: !2, line: 37, baseType: !262, size: 64, align: 64, offset: 1408)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "onTrayMenuShown", scope: !174, file: !2, line: 38, baseType: !231, size: 64, align: 64, offset: 1472)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "onTrayMenuClose", scope: !174, file: !2, line: 38, baseType: !231, size: 64, align: 64, offset: 1536)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "_className", scope: !136, file: !2, line: 69, baseType: !113, size: 64, align: 64, offset: 704)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "_style", scope: !136, file: !2, line: 70, baseType: !208, size: 32, align: 32, offset: 768)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "_exStyle", scope: !136, file: !2, line: 71, baseType: !208, size: 32, align: 32, offset: 800)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "_drawMode", scope: !136, file: !2, line: 72, baseType: !3, size: 32, align: 32, offset: 832)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "_isCreated", scope: !136, file: !2, line: 73, baseType: !11, size: 8, align: 8, offset: 864)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_lbDown", scope: !136, file: !2, line: 74, baseType: !11, size: 8, align: 8, offset: 872)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_rbDown", scope: !136, file: !2, line: 75, baseType: !11, size: 8, align: 8, offset: 880)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_isMouseEntered", scope: !136, file: !2, line: 76, baseType: !11, size: 8, align: 8, offset: 888)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_textable", scope: !136, file: !2, line: 77, baseType: !11, size: 8, align: 8, offset: 896)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_autoSizable", scope: !136, file: !2, line: 78, baseType: !11, size: 8, align: 8, offset: 904)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "_cmenuUsed", scope: !136, file: !2, line: 79, baseType: !11, size: 8, align: 8, offset: 912)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "_bkBrush", scope: !136, file: !2, line: 80, baseType: !257, size: 64, align: 64, offset: 960)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "_wideText", scope: !136, file: !2, line: 81, baseType: !113, size: 64, align: 64, offset: 1024)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_wtext", scope: !136, file: !2, line: 82, baseType: !283, size: 64, align: 64, offset: 1088)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "WideString*", baseType: !284, size: 64, align: 64, dwarfAddressSpace: 0)
!284 = !DICompositeType(tag: DW_TAG_structure_type, name: "WideString", scope: !2, file: !2, line: 6, size: 256, align: 64, elements: !285, identifier: "cforms.WideString")
!285 = !{!286, !289, !290, !291}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !284, file: !2, line: 7, baseType: !287, size: 64, align: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "WString", scope: !2, file: !2, line: 23, baseType: !288, align: 8)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ushort*", baseType: !115, size: 64, align: 64, dwarfAddressSpace: 0)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "_inpLen", scope: !284, file: !2, line: 8, baseType: !62, size: 32, align: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "_wcLen", scope: !284, file: !2, line: 9, baseType: !62, size: 32, align: 32, offset: 96)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "_inpStr", scope: !284, file: !2, line: 10, baseType: !37, size: 128, align: 64, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !136, file: !2, line: 83, baseType: !58, size: 320, align: 64, offset: 1152)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_parent", scope: !136, file: !2, line: 84, baseType: !132, size: 64, align: 64, offset: 1472)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "onGotFocus", scope: !136, file: !2, line: 86, baseType: !262, size: 64, align: 64, offset: 1536)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "onLostFocus", scope: !136, file: !2, line: 87, baseType: !262, size: 64, align: 64, offset: 1600)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "onClick", scope: !136, file: !2, line: 88, baseType: !262, size: 64, align: 64, offset: 1664)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "onRightClick", scope: !136, file: !2, line: 89, baseType: !262, size: 64, align: 64, offset: 1728)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseEnter", scope: !136, file: !2, line: 90, baseType: !262, size: 64, align: 64, offset: 1792)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseLeave", scope: !136, file: !2, line: 91, baseType: !262, size: 64, align: 64, offset: 1856)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseDown", scope: !136, file: !2, line: 92, baseType: !301, size: 64, align: 64, offset: 1920)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "MouseEventHandler", scope: !2, file: !2, line: 5, baseType: !302, align: 8)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MouseEventHandler", baseType: !303, size: 64, align: 64, dwarfAddressSpace: 0)
!303 = !DISubroutineType(types: !304)
!304 = !{null, !178, !305}
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MouseEventArgs*", baseType: !306, size: 64, align: 64, dwarfAddressSpace: 0)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "MouseEventArgs", scope: !2, file: !2, line: 28, size: 192, align: 32, elements: !307, identifier: "cforms.MouseEventArgs")
!307 = !{!308, !309, !317, !318, !319, !320, !321}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "eventArgs", scope: !306, file: !2, line: 30, baseType: !236, size: 8, align: 8)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !306, file: !2, line: 31, baseType: !310, size: 32, align: 32, offset: 32)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MouseButton", scope: !306, file: !2, line: 113, baseType: !62, size: 32, align: 32, elements: !311)
!311 = !{!189, !312, !313, !314, !315, !316}
!312 = !DIEnumerator(name: "RIGHT", value: 1)
!313 = !DIEnumerator(name: "MIDDLE", value: 2)
!314 = !DIEnumerator(name: "LEFT", value: 3)
!315 = !DIEnumerator(name: "XBUTTON1", value: 4)
!316 = !DIEnumerator(name: "XBUTTON2", value: 5)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "isShiftPressed", scope: !306, file: !2, line: 32, baseType: !11, size: 8, align: 8, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "isCtrlPressed", scope: !306, file: !2, line: 33, baseType: !11, size: 8, align: 8, offset: 72)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !306, file: !2, line: 34, baseType: !62, size: 32, align: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !306, file: !2, line: 35, baseType: !62, size: 32, align: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !306, file: !2, line: 36, baseType: !62, size: 32, align: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseUp", scope: !136, file: !2, line: 93, baseType: !301, size: 64, align: 64, offset: 1984)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "onRightMouseDown", scope: !136, file: !2, line: 94, baseType: !301, size: 64, align: 64, offset: 2048)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "onRightMouseUp", scope: !136, file: !2, line: 95, baseType: !301, size: 64, align: 64, offset: 2112)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseWheel", scope: !136, file: !2, line: 96, baseType: !301, size: 64, align: 64, offset: 2176)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "onMouseMove", scope: !136, file: !2, line: 97, baseType: !301, size: 64, align: 64, offset: 2240)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "onKeyDown", scope: !136, file: !2, line: 98, baseType: !328, size: 64, align: 64, offset: 2304)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyEventHandler", scope: !2, file: !2, line: 7, baseType: !329, align: 8)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "KeyEventHandler", baseType: !330, size: 64, align: 64, dwarfAddressSpace: 0)
!330 = !DISubroutineType(types: !331)
!331 = !{null, !178, !332}
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "KeyEventArgs*", baseType: !333, size: 64, align: 64, dwarfAddressSpace: 0)
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyEventArgs", scope: !2, file: !2, line: 47, size: 160, align: 32, elements: !334, identifier: "cforms.KeyEventArgs")
!334 = !{!335, !336, !508, !509, !510, !511, !512, !513}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "eventArgs", scope: !333, file: !2, line: 49, baseType: !236, size: 8, align: 8)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "keyCode", scope: !333, file: !2, line: 50, baseType: !337, size: 32, align: 32, offset: 32)
!337 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Keys", scope: !333, file: !2, line: 165, baseType: !62, size: 32, align: 32, elements: !338)
!338 = !{!339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507}
!339 = !DIEnumerator(name: "MODIFIER", value: 0)
!340 = !DIEnumerator(name: "NOKEY", value: 1)
!341 = !DIEnumerator(name: "LBUTTON", value: 2)
!342 = !DIEnumerator(name: "RBUTTON", value: 3)
!343 = !DIEnumerator(name: "CANCEL", value: 4)
!344 = !DIEnumerator(name: "MBUTTON", value: 5)
!345 = !DIEnumerator(name: "XBUTTO1", value: 6)
!346 = !DIEnumerator(name: "XBUTTON2", value: 7)
!347 = !DIEnumerator(name: "BACK_SPACE", value: 8)
!348 = !DIEnumerator(name: "TAB", value: 9)
!349 = !DIEnumerator(name: "LINE_FEED", value: 10)
!350 = !DIEnumerator(name: "CLEAR", value: 11)
!351 = !DIEnumerator(name: "ENTER", value: 12)
!352 = !DIEnumerator(name: "SHIFT", value: 13)
!353 = !DIEnumerator(name: "CTRL", value: 14)
!354 = !DIEnumerator(name: "ALT", value: 15)
!355 = !DIEnumerator(name: "PAUSE", value: 16)
!356 = !DIEnumerator(name: "CAPS_LOCK", value: 17)
!357 = !DIEnumerator(name: "ESCAPE", value: 18)
!358 = !DIEnumerator(name: "SPACE", value: 19)
!359 = !DIEnumerator(name: "PAGE_UP", value: 20)
!360 = !DIEnumerator(name: "PAGE_DOWN", value: 21)
!361 = !DIEnumerator(name: "END", value: 22)
!362 = !DIEnumerator(name: "HOME", value: 23)
!363 = !DIEnumerator(name: "LEFTA_RROW", value: 24)
!364 = !DIEnumerator(name: "UP_ARROW", value: 25)
!365 = !DIEnumerator(name: "RIGHT_ARROW", value: 26)
!366 = !DIEnumerator(name: "DOWN_ARROW", value: 27)
!367 = !DIEnumerator(name: "SELECT", value: 28)
!368 = !DIEnumerator(name: "PRINT", value: 29)
!369 = !DIEnumerator(name: "EXECUTE", value: 30)
!370 = !DIEnumerator(name: "PRINT_SCREEN", value: 31)
!371 = !DIEnumerator(name: "INSERT", value: 32)
!372 = !DIEnumerator(name: "DEL", value: 33)
!373 = !DIEnumerator(name: "HELP", value: 34)
!374 = !DIEnumerator(name: "D0", value: 35)
!375 = !DIEnumerator(name: "D1", value: 36)
!376 = !DIEnumerator(name: "D2", value: 37)
!377 = !DIEnumerator(name: "D3", value: 38)
!378 = !DIEnumerator(name: "D4", value: 39)
!379 = !DIEnumerator(name: "D5", value: 40)
!380 = !DIEnumerator(name: "D6", value: 41)
!381 = !DIEnumerator(name: "D7", value: 42)
!382 = !DIEnumerator(name: "D8", value: 43)
!383 = !DIEnumerator(name: "D9", value: 44)
!384 = !DIEnumerator(name: "A", value: 45)
!385 = !DIEnumerator(name: "B", value: 46)
!386 = !DIEnumerator(name: "C", value: 47)
!387 = !DIEnumerator(name: "D", value: 48)
!388 = !DIEnumerator(name: "E", value: 49)
!389 = !DIEnumerator(name: "F", value: 50)
!390 = !DIEnumerator(name: "G", value: 51)
!391 = !DIEnumerator(name: "H", value: 52)
!392 = !DIEnumerator(name: "I", value: 53)
!393 = !DIEnumerator(name: "J", value: 54)
!394 = !DIEnumerator(name: "K", value: 55)
!395 = !DIEnumerator(name: "L", value: 56)
!396 = !DIEnumerator(name: "M", value: 57)
!397 = !DIEnumerator(name: "N", value: 58)
!398 = !DIEnumerator(name: "O", value: 59)
!399 = !DIEnumerator(name: "P", value: 60)
!400 = !DIEnumerator(name: "Q", value: 61)
!401 = !DIEnumerator(name: "R", value: 62)
!402 = !DIEnumerator(name: "S", value: 63)
!403 = !DIEnumerator(name: "T", value: 64)
!404 = !DIEnumerator(name: "U", value: 65)
!405 = !DIEnumerator(name: "V", value: 66)
!406 = !DIEnumerator(name: "W", value: 67)
!407 = !DIEnumerator(name: "X", value: 68)
!408 = !DIEnumerator(name: "Y", value: 69)
!409 = !DIEnumerator(name: "Z", value: 70)
!410 = !DIEnumerator(name: "LEFT_WIN", value: 71)
!411 = !DIEnumerator(name: "RIGH_TWIN", value: 72)
!412 = !DIEnumerator(name: "APPS", value: 73)
!413 = !DIEnumerator(name: "SLEEP", value: 74)
!414 = !DIEnumerator(name: "NUM_PAD0", value: 75)
!415 = !DIEnumerator(name: "NUM_PAD1", value: 76)
!416 = !DIEnumerator(name: "NUM_PAD2", value: 77)
!417 = !DIEnumerator(name: "NUM_PAD3", value: 78)
!418 = !DIEnumerator(name: "NUM_PAD4", value: 79)
!419 = !DIEnumerator(name: "NUM_PAD5", value: 80)
!420 = !DIEnumerator(name: "NUM_PAD6", value: 81)
!421 = !DIEnumerator(name: "NUM_PAD7", value: 82)
!422 = !DIEnumerator(name: "NUM_PAD8", value: 83)
!423 = !DIEnumerator(name: "NUM_PAD9", value: 84)
!424 = !DIEnumerator(name: "MULTIPLY", value: 85)
!425 = !DIEnumerator(name: "ADD", value: 86)
!426 = !DIEnumerator(name: "SEPERATOR", value: 87)
!427 = !DIEnumerator(name: "SUBTRACT", value: 88)
!428 = !DIEnumerator(name: "DECIMAL", value: 89)
!429 = !DIEnumerator(name: "DIVIDE", value: 90)
!430 = !DIEnumerator(name: "F1", value: 91)
!431 = !DIEnumerator(name: "F2", value: 92)
!432 = !DIEnumerator(name: "F3", value: 93)
!433 = !DIEnumerator(name: "F4", value: 94)
!434 = !DIEnumerator(name: "F5", value: 95)
!435 = !DIEnumerator(name: "F6", value: 96)
!436 = !DIEnumerator(name: "F7", value: 97)
!437 = !DIEnumerator(name: "F8", value: 98)
!438 = !DIEnumerator(name: "F9", value: 99)
!439 = !DIEnumerator(name: "F10", value: 100)
!440 = !DIEnumerator(name: "F11", value: 101)
!441 = !DIEnumerator(name: "F12", value: 102)
!442 = !DIEnumerator(name: "F13", value: 103)
!443 = !DIEnumerator(name: "F14", value: 104)
!444 = !DIEnumerator(name: "F15", value: 105)
!445 = !DIEnumerator(name: "F16", value: 106)
!446 = !DIEnumerator(name: "F17", value: 107)
!447 = !DIEnumerator(name: "F18", value: 108)
!448 = !DIEnumerator(name: "F19", value: 109)
!449 = !DIEnumerator(name: "F20", value: 110)
!450 = !DIEnumerator(name: "F21", value: 111)
!451 = !DIEnumerator(name: "F22", value: 112)
!452 = !DIEnumerator(name: "F23", value: 113)
!453 = !DIEnumerator(name: "F24", value: 114)
!454 = !DIEnumerator(name: "NUM_LOCK", value: 115)
!455 = !DIEnumerator(name: "SCROLL", value: 116)
!456 = !DIEnumerator(name: "LEFT_SHIFT", value: 117)
!457 = !DIEnumerator(name: "RIGHT_SHIFT", value: 118)
!458 = !DIEnumerator(name: "LEFT_CTRL", value: 119)
!459 = !DIEnumerator(name: "RIGHT_CTRL", value: 120)
!460 = !DIEnumerator(name: "LEFT_MENU", value: 121)
!461 = !DIEnumerator(name: "RIGHT_MENU", value: 122)
!462 = !DIEnumerator(name: "BROWSER_BACK", value: 123)
!463 = !DIEnumerator(name: "BROWSER_FORWARD", value: 124)
!464 = !DIEnumerator(name: "BROWER_REFRESH", value: 125)
!465 = !DIEnumerator(name: "BROWSER_STOP", value: 126)
!466 = !DIEnumerator(name: "BROWSER_SEARCH", value: 127)
!467 = !DIEnumerator(name: "BROWSER_FAVORITES", value: 128)
!468 = !DIEnumerator(name: "BROWSER_HOME", value: 129)
!469 = !DIEnumerator(name: "VOLUME_MUTE", value: 130)
!470 = !DIEnumerator(name: "VOLUME_DOWN", value: 131)
!471 = !DIEnumerator(name: "VOLUME_UP", value: 132)
!472 = !DIEnumerator(name: "MEDIA_NEXT_TRACK", value: 133)
!473 = !DIEnumerator(name: "MEDIA_PRE_VTRACK", value: 134)
!474 = !DIEnumerator(name: "MEDIA_STOP", value: 135)
!475 = !DIEnumerator(name: "MEDIA_PLAY_PAUSE", value: 136)
!476 = !DIEnumerator(name: "LAUNCH_MAIL", value: 137)
!477 = !DIEnumerator(name: "SELECT_MEDIA", value: 138)
!478 = !DIEnumerator(name: "LAUNCH_APP1", value: 139)
!479 = !DIEnumerator(name: "LAUNCH_APP2", value: 140)
!480 = !DIEnumerator(name: "OEM1", value: 141)
!481 = !DIEnumerator(name: "OEM_PLUS", value: 142)
!482 = !DIEnumerator(name: "OEM_COMMA", value: 143)
!483 = !DIEnumerator(name: "OEM_MINUS", value: 144)
!484 = !DIEnumerator(name: "OEM_PERIOD", value: 145)
!485 = !DIEnumerator(name: "OEM_QUESTION", value: 146)
!486 = !DIEnumerator(name: "OEM_TILDE", value: 147)
!487 = !DIEnumerator(name: "OEM_OPEN_BRACKET", value: 148)
!488 = !DIEnumerator(name: "OEM_PIPE", value: 149)
!489 = !DIEnumerator(name: "OEM_CLOSE_BRACKET", value: 150)
!490 = !DIEnumerator(name: "OEM_QUOTES", value: 151)
!491 = !DIEnumerator(name: "OEM8", value: 152)
!492 = !DIEnumerator(name: "OEM_BACK_SLASH", value: 153)
!493 = !DIEnumerator(name: "PROCESS", value: 154)
!494 = !DIEnumerator(name: "PACKET", value: 155)
!495 = !DIEnumerator(name: "ATTN", value: 156)
!496 = !DIEnumerator(name: "CRSEL", value: 157)
!497 = !DIEnumerator(name: "EXSEL", value: 158)
!498 = !DIEnumerator(name: "ERASE_EOF", value: 159)
!499 = !DIEnumerator(name: "PLAY", value: 160)
!500 = !DIEnumerator(name: "ZOOM", value: 161)
!501 = !DIEnumerator(name: "NONAME", value: 162)
!502 = !DIEnumerator(name: "PA1", value: 163)
!503 = !DIEnumerator(name: "OEM_CLEAR", value: 164)
!504 = !DIEnumerator(name: "KEY_CODE", value: 165)
!505 = !DIEnumerator(name: "SHIFT_MODIFIER", value: 166)
!506 = !DIEnumerator(name: "CTRL_MODIFIER", value: 167)
!507 = !DIEnumerator(name: "ALT_MODIFIER", value: 168)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !333, file: !2, line: 51, baseType: !337, size: 32, align: 32, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "keyValue", scope: !333, file: !2, line: 52, baseType: !62, size: 32, align: 32, offset: 96)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "altPressed", scope: !333, file: !2, line: 53, baseType: !11, size: 8, align: 8, offset: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ctrlPressed", scope: !333, file: !2, line: 54, baseType: !11, size: 8, align: 8, offset: 136)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "shiftPressed", scope: !333, file: !2, line: 55, baseType: !11, size: 8, align: 8, offset: 144)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "supressKey", scope: !333, file: !2, line: 56, baseType: !11, size: 8, align: 8, offset: 152)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "onKeyUp", scope: !136, file: !2, line: 99, baseType: !328, size: 64, align: 64, offset: 2368)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "onKeyPress", scope: !136, file: !2, line: 100, baseType: !328, size: 64, align: 64, offset: 2432)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "formPos", scope: !133, file: !2, line: 72, baseType: !517, size: 32, align: 32, offset: 2496)
!517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FormPos", scope: !133, file: !2, line: 58, baseType: !62, size: 32, align: 32, elements: !518)
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528}
!519 = !DIEnumerator(name: "CENTER", value: 0)
!520 = !DIEnumerator(name: "TOP_LEFT", value: 1)
!521 = !DIEnumerator(name: "TOP_MID", value: 2)
!522 = !DIEnumerator(name: "TOP_RIGHT", value: 3)
!523 = !DIEnumerator(name: "MID_LEFT", value: 4)
!524 = !DIEnumerator(name: "MID_RIGHT", value: 5)
!525 = !DIEnumerator(name: "BOTTOM_LEFT", value: 6)
!526 = !DIEnumerator(name: "BOTTOM_MID", value: 7)
!527 = !DIEnumerator(name: "BOTTOM_RIGHT", value: 8)
!528 = !DIEnumerator(name: "MANUAL", value: 9)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "formStyle", scope: !133, file: !2, line: 73, baseType: !530, size: 32, align: 32, offset: 2528)
!530 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FormStyle", scope: !133, file: !2, line: 72, baseType: !62, size: 32, align: 32, elements: !531)
!531 = !{!189, !532, !533, !534, !535, !536, !537, !538}
!532 = !DIEnumerator(name: "FIXED_SINGLE", value: 1)
!533 = !DIEnumerator(name: "FIXED_3D", value: 2)
!534 = !DIEnumerator(name: "FIXED_DIALOG", value: 3)
!535 = !DIEnumerator(name: "NORMAL_WINDOW", value: 4)
!536 = !DIEnumerator(name: "FIXED_TOOL", value: 5)
!537 = !DIEnumerator(name: "SIZABLE_TOOL", value: 6)
!538 = !DIEnumerator(name: "HIDDEN", value: 7)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "formState", scope: !133, file: !2, line: 74, baseType: !540, size: 32, align: 32, offset: 2560)
!540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FormState", scope: !133, file: !2, line: 84, baseType: !62, size: 32, align: 32, elements: !541)
!541 = !{!542, !543, !544}
!542 = !DIEnumerator(name: "NORMAL", value: 0)
!543 = !DIEnumerator(name: "MAXIMIZED", value: 1)
!544 = !DIEnumerator(name: "MINIMIZED", value: 2)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "_fDrawMode", scope: !133, file: !2, line: 75, baseType: !546, size: 32, align: 32, offset: 2592)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FormDrawMode", scope: !133, file: !2, line: 90, baseType: !62, size: 32, align: 32, elements: !547)
!547 = !{!548, !549, !550}
!548 = !DIEnumerator(name: "DEFAULT", value: 0)
!549 = !DIEnumerator(name: "FLAT_COLOR", value: 1)
!550 = !DIEnumerator(name: "GRADIENT", value: 2)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "topMost", scope: !133, file: !2, line: 76, baseType: !11, size: 8, align: 8, offset: 2624)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "createChilds", scope: !133, file: !2, line: 77, baseType: !11, size: 8, align: 8, offset: 2632)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "maximizeBox", scope: !133, file: !2, line: 78, baseType: !11, size: 8, align: 8, offset: 2640)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "minimizeBox", scope: !133, file: !2, line: 79, baseType: !11, size: 8, align: 8, offset: 2648)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_isLoaded", scope: !133, file: !2, line: 80, baseType: !11, size: 8, align: 8, offset: 2656)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "_isMainWindow", scope: !133, file: !2, line: 81, baseType: !11, size: 8, align: 8, offset: 2664)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "_isMouseTracking", scope: !133, file: !2, line: 82, baseType: !11, size: 8, align: 8, offset: 2672)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "_isSizing", scope: !133, file: !2, line: 83, baseType: !11, size: 8, align: 8, offset: 2680)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "_menuMapInited", scope: !133, file: !2, line: 84, baseType: !11, size: 8, align: 8, offset: 2688)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "_menubarCreated", scope: !133, file: !2, line: 85, baseType: !11, size: 8, align: 8, offset: 2696)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_formID", scope: !133, file: !2, line: 86, baseType: !62, size: 32, align: 32, offset: 2720)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "_comboList", scope: !133, file: !2, line: 87, baseType: !563, size: 320, align: 64, offset: 2752)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "CmbList", scope: !2, file: !2, line: 65, baseType: !564, align: 8)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !2, file: !2, line: 18, size: 320, align: 64, elements: !565, identifier: "std_collections_list$cforms.ComboInfo$.List")
!565 = !{!566, !567, !568, !569}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !564, file: !2, line: 20, baseType: !44, size: 64, align: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !564, file: !2, line: 21, baseType: !44, size: 64, align: 64, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !564, file: !2, line: 22, baseType: !16, size: 128, align: 64, offset: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !564, file: !2, line: 23, baseType: !570, size: 64, align: 64, offset: 256)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !571, size: 64, align: 64, dwarfAddressSpace: 0)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 65, baseType: !572, align: 8)
!572 = !DICompositeType(tag: DW_TAG_structure_type, name: "ComboInfo", scope: !2, file: !2, line: 61, size: 128, align: 64, elements: !573, identifier: "cforms.ComboInfo")
!573 = !{!574, !575}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "listHwnd", scope: !572, file: !2, line: 61, baseType: !94, size: 64, align: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "cmbHwnd", scope: !572, file: !2, line: 61, baseType: !94, size: 64, align: 64, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "_menuItemList", scope: !133, file: !2, line: 88, baseType: !577, size: 320, align: 64, offset: 3072)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuItems", scope: !2, file: !2, line: 66, baseType: !578, align: 8)
!578 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !2, file: !2, line: 18, size: 320, align: 64, elements: !579, identifier: "std_collections_list$cforms.MenuInfo$.List")
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !578, file: !2, line: 20, baseType: !44, size: 64, align: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !578, file: !2, line: 21, baseType: !44, size: 64, align: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !578, file: !2, line: 22, baseType: !16, size: 128, align: 64, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !578, file: !2, line: 23, baseType: !584, size: 64, align: 64, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !585, size: 64, align: 64, dwarfAddressSpace: 0)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 66, baseType: !586, align: 8)
!586 = !DICompositeType(tag: DW_TAG_structure_type, name: "MenuInfo", scope: !2, file: !2, line: 62, size: 128, align: 64, elements: !587, identifier: "cforms.MenuInfo")
!587 = !{!588, !589}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "menuID", scope: !586, file: !2, line: 62, baseType: !3, size: 32, align: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "pMenuItem", scope: !586, file: !2, line: 62, baseType: !48, size: 64, align: 64, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "controls", scope: !133, file: !2, line: 89, baseType: !591, size: 320, align: 64, offset: 3392)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "ControlList", scope: !2, file: !2, line: 56, baseType: !592, align: 8)
!592 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !2, file: !2, line: 18, size: 320, align: 64, elements: !593, identifier: "std_collections_list$p$cforms.Control$.List")
!593 = !{!594, !595, !596, !597}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !592, file: !2, line: 20, baseType: !44, size: 64, align: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !592, file: !2, line: 21, baseType: !44, size: 64, align: 64, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !592, file: !2, line: 22, baseType: !16, size: 128, align: 64, offset: 128)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !592, file: !2, line: 23, baseType: !598, size: 64, align: 64, offset: 256)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !599, size: 64, align: 64, dwarfAddressSpace: 0)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 56, baseType: !178, align: 8)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_timerList", scope: !133, file: !2, line: 90, baseType: !601, size: 320, align: 64, offset: 3712)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerList", scope: !2, file: !2, line: 64, baseType: !602, align: 8)
!602 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !2, file: !2, line: 18, size: 320, align: 64, elements: !603, identifier: "std_collections_list$cforms.TimerInfo$.List")
!603 = !{!604, !605, !606, !607}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !602, file: !2, line: 20, baseType: !44, size: 64, align: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !602, file: !2, line: 21, baseType: !44, size: 64, align: 64, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !602, file: !2, line: 22, baseType: !16, size: 128, align: 64, offset: 128)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !602, file: !2, line: 23, baseType: !608, size: 64, align: 64, offset: 256)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !609, size: 64, align: 64, dwarfAddressSpace: 0)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 64, baseType: !610, align: 8)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "TimerInfo", scope: !2, file: !2, line: 60, size: 128, align: 64, elements: !611, identifier: "cforms.TimerInfo")
!611 = !{!612, !614}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "timerID", scope: !610, file: !2, line: 60, baseType: !613, size: 64, align: 64)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uintptr", scope: !2, file: !2, line: 31, baseType: !45, align: 8)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "pTimer", scope: !610, file: !2, line: 60, baseType: !615, size: 64, align: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Timer*", baseType: !616, size: 64, align: 64, dwarfAddressSpace: 0)
!616 = !DICompositeType(tag: DW_TAG_structure_type, name: "Timer", scope: !2, file: !2, line: 20, size: 320, align: 64, elements: !617, identifier: "cforms.Timer")
!617 = !{!618, !619, !620, !621, !622}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !616, file: !2, line: 22, baseType: !3, size: 32, align: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "onTick", scope: !616, file: !2, line: 23, baseType: !262, size: 64, align: 64, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "_idNum", scope: !616, file: !2, line: 24, baseType: !613, size: 64, align: 64, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "_parentHwnd", scope: !616, file: !2, line: 25, baseType: !94, size: 64, align: 64, offset: 192)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "_isEnabled", scope: !616, file: !2, line: 26, baseType: !11, size: 8, align: 8, offset: 256)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "hinst", scope: !133, file: !2, line: 91, baseType: !624, size: 64, align: 64, offset: 4032)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hinstance", scope: !2, file: !2, line: 15, baseType: !56, align: 8)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "menubar", scope: !133, file: !2, line: 92, baseType: !126, size: 64, align: 64, offset: 4096)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "_menuFont", scope: !133, file: !2, line: 93, baseType: !58, size: 320, align: 64, offset: 4160)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "_menuGrayBrush", scope: !133, file: !2, line: 94, baseType: !257, size: 64, align: 64, offset: 4480)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_menuDefBgBrush", scope: !133, file: !2, line: 95, baseType: !257, size: 64, align: 64, offset: 4544)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_menuHotBgBrush", scope: !133, file: !2, line: 96, baseType: !257, size: 64, align: 64, offset: 4608)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "_menuFrameBrush", scope: !133, file: !2, line: 97, baseType: !257, size: 64, align: 64, offset: 4672)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_menuGrayCref", scope: !133, file: !2, line: 98, baseType: !100, size: 32, align: 32, offset: 4736)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "onLoad", scope: !133, file: !2, line: 101, baseType: !262, size: 64, align: 64, offset: 4800)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "onActivate", scope: !133, file: !2, line: 102, baseType: !262, size: 64, align: 64, offset: 4864)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "onDeActivate", scope: !133, file: !2, line: 103, baseType: !262, size: 64, align: 64, offset: 4928)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "onMoving", scope: !133, file: !2, line: 104, baseType: !262, size: 64, align: 64, offset: 4992)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "onMoved", scope: !133, file: !2, line: 105, baseType: !262, size: 64, align: 64, offset: 5056)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "onMinimized", scope: !133, file: !2, line: 106, baseType: !262, size: 64, align: 64, offset: 5120)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "onMaximized", scope: !133, file: !2, line: 107, baseType: !262, size: 64, align: 64, offset: 5184)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "onRestored", scope: !133, file: !2, line: 108, baseType: !262, size: 64, align: 64, offset: 5248)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "onClosing", scope: !133, file: !2, line: 109, baseType: !262, size: 64, align: 64, offset: 5312)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "onClosed", scope: !133, file: !2, line: 110, baseType: !262, size: 64, align: 64, offset: 5376)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "onSizing", scope: !133, file: !2, line: 113, baseType: !643, size: 64, align: 64, offset: 5440)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "SizeEventHandler", scope: !2, file: !2, line: 6, baseType: !644, align: 8)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "SizeEventHandler", baseType: !645, size: 64, align: 64, dwarfAddressSpace: 0)
!645 = !DISubroutineType(types: !646)
!646 = !{null, !178, !647}
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "SizeEventArgs*", baseType: !648, size: 64, align: 64, dwarfAddressSpace: 0)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "SizeEventArgs", scope: !2, file: !2, line: 39, size: 256, align: 32, elements: !649, identifier: "cforms.SizeEventArgs")
!649 = !{!650, !651, !659, !670}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "eventArgs", scope: !648, file: !2, line: 41, baseType: !236, size: 8, align: 8)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "formRect", scope: !648, file: !2, line: 42, baseType: !652, size: 128, align: 32, offset: 32)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rect", scope: !648, file: !2, line: 62, size: 128, align: 32, elements: !653, identifier: "cforms.Rect")
!653 = !{!654, !656, !657, !658}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !652, file: !2, line: 63, baseType: !655, size: 32, align: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "Long", scope: !2, file: !2, line: 24, baseType: !62, align: 4)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !652, file: !2, line: 64, baseType: !655, size: 32, align: 32, offset: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !652, file: !2, line: 65, baseType: !655, size: 32, align: 32, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !652, file: !2, line: 66, baseType: !655, size: 32, align: 32, offset: 96)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "sizedOn", scope: !648, file: !2, line: 43, baseType: !660, size: 32, align: 32, offset: 160)
!660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SizedPosition", scope: !648, file: !2, line: 123, baseType: !62, size: 32, align: 32, elements: !661)
!661 = !{!189, !662, !663, !664, !665, !666, !667, !668, !669}
!662 = !DIEnumerator(name: "LEFTEDGE", value: 1)
!663 = !DIEnumerator(name: "RIGHTEDGE", value: 2)
!664 = !DIEnumerator(name: "TOPEDGE", value: 3)
!665 = !DIEnumerator(name: "TOPLEFTCORNER", value: 4)
!666 = !DIEnumerator(name: "TOPRIGHTCORNER", value: 5)
!667 = !DIEnumerator(name: "BOTTOMEDGE", value: 6)
!668 = !DIEnumerator(name: "BOTTOMLEFTCORNER", value: 7)
!669 = !DIEnumerator(name: "BOTTOMRIGHTCORNER", value: 8)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "clientArea", scope: !648, file: !2, line: 44, baseType: !671, size: 64, align: 32, offset: 192)
!671 = !DICompositeType(tag: DW_TAG_structure_type, name: "Area", scope: !648, file: !2, line: 17, size: 64, align: 32, elements: !672, identifier: "cforms.Area")
!672 = !{!673, !674}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !671, file: !2, line: 19, baseType: !62, size: 32, align: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !671, file: !2, line: 20, baseType: !62, size: 32, align: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "onSized", scope: !133, file: !2, line: 114, baseType: !643, size: 64, align: 64, offset: 5504)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "onThreadMsg", scope: !133, file: !2, line: 115, baseType: !677, size: 64, align: 64, offset: 5568)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadMsgHandler", scope: !2, file: !2, line: 9, baseType: !678, align: 8)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ThreadMsgHandler", baseType: !679, size: 64, align: 64, dwarfAddressSpace: 0)
!679 = !DISubroutineType(types: !680)
!680 = !{null, !45, !171}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "_menuGrayCref", scope: !127, file: !2, line: 103, baseType: !100, size: 32, align: 32, offset: 896)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "_menuDefBgBrush", scope: !127, file: !2, line: 104, baseType: !257, size: 64, align: 64, offset: 960)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "_menuHotBgBrush", scope: !127, file: !2, line: 105, baseType: !257, size: 64, align: 64, offset: 1024)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "_menuFrameBrush", scope: !127, file: !2, line: 106, baseType: !257, size: 64, align: 64, offset: 1088)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "_menuGrayBrush", scope: !127, file: !2, line: 107, baseType: !257, size: 64, align: 64, offset: 1152)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "onClick", scope: !49, file: !2, line: 136, baseType: !687, size: 64, align: 64, offset: 1664)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuEventHandler", scope: !2, file: !2, line: 11, baseType: !688, align: 8)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MenuEventHandler", baseType: !689, size: 64, align: 64, dwarfAddressSpace: 0)
!689 = !DISubroutineType(types: !690)
!690 = !{null, !48, !235}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "onPopup", scope: !49, file: !2, line: 137, baseType: !687, size: 64, align: 64, offset: 1728)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "onCloseup", scope: !49, file: !2, line: 138, baseType: !687, size: 64, align: 64, offset: 1792)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "onFocus", scope: !49, file: !2, line: 139, baseType: !687, size: 64, align: 64, offset: 1856)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !32, file: !2, line: 26, baseType: !31, size: 64, align: 64, offset: 256)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !27, baseType: !44, size: 64, align: 64, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !24, file: !2, line: 32, baseType: !16, size: 128, align: 64, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !24, file: !2, line: 33, baseType: !3, size: 32, align: 32, offset: 256)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !24, file: !2, line: 34, baseType: !3, size: 32, align: 32, offset: 288)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "load_factor", scope: !24, file: !2, line: 35, baseType: !8, size: 32, align: 32, offset: 320)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "dummy", linkageName: "std_collections_map$String$p$cforms.MenuItem$.dummy.29147", scope: !2, file: !2, line: 592, type: !62, isLocal: true, isDefinition: true, align: 4)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "LINKEDONHEAP", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LINKEDONHEAP", scope: !704, file: !704, line: 11, type: !705, isLocal: false, isDefinition: true, align: 8)
!704 = !DIFile(filename: "linked_hashmap.c3", directory: "C:/Compilers/C3/lib/std/collections")
!705 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkedHashMap", scope: !704, file: !704, line: 23, size: 576, align: 64, elements: !706, identifier: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap")
!706 = !{!707, !722, !723, !724, !725, !726, !727}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !705, file: !704, line: 25, baseType: !708, size: 128, align: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkedEntry*[]", size: 128, align: 64, elements: !709, identifier: "LinkedEntry*[]")
!709 = !{!710, !721}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !708, baseType: !711, size: 64, align: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LinkedEntry**", baseType: !712, size: 64, align: 64, dwarfAddressSpace: 0)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LinkedEntry*", baseType: !713, size: 64, align: 64, dwarfAddressSpace: 0)
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkedEntry", scope: !704, file: !704, line: 13, size: 448, align: 64, elements: !714, identifier: "std_collections_map$String$p$cforms.MenuItem$.LinkedEntry")
!714 = !{!715, !716, !717, !718, !719, !720}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !713, file: !704, line: 15, baseType: !3, size: 32, align: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !713, file: !704, line: 16, baseType: !36, size: 128, align: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !713, file: !704, line: 17, baseType: !47, size: 64, align: 64, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !713, file: !704, line: 18, baseType: !712, size: 64, align: 64, offset: 256)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !713, file: !704, line: 19, baseType: !712, size: 64, align: 64, offset: 320)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !713, file: !704, line: 20, baseType: !712, size: 64, align: 64, offset: 384)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !708, baseType: !44, size: 64, align: 64, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !705, file: !704, line: 26, baseType: !16, size: 128, align: 64, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !705, file: !704, line: 27, baseType: !44, size: 64, align: 64, offset: 256)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !705, file: !704, line: 28, baseType: !44, size: 64, align: 64, offset: 320)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "load_factor", scope: !705, file: !704, line: 29, baseType: !8, size: 32, align: 32, offset: 384)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !705, file: !704, line: 30, baseType: !712, size: 64, align: 64, offset: 448)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !705, file: !704, line: 31, baseType: !712, size: 64, align: 64, offset: 512)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "dummy", linkageName: "std_collections_map$String$p$cforms.MenuItem$.dummy.29380", scope: !704, file: !704, line: 645, type: !62, isLocal: true, isDefinition: true, align: 4)
!730 = !{i32 1, !"CodeView", i32 1}
!731 = !{i32 2, !"Debug Info Version", i32 3}
!732 = !{i32 2, !"wchar_size", i32 2}
!733 = !{i32 4, !"PIC Level", i32 2}
!734 = !{i32 1, !"uwtable", i32 2}
!735 = !{i32 1, !"MaxTLSAlign", i32 65536}
!736 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "c3c", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !737, globals: !738, splitDebugInlining: false)
!737 = !{!64, !117, !139, !187, !310, !337, !517, !530, !540, !546, !660}
!738 = !{!0, !4, !6, !9, !12, !14, !22, !700, !702, !728}
!739 = distinct !DISubprogram(name: "init", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.init", scope: !2, file: !2, line: 46, type: !740, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!740 = !DISubroutineType(types: !741)
!741 = !{!742, !742, !16, !3, !8}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "HashMap*", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!743 = !{}
!744 = !DILocation(line: 47, scope: !739)
!745 = !DILocalVariable(name: "self", arg: 1, scope: !739, file: !2, line: 46, type: !742)
!746 = !DILocation(line: 46, scope: !739)
!747 = !DILocalVariable(name: "allocator", arg: 2, scope: !739, file: !2, line: 46, type: !16)
!748 = !DILocalVariable(name: "capacity", arg: 3, scope: !739, file: !2, line: 46, type: !3)
!749 = !DILocalVariable(name: "load_factor", arg: 4, scope: !739, file: !2, line: 46, type: !8)
!750 = !DILocation(line: 41, scope: !751)
!751 = distinct !DILexicalBlock(scope: !739, file: !2, line: 47, column: 1)
!752 = !DILocation(line: 42, scope: !751)
!753 = !DILocation(line: 43, scope: !751)
!754 = !DILocation(line: 44, scope: !751)
!755 = !DILocalVariable(name: "y", scope: !756, file: !2, line: 980, type: !3, align: 4)
!756 = distinct !DISubprogram(name: "next_power_of_2", linkageName: "next_power_of_2", scope: !757, file: !757, line: 978, scopeLine: 978, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!757 = !DIFile(filename: "math.c3", directory: "C:/Compilers/C3/lib/std/math")
!758 = !DILocation(line: 980, scope: !756, inlinedAt: !759)
!759 = !DILocation(line: 48, scope: !739)
!760 = !DILocation(line: 981, scope: !756, inlinedAt: !759)
!761 = !DILocation(line: 981, scope: !762, inlinedAt: !759)
!762 = distinct !DILexicalBlock(scope: !756, file: !757, line: 981, column: 2)
!763 = !DILocation(line: 982, scope: !756, inlinedAt: !759)
!764 = !DILocation(line: 49, scope: !739)
!765 = !DILocation(line: 50, scope: !739)
!766 = !DILocation(line: 51, scope: !739)
!767 = !DILocation(line: 52, scope: !739)
!768 = !DILocation(line: 270, scope: !769, inlinedAt: !771)
!769 = distinct !DISubprogram(name: "new_array_try", linkageName: "new_array_try", scope: !770, file: !770, line: 268, scopeLine: 268, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!770 = !DIFile(filename: "mem_allocator.c3", directory: "C:/Compilers/C3/lib/std/core")
!771 = !DILocation(line: 262, scope: !772, inlinedAt: !767)
!772 = distinct !DISubprogram(name: "new_array", linkageName: "new_array", scope: !770, file: !770, line: 260, scopeLine: 260, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!773 = !DILocation(line: 97, scope: !774, inlinedAt: !768)
!774 = distinct !DISubprogram(name: "calloc_try", linkageName: "calloc_try", scope: !770, file: !770, line: 95, scopeLine: 95, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!775 = !DILocation(line: 98, scope: !774, inlinedAt: !768)
!776 = !DILocation(line: 38, scope: !774, inlinedAt: !768)
!777 = !DILocation(line: 975, scope: !778, inlinedAt: !776)
!778 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!779 = !DILocation(line: 53, scope: !739)
!780 = distinct !DISubprogram(name: "tinit", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit", scope: !2, file: !2, line: 62, type: !781, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!781 = !DISubroutineType(types: !782)
!782 = !{!742, !742, !3, !8}
!783 = !DILocation(line: 63, scope: !780)
!784 = !DILocalVariable(name: "self", arg: 1, scope: !780, file: !2, line: 62, type: !742)
!785 = !DILocation(line: 62, scope: !780)
!786 = !DILocalVariable(name: "capacity", arg: 2, scope: !780, file: !2, line: 62, type: !3)
!787 = !DILocalVariable(name: "load_factor", arg: 3, scope: !780, file: !2, line: 62, type: !8)
!788 = !DILocation(line: 57, scope: !789)
!789 = distinct !DILexicalBlock(scope: !780, file: !2, line: 63, column: 1)
!790 = !DILocation(line: 58, scope: !789)
!791 = !DILocation(line: 59, scope: !789)
!792 = !DILocation(line: 60, scope: !789)
!793 = !DILocation(line: 64, scope: !780)
!794 = !DILocation(line: 42, scope: !780)
!795 = !DILocation(line: 43, scope: !780)
!796 = distinct !DISubprogram(name: "init_from_keys_and_values", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_keys_and_values", scope: !2, file: !2, line: 106, type: !797, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!797 = !DISubroutineType(types: !798)
!798 = !{!742, !742, !16, !799, !804, !3, !8}
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "String[]", size: 128, align: 64, elements: !800, identifier: "String[]")
!800 = !{!801, !803}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !799, baseType: !802, size: 64, align: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "String*", baseType: !37, size: 64, align: 64, dwarfAddressSpace: 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !799, baseType: !44, size: 64, align: 64, offset: 64)
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "MenuItem*[]", size: 128, align: 64, elements: !805, identifier: "MenuItem*[]")
!805 = !{!806, !808}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !804, baseType: !807, size: 64, align: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MenuItem**", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !804, baseType: !44, size: 64, align: 64, offset: 64)
!809 = !DILocation(line: 107, scope: !796)
!810 = !DILocalVariable(name: "self", arg: 1, scope: !796, file: !2, line: 106, type: !742)
!811 = !DILocation(line: 106, scope: !796)
!812 = !DILocalVariable(name: "allocator", arg: 2, scope: !796, file: !2, line: 106, type: !16)
!813 = !DILocalVariable(name: "keys", arg: 3, scope: !796, file: !2, line: 106, type: !814)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key[]", size: 128, align: 64, elements: !815, identifier: "Key[]")
!815 = !{!816, !818}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !814, baseType: !817, size: 64, align: 64)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Key*", baseType: !36, size: 64, align: 64, dwarfAddressSpace: 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !814, baseType: !44, size: 64, align: 64, offset: 64)
!819 = !DILocalVariable(name: "values", arg: 4, scope: !796, file: !2, line: 106, type: !820)
!820 = !DICompositeType(tag: DW_TAG_structure_type, name: "Value[]", size: 128, align: 64, elements: !821, identifier: "Value[]")
!821 = !{!822, !824}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !820, baseType: !823, size: 64, align: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Value*", baseType: !47, size: 64, align: 64, dwarfAddressSpace: 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !820, baseType: !44, size: 64, align: 64, offset: 64)
!825 = !DILocalVariable(name: "capacity", arg: 5, scope: !796, file: !2, line: 106, type: !3)
!826 = !DILocalVariable(name: "load_factor", arg: 6, scope: !796, file: !2, line: 106, type: !8)
!827 = !DILocation(line: 100, scope: !828)
!828 = distinct !DILexicalBlock(scope: !796, file: !2, line: 107, column: 1)
!829 = !DILocation(line: 101, scope: !828)
!830 = !DILocation(line: 102, scope: !828)
!831 = !DILocation(line: 103, scope: !828)
!832 = !DILocation(line: 104, scope: !828)
!833 = !DILocation(line: 108, scope: !796)
!834 = !DILocation(line: 109, scope: !796)
!835 = !DILocation(line: 42, scope: !796)
!836 = !DILocation(line: 43, scope: !796)
!837 = !DILocalVariable(name: "i", scope: !838, file: !2, line: 110, type: !44, align: 8)
!838 = distinct !DILexicalBlock(scope: !796, file: !2, line: 110, column: 2)
!839 = !DILocation(line: 110, scope: !838)
!840 = !DILocation(line: 112, scope: !841)
!841 = distinct !DILexicalBlock(scope: !838, file: !2, line: 111, column: 2)
!842 = !DILocation(line: 114, scope: !796)
!843 = distinct !DISubprogram(name: "tinit_from_keys_and_values", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit_from_keys_and_values", scope: !2, file: !2, line: 127, type: !844, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!844 = !DISubroutineType(types: !845)
!845 = !{!742, !742, !799, !804, !3, !8}
!846 = !DILocation(line: 128, scope: !843)
!847 = !DILocalVariable(name: "self", arg: 1, scope: !843, file: !2, line: 127, type: !742)
!848 = !DILocation(line: 127, scope: !843)
!849 = !DILocalVariable(name: "keys", arg: 2, scope: !843, file: !2, line: 127, type: !814)
!850 = !DILocalVariable(name: "values", arg: 3, scope: !843, file: !2, line: 127, type: !820)
!851 = !DILocalVariable(name: "capacity", arg: 4, scope: !843, file: !2, line: 127, type: !3)
!852 = !DILocalVariable(name: "load_factor", arg: 5, scope: !843, file: !2, line: 127, type: !8)
!853 = !DILocation(line: 121, scope: !854)
!854 = distinct !DILexicalBlock(scope: !843, file: !2, line: 128, column: 1)
!855 = !DILocation(line: 122, scope: !854)
!856 = !DILocation(line: 123, scope: !854)
!857 = !DILocation(line: 124, scope: !854)
!858 = !DILocation(line: 125, scope: !854)
!859 = !DILocation(line: 129, scope: !843)
!860 = !DILocation(line: 100, scope: !843)
!861 = !DILocation(line: 102, scope: !843)
!862 = !DILocation(line: 103, scope: !843)
!863 = distinct !DISubprogram(name: "is_initialized", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.is_initialized", scope: !2, file: !2, line: 138, type: !864, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!864 = !DISubroutineType(types: !865)
!865 = !{!11, !742}
!866 = !DILocation(line: 139, scope: !863)
!867 = !DILocalVariable(name: "map", arg: 1, scope: !863, file: !2, line: 138, type: !742)
!868 = !DILocation(line: 138, scope: !863)
!869 = !DILocation(line: 140, scope: !863)
!870 = distinct !DISubprogram(name: "init_from_map", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.init_from_map", scope: !2, file: !2, line: 148, type: !871, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!871 = !DISubroutineType(types: !872)
!872 = !{!742, !742, !16, !742}
!873 = !DILocation(line: 149, scope: !870)
!874 = !DILocalVariable(name: "self", arg: 1, scope: !870, file: !2, line: 148, type: !742)
!875 = !DILocation(line: 148, scope: !870)
!876 = !DILocalVariable(name: "allocator", arg: 2, scope: !870, file: !2, line: 148, type: !16)
!877 = !DILocalVariable(name: "other_map", arg: 3, scope: !870, file: !2, line: 148, type: !742)
!878 = !DILocation(line: 146, scope: !879)
!879 = distinct !DILexicalBlock(scope: !870, file: !2, line: 149, column: 1)
!880 = !DILocation(line: 150, scope: !870)
!881 = !DILocation(line: 42, scope: !870)
!882 = !DILocation(line: 43, scope: !870)
!883 = !DILocation(line: 151, scope: !870)
!884 = !DILocation(line: 152, scope: !870)
!885 = distinct !DISubprogram(name: "tinit_from_map", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.tinit_from_map", scope: !2, file: !2, line: 159, type: !886, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!886 = !DISubroutineType(types: !887)
!887 = !{!742, !742, !742}
!888 = !DILocation(line: 160, scope: !885)
!889 = !DILocalVariable(name: "map", arg: 1, scope: !885, file: !2, line: 159, type: !742)
!890 = !DILocation(line: 159, scope: !885)
!891 = !DILocalVariable(name: "other_map", arg: 2, scope: !885, file: !2, line: 159, type: !742)
!892 = !DILocation(line: 157, scope: !893)
!893 = distinct !DILexicalBlock(scope: !885, file: !2, line: 160, column: 1)
!894 = !DILocation(line: 161, scope: !885)
!895 = !DILocation(line: 146, scope: !885)
!896 = distinct !DISubprogram(name: "is_empty", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.is_empty", scope: !2, file: !2, line: 164, type: !864, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!897 = !DILocation(line: 165, scope: !896)
!898 = !DILocalVariable(name: "map", arg: 1, scope: !896, file: !2, line: 164, type: !742)
!899 = !DILocation(line: 164, scope: !896)
!900 = !DILocation(line: 166, scope: !896)
!901 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.len", scope: !2, file: !2, line: 169, type: !902, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!902 = !DISubroutineType(types: !903)
!903 = !{!44, !742}
!904 = !DILocation(line: 170, scope: !901)
!905 = !DILocalVariable(name: "map", arg: 1, scope: !901, file: !2, line: 169, type: !742)
!906 = !DILocation(line: 169, scope: !901)
!907 = !DILocation(line: 171, scope: !901)
!908 = distinct !DISubprogram(name: "get_ref", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.get_ref", scope: !2, file: !2, line: 174, type: !909, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!909 = !DISubroutineType(types: !910)
!910 = !{!911, !912, !742, !37}
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "fault", baseType: !171)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Value**", baseType: !823, size: 64, align: 64, dwarfAddressSpace: 0)
!913 = !DILocation(line: 175, scope: !908)
!914 = !DILocalVariable(name: "map", arg: 1, scope: !908, file: !2, line: 174, type: !742)
!915 = !DILocation(line: 174, scope: !908)
!916 = !DILocalVariable(name: "key", arg: 2, scope: !908, file: !2, line: 174, type: !36)
!917 = !DILocation(line: 176, scope: !908)
!918 = !DILocalVariable(name: "hash", scope: !908, file: !2, line: 177, type: !3, align: 4)
!919 = !DILocation(line: 177, scope: !908)
!920 = !DILocation(line: 568, scope: !921, inlinedAt: !919)
!921 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!922 = !DIFile(filename: "builtin.c3", directory: "C:/Compilers/C3/lib/std/core")
!923 = !DILocalVariable(name: "e", scope: !924, file: !2, line: 178, type: !31, align: 8)
!924 = distinct !DILexicalBlock(scope: !908, file: !2, line: 178, column: 2)
!925 = !DILocation(line: 178, scope: !924)
!926 = !DILocation(line: 589, scope: !927, inlinedAt: !925)
!927 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!928 = !DILocation(line: 180, scope: !929)
!929 = distinct !DILexicalBlock(scope: !924, file: !2, line: 179, column: 2)
!930 = !DILocation(line: 93, scope: !931, inlinedAt: !928)
!931 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!932 = !DIFile(filename: "builtin_comparison.c3", directory: "C:/Compilers/C3/lib/std/core")
!933 = !DILocation(line: 182, scope: !908)
!934 = distinct !DISubprogram(name: "get_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.get_entry", scope: !2, file: !2, line: 185, type: !935, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!935 = !DISubroutineType(types: !936)
!936 = !{!911, !30, !742, !37}
!937 = !DILocation(line: 186, scope: !934)
!938 = !DILocalVariable(name: "map", arg: 1, scope: !934, file: !2, line: 185, type: !742)
!939 = !DILocation(line: 185, scope: !934)
!940 = !DILocalVariable(name: "key", arg: 2, scope: !934, file: !2, line: 185, type: !36)
!941 = !DILocation(line: 187, scope: !934)
!942 = !DILocalVariable(name: "hash", scope: !934, file: !2, line: 188, type: !3, align: 4)
!943 = !DILocation(line: 188, scope: !934)
!944 = !DILocation(line: 568, scope: !945, inlinedAt: !943)
!945 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!946 = !DILocalVariable(name: "e", scope: !947, file: !2, line: 189, type: !31, align: 8)
!947 = distinct !DILexicalBlock(scope: !934, file: !2, line: 189, column: 2)
!948 = !DILocation(line: 189, scope: !947)
!949 = !DILocation(line: 589, scope: !950, inlinedAt: !948)
!950 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!951 = !DILocation(line: 191, scope: !952)
!952 = distinct !DILexicalBlock(scope: !947, file: !2, line: 190, column: 2)
!953 = !DILocation(line: 93, scope: !954, inlinedAt: !951)
!954 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!955 = !DILocation(line: 193, scope: !934)
!956 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.get", scope: !2, file: !2, line: 219, type: !957, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!957 = !DISubroutineType(types: !958)
!958 = !{!911, !823, !742, !37}
!959 = !DILocation(line: 220, scope: !956)
!960 = !DILocalVariable(name: "map", arg: 1, scope: !956, file: !2, line: 219, type: !742)
!961 = !DILocation(line: 219, scope: !956)
!962 = !DILocalVariable(name: "key", arg: 2, scope: !956, file: !2, line: 219, type: !36)
!963 = !DILocation(line: 221, scope: !956)
!964 = distinct !DISubprogram(name: "has_key", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.has_key", scope: !2, file: !2, line: 224, type: !965, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!965 = !DISubroutineType(types: !966)
!966 = !{!11, !742, !37}
!967 = !DILocation(line: 225, scope: !964)
!968 = !DILocalVariable(name: "map", arg: 1, scope: !964, file: !2, line: 224, type: !742)
!969 = !DILocation(line: 224, scope: !964)
!970 = !DILocalVariable(name: "key", arg: 2, scope: !964, file: !2, line: 224, type: !36)
!971 = !DILocation(line: 434, scope: !972, inlinedAt: !973)
!972 = distinct !DISubprogram(name: "@ok", linkageName: "@ok", scope: !922, file: !922, line: 432, scopeLine: 432, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!973 = !DILocation(line: 226, scope: !964)
!974 = !DILocation(line: 435, scope: !972, inlinedAt: !973)
!975 = distinct !DISubprogram(name: "set", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.set", scope: !2, file: !2, line: 229, type: !976, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!976 = !DISubroutineType(types: !977)
!977 = !{!11, !742, !37, !48}
!978 = !DILocation(line: 230, scope: !975)
!979 = !DILocalVariable(name: "map", arg: 1, scope: !975, file: !2, line: 229, type: !742)
!980 = !DILocation(line: 229, scope: !975)
!981 = !DILocalVariable(name: "key", arg: 2, scope: !975, file: !2, line: 229, type: !36)
!982 = !DILocalVariable(name: "value", arg: 3, scope: !975, file: !2, line: 229, type: !47)
!983 = !DILocation(line: 232, scope: !984)
!984 = distinct !DILexicalBlock(scope: !975, file: !2, line: 232, column: 5)
!985 = !DILocation(line: 234, scope: !984)
!986 = !DILocation(line: 235, scope: !987)
!987 = distinct !DILexicalBlock(scope: !984, file: !2, line: 235, column: 10)
!988 = !DILocation(line: 43, scope: !987)
!989 = !DILocation(line: 236, scope: !984)
!990 = !DILocation(line: 237, scope: !991)
!991 = distinct !DILexicalBlock(scope: !984, file: !2, line: 237, column: 10)
!992 = !DILocation(line: 59, scope: !991)
!993 = !DILocation(line: 239, scope: !994)
!994 = distinct !DILexicalBlock(scope: !984, file: !2, line: 239, column: 7)
!995 = !DILocalVariable(name: "hash", scope: !975, file: !2, line: 241, type: !3, align: 4)
!996 = !DILocation(line: 241, scope: !975)
!997 = !DILocation(line: 568, scope: !998, inlinedAt: !996)
!998 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!999 = !DILocalVariable(name: "index", scope: !975, file: !2, line: 242, type: !3, align: 4)
!1000 = !DILocation(line: 242, scope: !975)
!1001 = !DILocation(line: 589, scope: !1002, inlinedAt: !1000)
!1002 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1003 = !DILocalVariable(name: "e", scope: !1004, file: !2, line: 243, type: !31, align: 8)
!1004 = distinct !DILexicalBlock(scope: !975, file: !2, line: 243, column: 2)
!1005 = !DILocation(line: 243, scope: !1004)
!1006 = !DILocation(line: 245, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !1004, file: !2, line: 244, column: 2)
!1008 = !DILocation(line: 93, scope: !1009, inlinedAt: !1006)
!1009 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1010 = !DILocation(line: 247, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1007, file: !2, line: 246, column: 3)
!1012 = !DILocation(line: 248, scope: !1011)
!1013 = !DILocation(line: 251, scope: !975)
!1014 = !DILocation(line: 252, scope: !975)
!1015 = distinct !DISubprogram(name: "remove", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.remove", scope: !2, file: !2, line: 255, type: !1016, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!911, !19, !742, !37}
!1018 = !DILocation(line: 256, scope: !1015)
!1019 = !DILocalVariable(name: "map", arg: 1, scope: !1015, file: !2, line: 255, type: !742)
!1020 = !DILocation(line: 255, scope: !1015)
!1021 = !DILocalVariable(name: "key", arg: 2, scope: !1015, file: !2, line: 255, type: !36)
!1022 = !DILocation(line: 257, scope: !1015)
!1023 = distinct !DISubprogram(name: "clear", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.clear", scope: !2, file: !2, line: 260, type: !1024, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !742}
!1026 = !DILocation(line: 261, scope: !1023)
!1027 = !DILocalVariable(name: "map", arg: 1, scope: !1023, file: !2, line: 260, type: !742)
!1028 = !DILocation(line: 260, scope: !1023)
!1029 = !DILocation(line: 262, scope: !1023)
!1030 = !DILocation(line: 263, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1023, file: !2, line: 263, column: 2)
!1032 = !DILocalVariable(name: ".temp", scope: !1031, file: !2, line: 263, type: !44, align: 8)
!1033 = !DILocalVariable(name: "entry_ref", scope: !1034, file: !2, line: 263, type: !30, align: 8)
!1034 = distinct !DILexicalBlock(scope: !1031, file: !2, line: 264, column: 2)
!1035 = !DILocation(line: 263, scope: !1034)
!1036 = !DILocalVariable(name: "entry", scope: !1037, file: !2, line: 265, type: !31, align: 8)
!1037 = distinct !DILexicalBlock(scope: !1034, file: !2, line: 264, column: 2)
!1038 = !DILocation(line: 265, scope: !1037)
!1039 = !DILocation(line: 266, scope: !1037)
!1040 = !DILocalVariable(name: "next", scope: !1037, file: !2, line: 267, type: !31, align: 8)
!1041 = !DILocation(line: 267, scope: !1037)
!1042 = !DILocation(line: 268, scope: !1037)
!1043 = !DILocation(line: 268, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1037, file: !2, line: 268, column: 3)
!1045 = !DILocalVariable(name: "to_delete", scope: !1046, file: !2, line: 270, type: !31, align: 8)
!1046 = distinct !DILexicalBlock(scope: !1044, file: !2, line: 269, column: 3)
!1047 = !DILocation(line: 270, scope: !1046)
!1048 = !DILocation(line: 271, scope: !1046)
!1049 = !DILocation(line: 272, scope: !1046)
!1050 = !DILocation(line: 274, scope: !1037)
!1051 = !DILocation(line: 275, scope: !1037)
!1052 = !DILocation(line: 277, scope: !1023)
!1053 = distinct !DISubprogram(name: "free", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.free", scope: !2, file: !2, line: 280, type: !1024, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1054 = !DILocation(line: 281, scope: !1053)
!1055 = !DILocalVariable(name: "map", arg: 1, scope: !1053, file: !2, line: 280, type: !742)
!1056 = !DILocation(line: 280, scope: !1053)
!1057 = !DILocation(line: 282, scope: !1053)
!1058 = !DILocation(line: 283, scope: !1053)
!1059 = !DILocation(line: 284, scope: !1053)
!1060 = !DILocation(line: 285, scope: !1053)
!1061 = distinct !DISubprogram(name: "tkeys", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.tkeys", scope: !2, file: !2, line: 288, type: !1062, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!814, !742}
!1064 = !DILocation(line: 289, scope: !1061)
!1065 = !DILocalVariable(name: "self", arg: 1, scope: !1061, file: !2, line: 288, type: !742)
!1066 = !DILocation(line: 288, scope: !1061)
!1067 = !DILocation(line: 290, scope: !1061)
!1068 = distinct !DISubprogram(name: "keys", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.keys", scope: !2, file: !2, line: 293, type: !1069, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!814, !742, !16}
!1071 = !DILocation(line: 294, scope: !1068)
!1072 = !DILocalVariable(name: "self", arg: 1, scope: !1068, file: !2, line: 293, type: !742)
!1073 = !DILocation(line: 293, scope: !1068)
!1074 = !DILocalVariable(name: "allocator", arg: 2, scope: !1068, file: !2, line: 293, type: !16)
!1075 = !DILocation(line: 295, scope: !1068)
!1076 = !DILocalVariable(name: "list", scope: !1068, file: !2, line: 297, type: !814, align: 8)
!1077 = !DILocation(line: 297, scope: !1068)
!1078 = !DILocation(line: 304, scope: !1079, inlinedAt: !1080)
!1079 = distinct !DISubprogram(name: "alloc_array_try", linkageName: "alloc_array_try", scope: !770, file: !770, line: 302, scopeLine: 302, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1080 = !DILocation(line: 287, scope: !1081, inlinedAt: !1077)
!1081 = distinct !DISubprogram(name: "alloc_array", linkageName: "alloc_array", scope: !770, file: !770, line: 285, scopeLine: 285, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1082 = !DILocation(line: 80, scope: !1083, inlinedAt: !1078)
!1083 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1084 = !DILocation(line: 86, scope: !1083, inlinedAt: !1078)
!1085 = !DILocation(line: 38, scope: !1083, inlinedAt: !1078)
!1086 = !DILocation(line: 975, scope: !1087, inlinedAt: !1085)
!1087 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1088 = !DILocalVariable(name: "index", scope: !1068, file: !2, line: 298, type: !44, align: 8)
!1089 = !DILocation(line: 298, scope: !1068)
!1090 = !DILocation(line: 299, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1068, file: !2, line: 299, column: 2)
!1092 = !DILocalVariable(name: ".temp", scope: !1091, file: !2, line: 299, type: !44, align: 8)
!1093 = !DILocalVariable(name: "entry", scope: !1094, file: !2, line: 299, type: !31, align: 8)
!1094 = distinct !DILexicalBlock(scope: !1091, file: !2, line: 300, column: 2)
!1095 = !DILocation(line: 299, scope: !1094)
!1096 = !DILocation(line: 301, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1094, file: !2, line: 300, column: 2)
!1098 = !DILocation(line: 301, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1097, file: !2, line: 301, column: 3)
!1100 = !DILocation(line: 304, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1099, file: !2, line: 302, column: 3)
!1102 = !DILocation(line: 308, scope: !1101)
!1103 = !DILocation(line: 311, scope: !1068)
!1104 = distinct !DISubprogram(name: "tvalues", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.tvalues", scope: !2, file: !2, line: 335, type: !1105, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!820, !742}
!1107 = !DILocation(line: 336, scope: !1104)
!1108 = !DILocalVariable(name: "map", arg: 1, scope: !1104, file: !2, line: 335, type: !742)
!1109 = !DILocation(line: 335, scope: !1104)
!1110 = !DILocation(line: 337, scope: !1104)
!1111 = distinct !DISubprogram(name: "values", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.values", scope: !2, file: !2, line: 340, type: !1112, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!820, !742, !16}
!1114 = !DILocation(line: 341, scope: !1111)
!1115 = !DILocalVariable(name: "self", arg: 1, scope: !1111, file: !2, line: 340, type: !742)
!1116 = !DILocation(line: 340, scope: !1111)
!1117 = !DILocalVariable(name: "allocator", arg: 2, scope: !1111, file: !2, line: 340, type: !16)
!1118 = !DILocation(line: 342, scope: !1111)
!1119 = !DILocalVariable(name: "list", scope: !1111, file: !2, line: 343, type: !820, align: 8)
!1120 = !DILocation(line: 343, scope: !1111)
!1121 = !DILocation(line: 304, scope: !1122, inlinedAt: !1123)
!1122 = distinct !DISubprogram(name: "alloc_array_try", linkageName: "alloc_array_try", scope: !770, file: !770, line: 302, scopeLine: 302, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1123 = !DILocation(line: 287, scope: !1124, inlinedAt: !1120)
!1124 = distinct !DISubprogram(name: "alloc_array", linkageName: "alloc_array", scope: !770, file: !770, line: 285, scopeLine: 285, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1125 = !DILocation(line: 80, scope: !1126, inlinedAt: !1121)
!1126 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1127 = !DILocation(line: 86, scope: !1126, inlinedAt: !1121)
!1128 = !DILocation(line: 38, scope: !1126, inlinedAt: !1121)
!1129 = !DILocation(line: 975, scope: !1130, inlinedAt: !1128)
!1130 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1131 = !DILocalVariable(name: "index", scope: !1111, file: !2, line: 344, type: !44, align: 8)
!1132 = !DILocation(line: 344, scope: !1111)
!1133 = !DILocation(line: 345, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1111, file: !2, line: 345, column: 2)
!1135 = !DILocalVariable(name: ".temp", scope: !1134, file: !2, line: 345, type: !44, align: 8)
!1136 = !DILocalVariable(name: "entry", scope: !1137, file: !2, line: 345, type: !31, align: 8)
!1137 = distinct !DILexicalBlock(scope: !1134, file: !2, line: 346, column: 2)
!1138 = !DILocation(line: 345, scope: !1137)
!1139 = !DILocation(line: 347, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1137, file: !2, line: 346, column: 2)
!1141 = !DILocation(line: 347, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1140, file: !2, line: 347, column: 3)
!1143 = !DILocation(line: 349, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1142, file: !2, line: 348, column: 3)
!1145 = !DILocation(line: 350, scope: !1144)
!1146 = !DILocation(line: 353, scope: !1111)
!1147 = distinct !DISubprogram(name: "iter", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.iter", scope: !2, file: !2, line: 370, type: !1148, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!1150, !742}
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "HashMapIterator", scope: !2, file: !2, line: 530, size: 192, align: 64, elements: !1151, identifier: "std_collections_map$String$p$cforms.MenuItem$.HashMapIterator")
!1151 = !{!1152, !1153, !1154, !1155}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1150, file: !2, line: 532, baseType: !742, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "top_index", scope: !1150, file: !2, line: 533, baseType: !62, size: 32, align: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1150, file: !2, line: 534, baseType: !62, size: 32, align: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "current_entry", scope: !1150, file: !2, line: 535, baseType: !31, size: 64, align: 64, offset: 128)
!1156 = !DILocation(line: 371, scope: !1147)
!1157 = !DILocalVariable(name: "self", arg: 1, scope: !1147, file: !2, line: 370, type: !742)
!1158 = !DILocation(line: 370, scope: !1147)
!1159 = !DILocation(line: 372, scope: !1147)
!1160 = distinct !DISubprogram(name: "value_iter", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.value_iter", scope: !2, file: !2, line: 375, type: !1161, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!1163, !742}
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "HashMapValueIterator", scope: !2, file: !2, line: 538, baseType: !1150, align: 8)
!1164 = !DILocation(line: 376, scope: !1160)
!1165 = !DILocalVariable(name: "self", arg: 1, scope: !1160, file: !2, line: 375, type: !742)
!1166 = !DILocation(line: 375, scope: !1160)
!1167 = !DILocation(line: 377, scope: !1160)
!1168 = distinct !DISubprogram(name: "key_iter", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.key_iter", scope: !2, file: !2, line: 380, type: !1169, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1171, !742}
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "HashMapKeyIterator", scope: !2, file: !2, line: 539, baseType: !1150, align: 8)
!1172 = !DILocation(line: 381, scope: !1168)
!1173 = !DILocalVariable(name: "self", arg: 1, scope: !1168, file: !2, line: 380, type: !742)
!1174 = !DILocation(line: 380, scope: !1168)
!1175 = !DILocation(line: 382, scope: !1168)
!1176 = distinct !DISubprogram(name: "add_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.add_entry", scope: !2, file: !2, line: 387, type: !1177, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{null, !742, !3, !37, !48, !3}
!1179 = !DILocation(line: 388, scope: !1176)
!1180 = !DILocalVariable(name: "map", arg: 1, scope: !1176, file: !2, line: 387, type: !742)
!1181 = !DILocation(line: 387, scope: !1176)
!1182 = !DILocalVariable(name: "hash", arg: 2, scope: !1176, file: !2, line: 387, type: !3)
!1183 = !DILocalVariable(name: "key", arg: 3, scope: !1176, file: !2, line: 387, type: !36)
!1184 = !DILocalVariable(name: "value", arg: 4, scope: !1176, file: !2, line: 387, type: !47)
!1185 = !DILocalVariable(name: "bucket_index", arg: 5, scope: !1176, file: !2, line: 387, type: !3)
!1186 = !DILocation(line: 390, scope: !1176)
!1187 = !DILocalVariable(name: "entry", scope: !1176, file: !2, line: 392, type: !31, align: 8)
!1188 = !DILocation(line: 392, scope: !1176)
!1189 = !DILocalVariable(name: "val", scope: !1190, file: !2, line: 177, type: !31, align: 8)
!1190 = distinct !DISubprogram(name: "new", linkageName: "new", scope: !770, file: !770, line: 172, scopeLine: 172, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1191 = !DILocation(line: 177, scope: !1190, inlinedAt: !1188)
!1192 = !DILocation(line: 80, scope: !1193, inlinedAt: !1194)
!1193 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1194 = !DILocation(line: 75, scope: !1195, inlinedAt: !1191)
!1195 = distinct !DISubprogram(name: "malloc", linkageName: "malloc", scope: !770, file: !770, line: 73, scopeLine: 73, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1196 = !DILocation(line: 86, scope: !1193, inlinedAt: !1194)
!1197 = !DILocation(line: 38, scope: !1193, inlinedAt: !1194)
!1198 = !DILocation(line: 975, scope: !1199, inlinedAt: !1197)
!1199 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1200 = !DILocation(line: 392, scope: !1190, inlinedAt: !1188)
!1201 = !DILocation(line: 178, scope: !1190, inlinedAt: !1188)
!1202 = !DILocation(line: 179, scope: !1190, inlinedAt: !1188)
!1203 = !DILocation(line: 393, scope: !1176)
!1204 = !DILocation(line: 394, scope: !1176)
!1205 = !DILocation(line: 396, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1176, file: !2, line: 395, column: 2)
!1207 = distinct !DISubprogram(name: "resize", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.resize", scope: !2, file: !2, line: 400, type: !1208, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{null, !742, !3}
!1210 = !DILocation(line: 401, scope: !1207)
!1211 = !DILocalVariable(name: "map", arg: 1, scope: !1207, file: !2, line: 400, type: !742)
!1212 = !DILocation(line: 400, scope: !1207)
!1213 = !DILocalVariable(name: "new_capacity", arg: 2, scope: !1207, file: !2, line: 400, type: !3)
!1214 = !DILocalVariable(name: "old_table", scope: !1207, file: !2, line: 402, type: !27, align: 8)
!1215 = !DILocation(line: 402, scope: !1207)
!1216 = !DILocalVariable(name: "old_capacity", scope: !1207, file: !2, line: 403, type: !3, align: 4)
!1217 = !DILocation(line: 403, scope: !1207)
!1218 = !DILocation(line: 404, scope: !1207)
!1219 = !DILocation(line: 406, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1207, file: !2, line: 405, column: 2)
!1221 = !DILocation(line: 407, scope: !1220)
!1222 = !DILocalVariable(name: "new_table", scope: !1207, file: !2, line: 409, type: !27, align: 8)
!1223 = !DILocation(line: 409, scope: !1207)
!1224 = !DILocation(line: 270, scope: !1225, inlinedAt: !1226)
!1225 = distinct !DISubprogram(name: "new_array_try", linkageName: "new_array_try", scope: !770, file: !770, line: 268, scopeLine: 268, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1226 = !DILocation(line: 262, scope: !1227, inlinedAt: !1223)
!1227 = distinct !DISubprogram(name: "new_array", linkageName: "new_array", scope: !770, file: !770, line: 260, scopeLine: 260, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1228 = !DILocation(line: 97, scope: !1229, inlinedAt: !1224)
!1229 = distinct !DISubprogram(name: "calloc_try", linkageName: "calloc_try", scope: !770, file: !770, line: 95, scopeLine: 95, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1230 = !DILocation(line: 98, scope: !1229, inlinedAt: !1224)
!1231 = !DILocation(line: 38, scope: !1229, inlinedAt: !1224)
!1232 = !DILocation(line: 975, scope: !1233, inlinedAt: !1231)
!1233 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1234 = !DILocation(line: 410, scope: !1207)
!1235 = !DILocation(line: 411, scope: !1207)
!1236 = !DILocation(line: 412, scope: !1207)
!1237 = !DILocation(line: 413, scope: !1207)
!1238 = distinct !DISubprogram(name: "to_format", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.to_format", scope: !2, file: !2, line: 416, type: !1239, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!911, !1241, !742, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "usz*", baseType: !44, size: 64, align: 64, dwarfAddressSpace: 0)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Formatter*", baseType: !1243, size: 64, align: 64, dwarfAddressSpace: 0)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !2, file: !2, line: 63, size: 320, align: 64, elements: !1244, identifier: "std.io.Formatter")
!1244 = !{!1245, !1246, !1251}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1243, file: !2, line: 65, baseType: !19, size: 64, align: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "out_fn", scope: !1243, file: !2, line: 66, baseType: !1247, size: 64, align: 64, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputFn", scope: !2, file: !2, line: 16, baseType: !1248, align: 8)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OutputFn", baseType: !1249, size: 64, align: 64, dwarfAddressSpace: 0)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!911, !19, !19, !42}
!1251 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !2, line: 67, baseType: !1252, size: 192, align: 64, offset: 128)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "$anon", scope: !1243, file: !2, line: 67, size: 192, align: 64, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1252, file: !2, line: 69, baseType: !3, size: 32, align: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1252, file: !2, line: 70, baseType: !3, size: 32, align: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !1252, file: !2, line: 71, baseType: !3, size: 32, align: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "first_fault", scope: !1252, file: !2, line: 72, baseType: !911, size: 64, align: 64, offset: 128)
!1258 = !DILocation(line: 417, scope: !1238)
!1259 = !DILocalVariable(name: "self", arg: 1, scope: !1238, file: !2, line: 416, type: !742)
!1260 = !DILocation(line: 416, scope: !1238)
!1261 = !DILocalVariable(name: "f", arg: 2, scope: !1238, file: !2, line: 416, type: !1242)
!1262 = !DILocalVariable(name: "len", scope: !1238, file: !2, line: 418, type: !44, align: 8)
!1263 = !DILocation(line: 418, scope: !1238)
!1264 = !DILocation(line: 419, scope: !1238)
!1265 = !DILocation(line: 420, scope: !1238)
!1266 = !DILocation(line: 324, scope: !1267, inlinedAt: !1265)
!1267 = distinct !DISubprogram(name: "@each_entry", linkageName: "@each_entry", scope: !2, file: !2, line: 322, scopeLine: 322, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1268 = !DILocation(line: 325, scope: !1269, inlinedAt: !1265)
!1269 = distinct !DILexicalBlock(scope: !1267, file: !2, line: 325, column: 2)
!1270 = !DILocalVariable(name: ".temp", scope: !1269, file: !2, line: 325, type: !44, align: 8)
!1271 = !DILocalVariable(name: "entry", scope: !1272, file: !2, line: 325, type: !31, align: 8)
!1272 = distinct !DILexicalBlock(scope: !1269, file: !2, line: 326, column: 2)
!1273 = !DILocation(line: 325, scope: !1272, inlinedAt: !1265)
!1274 = !DILocation(line: 327, scope: !1275, inlinedAt: !1265)
!1275 = distinct !DILexicalBlock(scope: !1272, file: !2, line: 326, column: 2)
!1276 = !DILocation(line: 327, scope: !1277, inlinedAt: !1265)
!1277 = distinct !DILexicalBlock(scope: !1275, file: !2, line: 327, column: 3)
!1278 = !DILocalVariable(name: "entry", scope: !1238, file: !2, line: 420, type: !31, align: 8)
!1279 = !DILocation(line: 329, scope: !1280, inlinedAt: !1265)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !2, line: 329, column: 4)
!1281 = distinct !DILexicalBlock(scope: !1277, file: !2, line: 328, column: 3)
!1282 = !DILocation(line: 422, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1238, file: !2, line: 421, column: 2)
!1284 = !DILocation(line: 423, scope: !1283)
!1285 = !DILocation(line: 330, scope: !1281, inlinedAt: !1265)
!1286 = !DILocation(line: 425, scope: !1238)
!1287 = distinct !DISubprogram(name: "transfer", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.transfer", scope: !2, file: !2, line: 428, type: !1288, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{null, !742, !27}
!1290 = !DILocation(line: 429, scope: !1287)
!1291 = !DILocalVariable(name: "map", arg: 1, scope: !1287, file: !2, line: 428, type: !742)
!1292 = !DILocation(line: 428, scope: !1287)
!1293 = !DILocalVariable(name: "new_table", arg: 2, scope: !1287, file: !2, line: 428, type: !27)
!1294 = !DILocalVariable(name: "src", scope: !1287, file: !2, line: 430, type: !27, align: 8)
!1295 = !DILocation(line: 430, scope: !1287)
!1296 = !DILocalVariable(name: "new_capacity", scope: !1287, file: !2, line: 431, type: !3, align: 4)
!1297 = !DILocation(line: 431, scope: !1287)
!1298 = !DILocation(line: 432, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1287, file: !2, line: 432, column: 2)
!1300 = !DILocalVariable(name: ".temp", scope: !1299, file: !2, line: 432, type: !44, align: 8)
!1301 = !DILocalVariable(name: "j", scope: !1302, file: !2, line: 432, type: !3, align: 4)
!1302 = distinct !DILexicalBlock(scope: !1299, file: !2, line: 433, column: 2)
!1303 = !DILocation(line: 432, scope: !1302)
!1304 = !DILocalVariable(name: "e", scope: !1302, file: !2, line: 432, type: !31, align: 8)
!1305 = !DILocation(line: 434, scope: !1306)
!1306 = distinct !DILexicalBlock(scope: !1302, file: !2, line: 433, column: 2)
!1307 = !DILocation(line: 435, scope: !1306)
!1308 = !DILocation(line: 443, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1306, file: !2, line: 435, column: 3)
!1310 = !DILocalVariable(name: "next", scope: !1311, file: !2, line: 437, type: !31, align: 8)
!1311 = distinct !DILexicalBlock(scope: !1309, file: !2, line: 436, column: 3)
!1312 = !DILocation(line: 437, scope: !1311)
!1313 = !DILocalVariable(name: "i", scope: !1311, file: !2, line: 438, type: !3, align: 4)
!1314 = !DILocation(line: 438, scope: !1311)
!1315 = !DILocation(line: 589, scope: !1316, inlinedAt: !1314)
!1316 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1317 = !DILocation(line: 439, scope: !1311)
!1318 = !DILocation(line: 440, scope: !1311)
!1319 = !DILocation(line: 441, scope: !1311)
!1320 = distinct !DISubprogram(name: "put_all_for_create", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.put_all_for_create", scope: !2, file: !2, line: 447, type: !1321, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !742, !742}
!1323 = !DILocation(line: 448, scope: !1320)
!1324 = !DILocalVariable(name: "map", arg: 1, scope: !1320, file: !2, line: 447, type: !742)
!1325 = !DILocation(line: 447, scope: !1320)
!1326 = !DILocalVariable(name: "other_map", arg: 2, scope: !1320, file: !2, line: 447, type: !742)
!1327 = !DILocation(line: 449, scope: !1320)
!1328 = !DILocation(line: 450, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1320, file: !2, line: 450, column: 2)
!1330 = !DILocalVariable(name: ".temp", scope: !1329, file: !2, line: 450, type: !44, align: 8)
!1331 = !DILocalVariable(name: "e", scope: !1332, file: !2, line: 450, type: !31, align: 8)
!1332 = distinct !DILexicalBlock(scope: !1329, file: !2, line: 451, column: 2)
!1333 = !DILocation(line: 450, scope: !1332)
!1334 = !DILocation(line: 452, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1332, file: !2, line: 451, column: 2)
!1336 = !DILocation(line: 452, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !1335, file: !2, line: 452, column: 3)
!1338 = !DILocation(line: 454, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1337, file: !2, line: 453, column: 3)
!1340 = !DILocation(line: 455, scope: !1339)
!1341 = distinct !DISubprogram(name: "put_for_create", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.put_for_create", scope: !2, file: !2, line: 460, type: !1342, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !742, !37, !48}
!1344 = !DILocation(line: 461, scope: !1341)
!1345 = !DILocalVariable(name: "map", arg: 1, scope: !1341, file: !2, line: 460, type: !742)
!1346 = !DILocation(line: 460, scope: !1341)
!1347 = !DILocalVariable(name: "key", arg: 2, scope: !1341, file: !2, line: 460, type: !36)
!1348 = !DILocalVariable(name: "value", arg: 3, scope: !1341, file: !2, line: 460, type: !47)
!1349 = !DILocalVariable(name: "hash", scope: !1341, file: !2, line: 462, type: !3, align: 4)
!1350 = !DILocation(line: 462, scope: !1341)
!1351 = !DILocation(line: 568, scope: !1352, inlinedAt: !1350)
!1352 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1353 = !DILocalVariable(name: "i", scope: !1341, file: !2, line: 463, type: !3, align: 4)
!1354 = !DILocation(line: 463, scope: !1341)
!1355 = !DILocation(line: 589, scope: !1356, inlinedAt: !1354)
!1356 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1357 = !DILocalVariable(name: "e", scope: !1358, file: !2, line: 464, type: !31, align: 8)
!1358 = distinct !DILexicalBlock(scope: !1341, file: !2, line: 464, column: 2)
!1359 = !DILocation(line: 464, scope: !1358)
!1360 = !DILocation(line: 466, scope: !1361)
!1361 = distinct !DILexicalBlock(scope: !1358, file: !2, line: 465, column: 2)
!1362 = !DILocation(line: 93, scope: !1363, inlinedAt: !1360)
!1363 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1364 = !DILocation(line: 468, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1361, file: !2, line: 467, column: 3)
!1366 = !DILocation(line: 469, scope: !1365)
!1367 = !DILocation(line: 472, scope: !1341)
!1368 = distinct !DISubprogram(name: "free_internal", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.free_internal", scope: !2, file: !2, line: 475, type: !1369, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{null, !742, !19}
!1371 = !DILocation(line: 476, scope: !1368)
!1372 = !DILocalVariable(name: "map", arg: 1, scope: !1368, file: !2, line: 475, type: !742)
!1373 = !DILocation(line: 475, scope: !1368)
!1374 = !DILocalVariable(name: "ptr", arg: 2, scope: !1368, file: !2, line: 475, type: !19)
!1375 = !DILocation(line: 477, scope: !1368)
!1376 = !DILocation(line: 119, scope: !1377, inlinedAt: !1375)
!1377 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !770, file: !770, line: 117, scopeLine: 117, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1378 = !DILocation(line: 123, scope: !1377, inlinedAt: !1375)
!1379 = distinct !DISubprogram(name: "remove_entry_for_key", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.remove_entry_for_key", scope: !2, file: !2, line: 480, type: !965, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1380 = !DILocation(line: 481, scope: !1379)
!1381 = !DILocalVariable(name: "map", arg: 1, scope: !1379, file: !2, line: 480, type: !742)
!1382 = !DILocation(line: 480, scope: !1379)
!1383 = !DILocalVariable(name: "key", arg: 2, scope: !1379, file: !2, line: 480, type: !36)
!1384 = !DILocation(line: 482, scope: !1379)
!1385 = !DILocalVariable(name: "hash", scope: !1379, file: !2, line: 483, type: !3, align: 4)
!1386 = !DILocation(line: 483, scope: !1379)
!1387 = !DILocation(line: 568, scope: !1388, inlinedAt: !1386)
!1388 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1389 = !DILocalVariable(name: "i", scope: !1379, file: !2, line: 484, type: !3, align: 4)
!1390 = !DILocation(line: 484, scope: !1379)
!1391 = !DILocation(line: 589, scope: !1392, inlinedAt: !1390)
!1392 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1393 = !DILocalVariable(name: "prev", scope: !1379, file: !2, line: 485, type: !31, align: 8)
!1394 = !DILocation(line: 485, scope: !1379)
!1395 = !DILocalVariable(name: "e", scope: !1379, file: !2, line: 486, type: !31, align: 8)
!1396 = !DILocation(line: 486, scope: !1379)
!1397 = !DILocation(line: 487, scope: !1379)
!1398 = !DILocation(line: 487, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1379, file: !2, line: 487, column: 2)
!1400 = !DILocalVariable(name: "next", scope: !1401, file: !2, line: 489, type: !31, align: 8)
!1401 = distinct !DILexicalBlock(scope: !1399, file: !2, line: 488, column: 2)
!1402 = !DILocation(line: 489, scope: !1401)
!1403 = !DILocation(line: 490, scope: !1401)
!1404 = !DILocation(line: 93, scope: !1405, inlinedAt: !1403)
!1405 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1406 = !DILocation(line: 492, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1401, file: !2, line: 491, column: 3)
!1408 = !DILocation(line: 493, scope: !1407)
!1409 = !DILocation(line: 495, scope: !1410)
!1410 = distinct !DILexicalBlock(scope: !1407, file: !2, line: 494, column: 4)
!1411 = !DILocation(line: 499, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1407, file: !2, line: 498, column: 4)
!1413 = !DILocation(line: 501, scope: !1407)
!1414 = !DILocation(line: 502, scope: !1407)
!1415 = !DILocation(line: 504, scope: !1401)
!1416 = !DILocation(line: 505, scope: !1401)
!1417 = !DILocation(line: 507, scope: !1379)
!1418 = distinct !DISubprogram(name: "create_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.create_entry", scope: !2, file: !2, line: 510, type: !1419, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{null, !742, !3, !37, !48, !62}
!1421 = !DILocation(line: 511, scope: !1418)
!1422 = !DILocalVariable(name: "map", arg: 1, scope: !1418, file: !2, line: 510, type: !742)
!1423 = !DILocation(line: 510, scope: !1418)
!1424 = !DILocalVariable(name: "hash", arg: 2, scope: !1418, file: !2, line: 510, type: !3)
!1425 = !DILocalVariable(name: "key", arg: 3, scope: !1418, file: !2, line: 510, type: !36)
!1426 = !DILocalVariable(name: "value", arg: 4, scope: !1418, file: !2, line: 510, type: !47)
!1427 = !DILocalVariable(name: "bucket_index", arg: 5, scope: !1418, file: !2, line: 510, type: !62)
!1428 = !DILocalVariable(name: "e", scope: !1418, file: !2, line: 512, type: !31, align: 8)
!1429 = !DILocation(line: 512, scope: !1418)
!1430 = !DILocation(line: 514, scope: !1418)
!1431 = !DILocalVariable(name: "entry", scope: !1418, file: !2, line: 516, type: !31, align: 8)
!1432 = !DILocation(line: 516, scope: !1418)
!1433 = !DILocalVariable(name: "val", scope: !1434, file: !2, line: 177, type: !31, align: 8)
!1434 = distinct !DISubprogram(name: "new", linkageName: "new", scope: !770, file: !770, line: 172, scopeLine: 172, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1435 = !DILocation(line: 177, scope: !1434, inlinedAt: !1432)
!1436 = !DILocation(line: 80, scope: !1437, inlinedAt: !1438)
!1437 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1438 = !DILocation(line: 75, scope: !1439, inlinedAt: !1435)
!1439 = distinct !DISubprogram(name: "malloc", linkageName: "malloc", scope: !770, file: !770, line: 73, scopeLine: 73, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1440 = !DILocation(line: 86, scope: !1437, inlinedAt: !1438)
!1441 = !DILocation(line: 38, scope: !1437, inlinedAt: !1438)
!1442 = !DILocation(line: 975, scope: !1443, inlinedAt: !1441)
!1443 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1444 = !DILocation(line: 516, scope: !1434, inlinedAt: !1432)
!1445 = !DILocation(line: 178, scope: !1434, inlinedAt: !1432)
!1446 = !DILocation(line: 179, scope: !1434, inlinedAt: !1432)
!1447 = !DILocation(line: 517, scope: !1418)
!1448 = !DILocation(line: 518, scope: !1418)
!1449 = distinct !DISubprogram(name: "free_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.free_entry", scope: !2, file: !2, line: 521, type: !1450, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{null, !742, !31}
!1452 = !DILocation(line: 522, scope: !1449)
!1453 = !DILocalVariable(name: "self", arg: 1, scope: !1449, file: !2, line: 521, type: !742)
!1454 = !DILocation(line: 521, scope: !1449)
!1455 = !DILocalVariable(name: "entry", arg: 2, scope: !1449, file: !2, line: 521, type: !31)
!1456 = !DILocation(line: 524, scope: !1449)
!1457 = !DILocation(line: 119, scope: !1458, inlinedAt: !1456)
!1458 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !770, file: !770, line: 117, scopeLine: 117, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1459 = !DILocation(line: 123, scope: !1458, inlinedAt: !1456)
!1460 = !DILocation(line: 526, scope: !1449)
!1461 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.get", scope: !2, file: !2, line: 545, type: !1462, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1464, !45}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "HashMapIterator*", baseType: !1150, size: 64, align: 64, dwarfAddressSpace: 0)
!1465 = !DILocation(line: 546, scope: !1461)
!1466 = !DILocalVariable(name: "self", arg: 1, scope: !1461, file: !2, line: 545, type: !1464)
!1467 = !DILocation(line: 545, scope: !1461)
!1468 = !DILocalVariable(name: "idx", arg: 2, scope: !1461, file: !2, line: 545, type: !44)
!1469 = !DILocation(line: 543, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1461, file: !2, line: 546, column: 1)
!1471 = !DILocation(line: 547, scope: !1461)
!1472 = !DILocation(line: 549, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1461, file: !2, line: 548, column: 2)
!1474 = !DILocation(line: 550, scope: !1473)
!1475 = !DILocation(line: 551, scope: !1473)
!1476 = !DILocation(line: 553, scope: !1461)
!1477 = !DILocation(line: 553, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1461, file: !2, line: 553, column: 2)
!1479 = !DILocation(line: 555, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1478, file: !2, line: 554, column: 2)
!1481 = !DILocation(line: 557, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1480, file: !2, line: 556, column: 3)
!1483 = !DILocation(line: 558, scope: !1482)
!1484 = !DILocation(line: 559, scope: !1482)
!1485 = !DILocation(line: 561, scope: !1480)
!1486 = !DILocation(line: 562, scope: !1480)
!1487 = !DILocation(line: 564, scope: !1461)
!1488 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator.get", scope: !2, file: !2, line: 567, type: !1489, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!47, !1491, !45}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "HashMapValueIterator*", baseType: !1163, size: 64, align: 64, dwarfAddressSpace: 0)
!1492 = !DILocation(line: 568, scope: !1488)
!1493 = !DILocalVariable(name: "self", arg: 1, scope: !1488, file: !2, line: 567, type: !1491)
!1494 = !DILocation(line: 567, scope: !1488)
!1495 = !DILocalVariable(name: "idx", arg: 2, scope: !1488, file: !2, line: 567, type: !44)
!1496 = !DILocation(line: 569, scope: !1488)
!1497 = !DILocation(line: 543, scope: !1488)
!1498 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator.get", scope: !2, file: !2, line: 572, type: !1499, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!36, !1501, !45}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "HashMapKeyIterator*", baseType: !1171, size: 64, align: 64, dwarfAddressSpace: 0)
!1502 = !DILocation(line: 573, scope: !1498)
!1503 = !DILocalVariable(name: "self", arg: 1, scope: !1498, file: !2, line: 572, type: !1501)
!1504 = !DILocation(line: 572, scope: !1498)
!1505 = !DILocalVariable(name: "idx", arg: 2, scope: !1498, file: !2, line: 572, type: !44)
!1506 = !DILocation(line: 574, scope: !1498)
!1507 = !DILocation(line: 543, scope: !1498)
!1508 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMapValueIterator.len", scope: !2, file: !2, line: 577, type: !1509, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!44, !1163}
!1511 = !DILocalVariable(name: "self", arg: 1, scope: !1508, file: !2, line: 577, type: !1163)
!1512 = !DILocation(line: 577, scope: !1508)
!1513 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMapKeyIterator.len", scope: !2, file: !2, line: 578, type: !1514, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!44, !1171}
!1516 = !DILocalVariable(name: "self", arg: 1, scope: !1513, file: !2, line: 578, type: !1171)
!1517 = !DILocation(line: 578, scope: !1513)
!1518 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMapIterator.len", scope: !2, file: !2, line: 579, type: !1519, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!44, !1150}
!1521 = !DILocalVariable(name: "self", arg: 1, scope: !1518, file: !2, line: 579, type: !1150)
!1522 = !DILocation(line: 579, scope: !1518)
!1523 = distinct !DISubprogram(name: "has_value", linkageName: "std_collections_map$String$p$cforms.MenuItem$.HashMap.has_value", scope: !2, file: !2, line: 356, type: !1524, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!11, !742, !48}
!1526 = !DILocation(line: 357, scope: !1523)
!1527 = !DILocalVariable(name: "map", arg: 1, scope: !1523, file: !2, line: 356, type: !742)
!1528 = !DILocation(line: 356, scope: !1523)
!1529 = !DILocalVariable(name: "v", arg: 2, scope: !1523, file: !2, line: 356, type: !47)
!1530 = !DILocation(line: 358, scope: !1523)
!1531 = !DILocation(line: 359, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1523, file: !2, line: 359, column: 2)
!1533 = !DILocalVariable(name: ".temp", scope: !1532, file: !2, line: 359, type: !44, align: 8)
!1534 = !DILocalVariable(name: "entry", scope: !1535, file: !2, line: 359, type: !31, align: 8)
!1535 = distinct !DILexicalBlock(scope: !1532, file: !2, line: 360, column: 2)
!1536 = !DILocation(line: 359, scope: !1535)
!1537 = !DILocation(line: 361, scope: !1538)
!1538 = distinct !DILexicalBlock(scope: !1535, file: !2, line: 360, column: 2)
!1539 = !DILocation(line: 361, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1538, file: !2, line: 361, column: 3)
!1541 = !DILocation(line: 363, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1540, file: !2, line: 362, column: 3)
!1543 = !DILocation(line: 93, scope: !1544, inlinedAt: !1541)
!1544 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1545 = !DILocation(line: 364, scope: !1542)
!1546 = !DILocation(line: 367, scope: !1523)
!1547 = distinct !DISubprogram(name: "rehash", linkageName: "std_collections_map$String$p$cforms.MenuItem$.rehash", scope: !2, file: !2, line: 581, type: !1548, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!100, !3}
!1550 = !DILocalVariable(name: "hash", arg: 1, scope: !1547, file: !2, line: 581, type: !3)
!1551 = !DILocation(line: 581, scope: !1547)
!1552 = !DILocation(line: 583, scope: !1547)
!1553 = !DILocation(line: 584, scope: !1547)
!1554 = distinct !DISubprogram(name: "init", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init", scope: !704, file: !704, line: 42, type: !1555, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!1557, !1557, !16, !45, !8}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LinkedHashMap*", baseType: !705, size: 64, align: 64, dwarfAddressSpace: 0)
!1558 = !DILocation(line: 43, scope: !1554)
!1559 = !DILocalVariable(name: "self", arg: 1, scope: !1554, file: !704, line: 42, type: !1557)
!1560 = !DILocation(line: 42, scope: !1554)
!1561 = !DILocalVariable(name: "allocator", arg: 2, scope: !1554, file: !704, line: 42, type: !16)
!1562 = !DILocalVariable(name: "capacity", arg: 3, scope: !1554, file: !704, line: 42, type: !44)
!1563 = !DILocalVariable(name: "load_factor", arg: 4, scope: !1554, file: !704, line: 42, type: !8)
!1564 = !DILocation(line: 37, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1554, file: !704, line: 43, column: 1)
!1566 = !DILocation(line: 38, scope: !1565)
!1567 = !DILocation(line: 39, scope: !1565)
!1568 = !DILocation(line: 40, scope: !1565)
!1569 = !DILocalVariable(name: "y", scope: !1570, file: !704, line: 980, type: !44, align: 8)
!1570 = distinct !DISubprogram(name: "next_power_of_2", linkageName: "next_power_of_2", scope: !757, file: !757, line: 978, scopeLine: 978, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1571 = !DILocation(line: 980, scope: !1570, inlinedAt: !1572)
!1572 = !DILocation(line: 44, scope: !1554)
!1573 = !DILocation(line: 981, scope: !1570, inlinedAt: !1572)
!1574 = !DILocation(line: 981, scope: !1575, inlinedAt: !1572)
!1575 = distinct !DILexicalBlock(scope: !1570, file: !757, line: 981, column: 2)
!1576 = !DILocation(line: 982, scope: !1570, inlinedAt: !1572)
!1577 = !DILocation(line: 45, scope: !1554)
!1578 = !DILocation(line: 46, scope: !1554)
!1579 = !DILocation(line: 47, scope: !1554)
!1580 = !DILocation(line: 270, scope: !1581, inlinedAt: !1582)
!1581 = distinct !DISubprogram(name: "new_array_try", linkageName: "new_array_try", scope: !770, file: !770, line: 268, scopeLine: 268, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1582 = !DILocation(line: 262, scope: !1583, inlinedAt: !1584)
!1583 = distinct !DISubprogram(name: "new_array", linkageName: "new_array", scope: !770, file: !770, line: 260, scopeLine: 260, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1584 = !DILocation(line: 48, scope: !1554)
!1585 = !DILocation(line: 97, scope: !1586, inlinedAt: !1580)
!1586 = distinct !DISubprogram(name: "calloc_try", linkageName: "calloc_try", scope: !770, file: !770, line: 95, scopeLine: 95, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1587 = !DILocation(line: 98, scope: !1586, inlinedAt: !1580)
!1588 = !DILocation(line: 38, scope: !1586, inlinedAt: !1580)
!1589 = !DILocation(line: 975, scope: !1590, inlinedAt: !1588)
!1590 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1591 = !DILocation(line: 49, scope: !1554)
!1592 = !DILocation(line: 50, scope: !1554)
!1593 = !DILocation(line: 51, scope: !1554)
!1594 = distinct !DISubprogram(name: "tinit", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit", scope: !704, file: !704, line: 60, type: !1595, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!1557, !1557, !45, !8}
!1597 = !DILocation(line: 61, scope: !1594)
!1598 = !DILocalVariable(name: "self", arg: 1, scope: !1594, file: !704, line: 60, type: !1557)
!1599 = !DILocation(line: 60, scope: !1594)
!1600 = !DILocalVariable(name: "capacity", arg: 2, scope: !1594, file: !704, line: 60, type: !44)
!1601 = !DILocalVariable(name: "load_factor", arg: 3, scope: !1594, file: !704, line: 60, type: !8)
!1602 = !DILocation(line: 55, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1594, file: !704, line: 61, column: 1)
!1604 = !DILocation(line: 56, scope: !1603)
!1605 = !DILocation(line: 57, scope: !1603)
!1606 = !DILocation(line: 58, scope: !1603)
!1607 = !DILocation(line: 62, scope: !1594)
!1608 = !DILocation(line: 38, scope: !1594)
!1609 = !DILocation(line: 39, scope: !1594)
!1610 = distinct !DISubprogram(name: "init_from_keys_and_values", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_keys_and_values", scope: !704, file: !704, line: 104, type: !1611, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!1557, !1557, !16, !799, !804, !3, !8}
!1613 = !DILocation(line: 105, scope: !1610)
!1614 = !DILocalVariable(name: "self", arg: 1, scope: !1610, file: !704, line: 104, type: !1557)
!1615 = !DILocation(line: 104, scope: !1610)
!1616 = !DILocalVariable(name: "allocator", arg: 2, scope: !1610, file: !704, line: 104, type: !16)
!1617 = !DILocalVariable(name: "keys", arg: 3, scope: !1610, file: !704, line: 104, type: !814)
!1618 = !DILocalVariable(name: "values", arg: 4, scope: !1610, file: !704, line: 104, type: !820)
!1619 = !DILocalVariable(name: "capacity", arg: 5, scope: !1610, file: !704, line: 104, type: !3)
!1620 = !DILocalVariable(name: "load_factor", arg: 6, scope: !1610, file: !704, line: 104, type: !8)
!1621 = !DILocation(line: 98, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1610, file: !704, line: 105, column: 1)
!1623 = !DILocation(line: 99, scope: !1622)
!1624 = !DILocation(line: 100, scope: !1622)
!1625 = !DILocation(line: 101, scope: !1622)
!1626 = !DILocation(line: 102, scope: !1622)
!1627 = !DILocation(line: 106, scope: !1610)
!1628 = !DILocation(line: 107, scope: !1610)
!1629 = !DILocation(line: 38, scope: !1610)
!1630 = !DILocation(line: 39, scope: !1610)
!1631 = !DILocalVariable(name: "i", scope: !1632, file: !704, line: 108, type: !44, align: 8)
!1632 = distinct !DILexicalBlock(scope: !1610, file: !704, line: 108, column: 2)
!1633 = !DILocation(line: 108, scope: !1632)
!1634 = !DILocation(line: 110, scope: !1635)
!1635 = distinct !DILexicalBlock(scope: !1632, file: !704, line: 109, column: 2)
!1636 = !DILocation(line: 112, scope: !1610)
!1637 = distinct !DISubprogram(name: "tinit_from_keys_and_values", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit_from_keys_and_values", scope: !704, file: !704, line: 124, type: !1638, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!1557, !1557, !799, !804, !3, !8}
!1640 = !DILocation(line: 125, scope: !1637)
!1641 = !DILocalVariable(name: "self", arg: 1, scope: !1637, file: !704, line: 124, type: !1557)
!1642 = !DILocation(line: 124, scope: !1637)
!1643 = !DILocalVariable(name: "keys", arg: 2, scope: !1637, file: !704, line: 124, type: !814)
!1644 = !DILocalVariable(name: "values", arg: 3, scope: !1637, file: !704, line: 124, type: !820)
!1645 = !DILocalVariable(name: "capacity", arg: 4, scope: !1637, file: !704, line: 124, type: !3)
!1646 = !DILocalVariable(name: "load_factor", arg: 5, scope: !1637, file: !704, line: 124, type: !8)
!1647 = !DILocation(line: 118, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1637, file: !704, line: 125, column: 1)
!1649 = !DILocation(line: 119, scope: !1648)
!1650 = !DILocation(line: 120, scope: !1648)
!1651 = !DILocation(line: 121, scope: !1648)
!1652 = !DILocation(line: 122, scope: !1648)
!1653 = !DILocation(line: 126, scope: !1637)
!1654 = !DILocation(line: 98, scope: !1637)
!1655 = !DILocation(line: 100, scope: !1637)
!1656 = !DILocation(line: 101, scope: !1637)
!1657 = distinct !DISubprogram(name: "is_initialized", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_initialized", scope: !704, file: !704, line: 135, type: !1658, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!11, !1557}
!1660 = !DILocation(line: 136, scope: !1657)
!1661 = !DILocalVariable(name: "map", arg: 1, scope: !1657, file: !704, line: 135, type: !1557)
!1662 = !DILocation(line: 135, scope: !1657)
!1663 = !DILocation(line: 137, scope: !1657)
!1664 = distinct !DISubprogram(name: "init_from_map", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.init_from_map", scope: !704, file: !704, line: 145, type: !1665, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!1557, !1557, !16, !1557}
!1667 = !DILocation(line: 146, scope: !1664)
!1668 = !DILocalVariable(name: "self", arg: 1, scope: !1664, file: !704, line: 145, type: !1557)
!1669 = !DILocation(line: 145, scope: !1664)
!1670 = !DILocalVariable(name: "allocator", arg: 2, scope: !1664, file: !704, line: 145, type: !16)
!1671 = !DILocalVariable(name: "other_map", arg: 3, scope: !1664, file: !704, line: 145, type: !1557)
!1672 = !DILocation(line: 143, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1664, file: !704, line: 146, column: 1)
!1674 = !DILocation(line: 147, scope: !1664)
!1675 = !DILocation(line: 38, scope: !1664)
!1676 = !DILocation(line: 39, scope: !1664)
!1677 = !DILocation(line: 148, scope: !1664)
!1678 = !DILocation(line: 149, scope: !1664)
!1679 = distinct !DISubprogram(name: "tinit_from_map", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tinit_from_map", scope: !704, file: !704, line: 156, type: !1680, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!1557, !1557, !1557}
!1682 = !DILocation(line: 157, scope: !1679)
!1683 = !DILocalVariable(name: "map", arg: 1, scope: !1679, file: !704, line: 156, type: !1557)
!1684 = !DILocation(line: 156, scope: !1679)
!1685 = !DILocalVariable(name: "other_map", arg: 2, scope: !1679, file: !704, line: 156, type: !1557)
!1686 = !DILocation(line: 154, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1679, file: !704, line: 157, column: 1)
!1688 = !DILocation(line: 158, scope: !1679)
!1689 = !DILocation(line: 143, scope: !1679)
!1690 = distinct !DISubprogram(name: "is_empty", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.is_empty", scope: !704, file: !704, line: 161, type: !1658, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1691 = !DILocation(line: 162, scope: !1690)
!1692 = !DILocalVariable(name: "map", arg: 1, scope: !1690, file: !704, line: 161, type: !1557)
!1693 = !DILocation(line: 161, scope: !1690)
!1694 = !DILocation(line: 163, scope: !1690)
!1695 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.len", scope: !704, file: !704, line: 166, type: !1696, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!44, !1557}
!1698 = !DILocation(line: 166, scope: !1695)
!1699 = !DILocalVariable(name: "map", arg: 1, scope: !1695, file: !704, line: 166, type: !1557)
!1700 = distinct !DISubprogram(name: "get_ref", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_ref", scope: !704, file: !704, line: 168, type: !1701, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!911, !912, !1557, !37}
!1703 = !DILocation(line: 169, scope: !1700)
!1704 = !DILocalVariable(name: "map", arg: 1, scope: !1700, file: !704, line: 168, type: !1557)
!1705 = !DILocation(line: 168, scope: !1700)
!1706 = !DILocalVariable(name: "key", arg: 2, scope: !1700, file: !704, line: 168, type: !36)
!1707 = !DILocation(line: 170, scope: !1700)
!1708 = !DILocalVariable(name: "hash", scope: !1700, file: !704, line: 171, type: !3, align: 4)
!1709 = !DILocation(line: 171, scope: !1700)
!1710 = !DILocation(line: 568, scope: !1711, inlinedAt: !1709)
!1711 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1712 = !DILocalVariable(name: "e", scope: !1713, file: !704, line: 172, type: !712, align: 8)
!1713 = distinct !DILexicalBlock(scope: !1700, file: !704, line: 172, column: 2)
!1714 = !DILocation(line: 172, scope: !1713)
!1715 = !DILocation(line: 589, scope: !1716, inlinedAt: !1714)
!1716 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1717 = !DILocation(line: 174, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1713, file: !704, line: 173, column: 2)
!1719 = !DILocation(line: 93, scope: !1720, inlinedAt: !1717)
!1720 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1721 = !DILocation(line: 176, scope: !1700)
!1722 = distinct !DISubprogram(name: "get_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get_entry", scope: !704, file: !704, line: 179, type: !1723, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!911, !711, !1557, !37}
!1725 = !DILocation(line: 180, scope: !1722)
!1726 = !DILocalVariable(name: "map", arg: 1, scope: !1722, file: !704, line: 179, type: !1557)
!1727 = !DILocation(line: 179, scope: !1722)
!1728 = !DILocalVariable(name: "key", arg: 2, scope: !1722, file: !704, line: 179, type: !36)
!1729 = !DILocation(line: 181, scope: !1722)
!1730 = !DILocalVariable(name: "hash", scope: !1722, file: !704, line: 182, type: !3, align: 4)
!1731 = !DILocation(line: 182, scope: !1722)
!1732 = !DILocation(line: 568, scope: !1733, inlinedAt: !1731)
!1733 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1734 = !DILocalVariable(name: "e", scope: !1735, file: !704, line: 183, type: !712, align: 8)
!1735 = distinct !DILexicalBlock(scope: !1722, file: !704, line: 183, column: 2)
!1736 = !DILocation(line: 183, scope: !1735)
!1737 = !DILocation(line: 589, scope: !1738, inlinedAt: !1736)
!1738 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1739 = !DILocation(line: 185, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1735, file: !704, line: 184, column: 2)
!1741 = !DILocation(line: 93, scope: !1742, inlinedAt: !1739)
!1742 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1743 = !DILocation(line: 187, scope: !1722)
!1744 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.get", scope: !704, file: !704, line: 213, type: !1745, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!911, !823, !1557, !37}
!1747 = !DILocation(line: 213, scope: !1744)
!1748 = !DILocalVariable(name: "map", arg: 1, scope: !1744, file: !704, line: 213, type: !1557)
!1749 = !DILocalVariable(name: "key", arg: 2, scope: !1744, file: !704, line: 213, type: !36)
!1750 = distinct !DISubprogram(name: "has_key", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.has_key", scope: !704, file: !704, line: 215, type: !1751, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!11, !1557, !37}
!1753 = !DILocation(line: 215, scope: !1750)
!1754 = !DILocalVariable(name: "map", arg: 1, scope: !1750, file: !704, line: 215, type: !1557)
!1755 = !DILocalVariable(name: "key", arg: 2, scope: !1750, file: !704, line: 215, type: !36)
!1756 = !DILocation(line: 434, scope: !1757, inlinedAt: !1753)
!1757 = distinct !DISubprogram(name: "@ok", linkageName: "@ok", scope: !922, file: !922, line: 432, scopeLine: 432, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1758 = !DILocation(line: 435, scope: !1757, inlinedAt: !1753)
!1759 = distinct !DISubprogram(name: "set", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.set", scope: !704, file: !704, line: 217, type: !1760, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!11, !1557, !37, !48}
!1762 = !DILocation(line: 218, scope: !1759)
!1763 = !DILocalVariable(name: "map", arg: 1, scope: !1759, file: !704, line: 217, type: !1557)
!1764 = !DILocation(line: 217, scope: !1759)
!1765 = !DILocalVariable(name: "key", arg: 2, scope: !1759, file: !704, line: 217, type: !36)
!1766 = !DILocalVariable(name: "value", arg: 3, scope: !1759, file: !704, line: 217, type: !47)
!1767 = !DILocation(line: 220, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1759, file: !704, line: 220, column: 2)
!1769 = !DILocation(line: 222, scope: !1768)
!1770 = !DILocation(line: 223, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1768, file: !704, line: 223, column: 4)
!1772 = !DILocation(line: 39, scope: !1771)
!1773 = !DILocation(line: 224, scope: !1768)
!1774 = !DILocation(line: 225, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1768, file: !704, line: 225, column: 4)
!1776 = !DILocation(line: 57, scope: !1775)
!1777 = !DILocation(line: 227, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1768, file: !704, line: 227, column: 4)
!1779 = !DILocalVariable(name: "hash", scope: !1759, file: !704, line: 229, type: !3, align: 4)
!1780 = !DILocation(line: 229, scope: !1759)
!1781 = !DILocation(line: 568, scope: !1782, inlinedAt: !1780)
!1782 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1783 = !DILocalVariable(name: "index", scope: !1759, file: !704, line: 230, type: !3, align: 4)
!1784 = !DILocation(line: 230, scope: !1759)
!1785 = !DILocation(line: 589, scope: !1786, inlinedAt: !1784)
!1786 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1787 = !DILocalVariable(name: "e", scope: !1788, file: !704, line: 231, type: !712, align: 8)
!1788 = distinct !DILexicalBlock(scope: !1759, file: !704, line: 231, column: 2)
!1789 = !DILocation(line: 231, scope: !1788)
!1790 = !DILocation(line: 233, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1788, file: !704, line: 232, column: 2)
!1792 = !DILocation(line: 93, scope: !1793, inlinedAt: !1790)
!1793 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1794 = !DILocation(line: 235, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !1791, file: !704, line: 234, column: 3)
!1796 = !DILocation(line: 236, scope: !1795)
!1797 = !DILocation(line: 239, scope: !1759)
!1798 = !DILocation(line: 240, scope: !1759)
!1799 = distinct !DISubprogram(name: "remove", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.remove", scope: !704, file: !704, line: 243, type: !1800, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!911, !19, !1557, !37}
!1802 = !DILocation(line: 244, scope: !1799)
!1803 = !DILocalVariable(name: "map", arg: 1, scope: !1799, file: !704, line: 243, type: !1557)
!1804 = !DILocation(line: 243, scope: !1799)
!1805 = !DILocalVariable(name: "key", arg: 2, scope: !1799, file: !704, line: 243, type: !36)
!1806 = !DILocation(line: 245, scope: !1799)
!1807 = distinct !DISubprogram(name: "clear", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.clear", scope: !704, file: !704, line: 248, type: !1808, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{null, !1557}
!1810 = !DILocation(line: 249, scope: !1807)
!1811 = !DILocalVariable(name: "map", arg: 1, scope: !1807, file: !704, line: 248, type: !1557)
!1812 = !DILocation(line: 248, scope: !1807)
!1813 = !DILocation(line: 250, scope: !1807)
!1814 = !DILocalVariable(name: "entry", scope: !1807, file: !704, line: 252, type: !712, align: 8)
!1815 = !DILocation(line: 252, scope: !1807)
!1816 = !DILocation(line: 253, scope: !1807)
!1817 = !DILocation(line: 253, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1807, file: !704, line: 253, column: 2)
!1819 = !DILocalVariable(name: "next", scope: !1820, file: !704, line: 255, type: !712, align: 8)
!1820 = distinct !DILexicalBlock(scope: !1818, file: !704, line: 254, column: 2)
!1821 = !DILocation(line: 255, scope: !1820)
!1822 = !DILocation(line: 256, scope: !1820)
!1823 = !DILocation(line: 257, scope: !1820)
!1824 = !DILocation(line: 260, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1807, file: !704, line: 260, column: 2)
!1826 = !DILocalVariable(name: ".temp", scope: !1825, file: !704, line: 260, type: !44, align: 8)
!1827 = !DILocalVariable(name: "bucket", scope: !1828, file: !704, line: 260, type: !711, align: 8)
!1828 = distinct !DILexicalBlock(scope: !1825, file: !704, line: 261, column: 2)
!1829 = !DILocation(line: 260, scope: !1828)
!1830 = !DILocation(line: 262, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1828, file: !704, line: 261, column: 2)
!1832 = !DILocation(line: 265, scope: !1807)
!1833 = !DILocation(line: 266, scope: !1807)
!1834 = !DILocation(line: 267, scope: !1807)
!1835 = distinct !DISubprogram(name: "free", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free", scope: !704, file: !704, line: 270, type: !1808, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1836 = !DILocation(line: 271, scope: !1835)
!1837 = !DILocalVariable(name: "map", arg: 1, scope: !1835, file: !704, line: 270, type: !1557)
!1838 = !DILocation(line: 270, scope: !1835)
!1839 = !DILocation(line: 272, scope: !1835)
!1840 = !DILocation(line: 273, scope: !1835)
!1841 = !DILocation(line: 274, scope: !1835)
!1842 = !DILocation(line: 275, scope: !1835)
!1843 = distinct !DISubprogram(name: "tkeys", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tkeys", scope: !704, file: !704, line: 278, type: !1844, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!814, !1557}
!1846 = !DILocation(line: 279, scope: !1843)
!1847 = !DILocalVariable(name: "self", arg: 1, scope: !1843, file: !704, line: 278, type: !1557)
!1848 = !DILocation(line: 278, scope: !1843)
!1849 = !DILocation(line: 280, scope: !1843)
!1850 = distinct !DISubprogram(name: "keys", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.keys", scope: !704, file: !704, line: 283, type: !1851, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!814, !1557, !16}
!1853 = !DILocation(line: 284, scope: !1850)
!1854 = !DILocalVariable(name: "self", arg: 1, scope: !1850, file: !704, line: 283, type: !1557)
!1855 = !DILocation(line: 283, scope: !1850)
!1856 = !DILocalVariable(name: "allocator", arg: 2, scope: !1850, file: !704, line: 283, type: !16)
!1857 = !DILocation(line: 285, scope: !1850)
!1858 = !DILocalVariable(name: "list", scope: !1850, file: !704, line: 287, type: !814, align: 8)
!1859 = !DILocation(line: 287, scope: !1850)
!1860 = !DILocation(line: 304, scope: !1861, inlinedAt: !1862)
!1861 = distinct !DISubprogram(name: "alloc_array_try", linkageName: "alloc_array_try", scope: !770, file: !770, line: 302, scopeLine: 302, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1862 = !DILocation(line: 287, scope: !1863, inlinedAt: !1859)
!1863 = distinct !DISubprogram(name: "alloc_array", linkageName: "alloc_array", scope: !770, file: !770, line: 285, scopeLine: 285, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1864 = !DILocation(line: 80, scope: !1865, inlinedAt: !1860)
!1865 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1866 = !DILocation(line: 86, scope: !1865, inlinedAt: !1860)
!1867 = !DILocation(line: 38, scope: !1865, inlinedAt: !1860)
!1868 = !DILocation(line: 975, scope: !1869, inlinedAt: !1867)
!1869 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1870 = !DILocalVariable(name: "index", scope: !1850, file: !704, line: 288, type: !44, align: 8)
!1871 = !DILocation(line: 288, scope: !1850)
!1872 = !DILocalVariable(name: "entry", scope: !1850, file: !704, line: 290, type: !712, align: 8)
!1873 = !DILocation(line: 290, scope: !1850)
!1874 = !DILocation(line: 291, scope: !1850)
!1875 = !DILocation(line: 291, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1850, file: !704, line: 291, column: 2)
!1877 = !DILocation(line: 294, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1876, file: !704, line: 292, column: 2)
!1879 = !DILocation(line: 298, scope: !1878)
!1880 = !DILocation(line: 300, scope: !1850)
!1881 = distinct !DISubprogram(name: "tvalues", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.tvalues", scope: !704, file: !704, line: 321, type: !1882, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!820, !1557}
!1884 = !DILocation(line: 321, scope: !1881)
!1885 = !DILocalVariable(name: "map", arg: 1, scope: !1881, file: !704, line: 321, type: !1557)
!1886 = distinct !DISubprogram(name: "values", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.values", scope: !704, file: !704, line: 323, type: !1887, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!820, !1557, !16}
!1889 = !DILocation(line: 324, scope: !1886)
!1890 = !DILocalVariable(name: "self", arg: 1, scope: !1886, file: !704, line: 323, type: !1557)
!1891 = !DILocation(line: 323, scope: !1886)
!1892 = !DILocalVariable(name: "allocator", arg: 2, scope: !1886, file: !704, line: 323, type: !16)
!1893 = !DILocation(line: 325, scope: !1886)
!1894 = !DILocalVariable(name: "list", scope: !1886, file: !704, line: 326, type: !820, align: 8)
!1895 = !DILocation(line: 326, scope: !1886)
!1896 = !DILocation(line: 304, scope: !1897, inlinedAt: !1898)
!1897 = distinct !DISubprogram(name: "alloc_array_try", linkageName: "alloc_array_try", scope: !770, file: !770, line: 302, scopeLine: 302, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1898 = !DILocation(line: 287, scope: !1899, inlinedAt: !1895)
!1899 = distinct !DISubprogram(name: "alloc_array", linkageName: "alloc_array", scope: !770, file: !770, line: 285, scopeLine: 285, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1900 = !DILocation(line: 80, scope: !1901, inlinedAt: !1896)
!1901 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1902 = !DILocation(line: 86, scope: !1901, inlinedAt: !1896)
!1903 = !DILocation(line: 38, scope: !1901, inlinedAt: !1896)
!1904 = !DILocation(line: 975, scope: !1905, inlinedAt: !1903)
!1905 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!1906 = !DILocalVariable(name: "index", scope: !1886, file: !704, line: 327, type: !44, align: 8)
!1907 = !DILocation(line: 327, scope: !1886)
!1908 = !DILocalVariable(name: "entry", scope: !1886, file: !704, line: 328, type: !712, align: 8)
!1909 = !DILocation(line: 328, scope: !1886)
!1910 = !DILocation(line: 329, scope: !1886)
!1911 = !DILocation(line: 329, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1886, file: !704, line: 329, column: 2)
!1913 = !DILocation(line: 331, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1912, file: !704, line: 330, column: 2)
!1915 = !DILocation(line: 332, scope: !1914)
!1916 = !DILocation(line: 334, scope: !1886)
!1917 = distinct !DISubprogram(name: "iter", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.iter", scope: !704, file: !704, line: 350, type: !1918, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!1920, !1557}
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkedHashMapIterator", scope: !704, file: !704, line: 631, size: 192, align: 64, elements: !1921, identifier: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator")
!1921 = !{!1922, !1923, !1924}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1920, file: !704, line: 633, baseType: !1557, size: 64, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1920, file: !704, line: 634, baseType: !712, size: 64, align: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1920, file: !704, line: 635, baseType: !11, size: 8, align: 8, offset: 128)
!1925 = !DILocation(line: 350, scope: !1917)
!1926 = !DILocalVariable(name: "self", arg: 1, scope: !1917, file: !704, line: 350, type: !1557)
!1927 = distinct !DISubprogram(name: "value_iter", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.value_iter", scope: !704, file: !704, line: 352, type: !1928, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!1930, !1557}
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkedHashMapValueIterator", scope: !704, file: !704, line: 638, baseType: !1920, align: 8)
!1931 = !DILocation(line: 352, scope: !1927)
!1932 = !DILocalVariable(name: "self", arg: 1, scope: !1927, file: !704, line: 352, type: !1557)
!1933 = distinct !DISubprogram(name: "key_iter", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.key_iter", scope: !704, file: !704, line: 354, type: !1934, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!1936, !1557}
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkedHashMapKeyIterator", scope: !704, file: !704, line: 639, baseType: !1920, align: 8)
!1937 = !DILocation(line: 354, scope: !1933)
!1938 = !DILocalVariable(name: "self", arg: 1, scope: !1933, file: !704, line: 354, type: !1557)
!1939 = distinct !DISubprogram(name: "next", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.next", scope: !704, file: !704, line: 356, type: !1940, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!11, !1942}
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LinkedHashMapIterator*", baseType: !1920, size: 64, align: 64, dwarfAddressSpace: 0)
!1943 = !DILocation(line: 357, scope: !1939)
!1944 = !DILocalVariable(name: "self", arg: 1, scope: !1939, file: !704, line: 356, type: !1942)
!1945 = !DILocation(line: 356, scope: !1939)
!1946 = !DILocation(line: 358, scope: !1939)
!1947 = !DILocation(line: 363, scope: !1939)
!1948 = !DILocation(line: 365, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1939, file: !704, line: 364, column: 2)
!1950 = !DILocation(line: 360, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1939, file: !704, line: 359, column: 2)
!1952 = !DILocation(line: 361, scope: !1951)
!1953 = !DILocation(line: 367, scope: !1939)
!1954 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.get", scope: !704, file: !704, line: 370, type: !1955, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!911, !711, !1942}
!1957 = !DILocation(line: 371, scope: !1954)
!1958 = !DILocalVariable(name: "self", arg: 1, scope: !1954, file: !704, line: 370, type: !1942)
!1959 = !DILocation(line: 370, scope: !1954)
!1960 = !DILocation(line: 372, scope: !1954)
!1961 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator.get", scope: !704, file: !704, line: 375, type: !1962, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!911, !912, !1964}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LinkedHashMapValueIterator*", baseType: !1930, size: 64, align: 64, dwarfAddressSpace: 0)
!1965 = !DILocation(line: 376, scope: !1961)
!1966 = !DILocalVariable(name: "self", arg: 1, scope: !1961, file: !704, line: 375, type: !1964)
!1967 = !DILocation(line: 375, scope: !1961)
!1968 = !DILocation(line: 377, scope: !1961)
!1969 = distinct !DISubprogram(name: "get", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator.get", scope: !704, file: !704, line: 380, type: !1970, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{!911, !1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Key**", baseType: !817, size: 64, align: 64, dwarfAddressSpace: 0)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LinkedHashMapKeyIterator*", baseType: !1936, size: 64, align: 64, dwarfAddressSpace: 0)
!1974 = !DILocation(line: 381, scope: !1969)
!1975 = !DILocalVariable(name: "self", arg: 1, scope: !1969, file: !704, line: 380, type: !1973)
!1976 = !DILocation(line: 380, scope: !1969)
!1977 = !DILocation(line: 382, scope: !1969)
!1978 = distinct !DISubprogram(name: "has_next", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.has_next", scope: !704, file: !704, line: 385, type: !1940, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1979 = !DILocation(line: 386, scope: !1978)
!1980 = !DILocalVariable(name: "self", arg: 1, scope: !1978, file: !704, line: 385, type: !1942)
!1981 = !DILocation(line: 385, scope: !1978)
!1982 = !DILocation(line: 387, scope: !1978)
!1983 = !DILocation(line: 388, scope: !1978)
!1984 = distinct !DISubprogram(name: "add_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.add_entry", scope: !704, file: !704, line: 393, type: !1985, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{null, !1557, !3, !37, !48, !3}
!1987 = !DILocation(line: 394, scope: !1984)
!1988 = !DILocalVariable(name: "map", arg: 1, scope: !1984, file: !704, line: 393, type: !1557)
!1989 = !DILocation(line: 393, scope: !1984)
!1990 = !DILocalVariable(name: "hash", arg: 2, scope: !1984, file: !704, line: 393, type: !3)
!1991 = !DILocalVariable(name: "key", arg: 3, scope: !1984, file: !704, line: 393, type: !36)
!1992 = !DILocalVariable(name: "value", arg: 4, scope: !1984, file: !704, line: 393, type: !47)
!1993 = !DILocalVariable(name: "bucket_index", arg: 5, scope: !1984, file: !704, line: 393, type: !3)
!1994 = !DILocation(line: 396, scope: !1984)
!1995 = !DILocalVariable(name: "entry", scope: !1984, file: !704, line: 399, type: !712, align: 8)
!1996 = !DILocation(line: 399, scope: !1984)
!1997 = !DILocalVariable(name: "val", scope: !1998, file: !704, line: 177, type: !712, align: 8)
!1998 = distinct !DISubprogram(name: "new", linkageName: "new", scope: !770, file: !770, line: 172, scopeLine: 172, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!1999 = !DILocation(line: 177, scope: !1998, inlinedAt: !1996)
!2000 = !DILocation(line: 80, scope: !2001, inlinedAt: !2002)
!2001 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2002 = !DILocation(line: 75, scope: !2003, inlinedAt: !1999)
!2003 = distinct !DISubprogram(name: "malloc", linkageName: "malloc", scope: !770, file: !770, line: 73, scopeLine: 73, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2004 = !DILocation(line: 86, scope: !2001, inlinedAt: !2002)
!2005 = !DILocation(line: 38, scope: !2001, inlinedAt: !2002)
!2006 = !DILocation(line: 975, scope: !2007, inlinedAt: !2005)
!2007 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2008 = !DILocation(line: 400, scope: !1998, inlinedAt: !1996)
!2009 = !DILocation(line: 401, scope: !1998, inlinedAt: !1996)
!2010 = !DILocation(line: 402, scope: !1998, inlinedAt: !1996)
!2011 = !DILocation(line: 403, scope: !1998, inlinedAt: !1996)
!2012 = !DILocation(line: 404, scope: !1998, inlinedAt: !1996)
!2013 = !DILocation(line: 405, scope: !1998, inlinedAt: !1996)
!2014 = !DILocation(line: 178, scope: !1998, inlinedAt: !1996)
!2015 = !DILocation(line: 179, scope: !1998, inlinedAt: !1996)
!2016 = !DILocation(line: 409, scope: !1984)
!2017 = !DILocation(line: 412, scope: !1984)
!2018 = !DILocation(line: 414, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !1984, file: !704, line: 413, column: 2)
!2020 = !DILocation(line: 415, scope: !2019)
!2021 = !DILocation(line: 419, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !1984, file: !704, line: 418, column: 2)
!2023 = !DILocation(line: 421, scope: !1984)
!2024 = !DILocation(line: 423, scope: !1984)
!2025 = !DILocation(line: 425, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !1984, file: !704, line: 424, column: 2)
!2027 = distinct !DISubprogram(name: "resize", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.resize", scope: !704, file: !704, line: 429, type: !2028, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{null, !1557, !3}
!2030 = !DILocation(line: 430, scope: !2027)
!2031 = !DILocalVariable(name: "map", arg: 1, scope: !2027, file: !704, line: 429, type: !1557)
!2032 = !DILocation(line: 429, scope: !2027)
!2033 = !DILocalVariable(name: "new_capacity", arg: 2, scope: !2027, file: !704, line: 429, type: !3)
!2034 = !DILocalVariable(name: "old_table", scope: !2027, file: !704, line: 431, type: !708, align: 8)
!2035 = !DILocation(line: 431, scope: !2027)
!2036 = !DILocalVariable(name: "old_capacity", scope: !2027, file: !704, line: 432, type: !3, align: 4)
!2037 = !DILocation(line: 432, scope: !2027)
!2038 = !DILocation(line: 434, scope: !2027)
!2039 = !DILocation(line: 436, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2027, file: !704, line: 435, column: 2)
!2041 = !DILocation(line: 437, scope: !2040)
!2042 = !DILocalVariable(name: "new_table", scope: !2027, file: !704, line: 440, type: !708, align: 8)
!2043 = !DILocation(line: 440, scope: !2027)
!2044 = !DILocation(line: 270, scope: !2045, inlinedAt: !2046)
!2045 = distinct !DISubprogram(name: "new_array_try", linkageName: "new_array_try", scope: !770, file: !770, line: 268, scopeLine: 268, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2046 = !DILocation(line: 262, scope: !2047, inlinedAt: !2043)
!2047 = distinct !DISubprogram(name: "new_array", linkageName: "new_array", scope: !770, file: !770, line: 260, scopeLine: 260, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2048 = !DILocation(line: 97, scope: !2049, inlinedAt: !2044)
!2049 = distinct !DISubprogram(name: "calloc_try", linkageName: "calloc_try", scope: !770, file: !770, line: 95, scopeLine: 95, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2050 = !DILocation(line: 98, scope: !2049, inlinedAt: !2044)
!2051 = !DILocation(line: 38, scope: !2049, inlinedAt: !2044)
!2052 = !DILocation(line: 975, scope: !2053, inlinedAt: !2051)
!2053 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2054 = !DILocation(line: 441, scope: !2027)
!2055 = !DILocation(line: 442, scope: !2027)
!2056 = !DILocation(line: 445, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2027, file: !704, line: 445, column: 2)
!2058 = !DILocalVariable(name: ".temp", scope: !2057, file: !704, line: 445, type: !44, align: 8)
!2059 = !DILocalVariable(name: "i", scope: !2060, file: !704, line: 445, type: !3, align: 4)
!2060 = distinct !DILexicalBlock(scope: !2057, file: !704, line: 446, column: 2)
!2061 = !DILocation(line: 445, scope: !2060)
!2062 = !DILocalVariable(name: "e", scope: !2060, file: !704, line: 445, type: !712, align: 8)
!2063 = !DILocation(line: 447, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2060, file: !704, line: 446, column: 2)
!2065 = !DILocalVariable(name: "lo_head", scope: !2064, file: !704, line: 450, type: !712, align: 8)
!2066 = !DILocation(line: 450, scope: !2064)
!2067 = !DILocalVariable(name: "lo_tail", scope: !2064, file: !704, line: 451, type: !712, align: 8)
!2068 = !DILocation(line: 451, scope: !2064)
!2069 = !DILocalVariable(name: "hi_head", scope: !2064, file: !704, line: 452, type: !712, align: 8)
!2070 = !DILocation(line: 452, scope: !2064)
!2071 = !DILocalVariable(name: "hi_tail", scope: !2064, file: !704, line: 453, type: !712, align: 8)
!2072 = !DILocation(line: 453, scope: !2064)
!2073 = !DILocation(line: 455, scope: !2064)
!2074 = !DILocation(line: 485, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2064, file: !704, line: 455, column: 3)
!2076 = !DILocalVariable(name: "next", scope: !2077, file: !704, line: 457, type: !712, align: 8)
!2077 = distinct !DILexicalBlock(scope: !2075, file: !704, line: 456, column: 3)
!2078 = !DILocation(line: 457, scope: !2077)
!2079 = !DILocation(line: 458, scope: !2077)
!2080 = !DILocation(line: 460, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2077, file: !704, line: 459, column: 4)
!2082 = !DILocation(line: 462, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2081, file: !704, line: 461, column: 5)
!2084 = !DILocation(line: 466, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2081, file: !704, line: 465, column: 5)
!2086 = !DILocation(line: 468, scope: !2081)
!2087 = !DILocation(line: 472, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2077, file: !704, line: 471, column: 4)
!2089 = !DILocation(line: 474, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2088, file: !704, line: 473, column: 5)
!2091 = !DILocation(line: 478, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2088, file: !704, line: 477, column: 5)
!2093 = !DILocation(line: 480, scope: !2088)
!2094 = !DILocation(line: 482, scope: !2077)
!2095 = !DILocation(line: 483, scope: !2077)
!2096 = !DILocation(line: 487, scope: !2064)
!2097 = !DILocation(line: 489, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2064, file: !704, line: 488, column: 3)
!2099 = !DILocation(line: 490, scope: !2098)
!2100 = !DILocation(line: 492, scope: !2064)
!2101 = !DILocation(line: 494, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2064, file: !704, line: 493, column: 3)
!2103 = !DILocation(line: 495, scope: !2102)
!2104 = !DILocation(line: 499, scope: !2027)
!2105 = distinct !DISubprogram(name: "to_format", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.to_format", scope: !704, file: !704, line: 502, type: !2106, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!911, !1241, !1557, !1242}
!2108 = !DILocation(line: 503, scope: !2105)
!2109 = !DILocalVariable(name: "self", arg: 1, scope: !2105, file: !704, line: 502, type: !1557)
!2110 = !DILocation(line: 502, scope: !2105)
!2111 = !DILocalVariable(name: "f", arg: 2, scope: !2105, file: !704, line: 502, type: !1242)
!2112 = !DILocalVariable(name: "len", scope: !2105, file: !704, line: 504, type: !44, align: 8)
!2113 = !DILocation(line: 504, scope: !2105)
!2114 = !DILocation(line: 505, scope: !2105)
!2115 = !DILocation(line: 506, scope: !2105)
!2116 = !DILocalVariable(name: "entry", scope: !2117, file: !704, line: 313, type: !712, align: 8)
!2117 = distinct !DISubprogram(name: "@each_entry", linkageName: "@each_entry", scope: !704, file: !704, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2118 = !DILocation(line: 313, scope: !2117, inlinedAt: !2115)
!2119 = !DILocation(line: 314, scope: !2117, inlinedAt: !2115)
!2120 = !DILocation(line: 314, scope: !2121, inlinedAt: !2115)
!2121 = distinct !DILexicalBlock(scope: !2117, file: !704, line: 314, column: 2)
!2122 = !DILocalVariable(name: "entry", scope: !2105, file: !704, line: 506, type: !712, align: 8)
!2123 = !DILocation(line: 316, scope: !2124, inlinedAt: !2115)
!2124 = distinct !DILexicalBlock(scope: !2125, file: !704, line: 316, column: 3)
!2125 = distinct !DILexicalBlock(scope: !2121, file: !704, line: 315, column: 2)
!2126 = !DILocation(line: 508, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2105, file: !704, line: 507, column: 2)
!2128 = !DILocation(line: 509, scope: !2127)
!2129 = !DILocation(line: 317, scope: !2125, inlinedAt: !2115)
!2130 = !DILocation(line: 511, scope: !2105)
!2131 = distinct !DISubprogram(name: "transfer", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.transfer", scope: !704, file: !704, line: 514, type: !2132, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !1557, !708}
!2134 = !DILocation(line: 515, scope: !2131)
!2135 = !DILocalVariable(name: "map", arg: 1, scope: !2131, file: !704, line: 514, type: !1557)
!2136 = !DILocation(line: 514, scope: !2131)
!2137 = !DILocalVariable(name: "new_table", arg: 2, scope: !2131, file: !704, line: 514, type: !708)
!2138 = !DILocalVariable(name: "src", scope: !2131, file: !704, line: 516, type: !708, align: 8)
!2139 = !DILocation(line: 516, scope: !2131)
!2140 = !DILocalVariable(name: "new_capacity", scope: !2131, file: !704, line: 517, type: !3, align: 4)
!2141 = !DILocation(line: 517, scope: !2131)
!2142 = !DILocation(line: 518, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2131, file: !704, line: 518, column: 2)
!2144 = !DILocalVariable(name: ".temp", scope: !2143, file: !704, line: 518, type: !44, align: 8)
!2145 = !DILocalVariable(name: "j", scope: !2146, file: !704, line: 518, type: !3, align: 4)
!2146 = distinct !DILexicalBlock(scope: !2143, file: !704, line: 519, column: 2)
!2147 = !DILocation(line: 518, scope: !2146)
!2148 = !DILocalVariable(name: "e", scope: !2146, file: !704, line: 518, type: !712, align: 8)
!2149 = !DILocation(line: 520, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2146, file: !704, line: 519, column: 2)
!2151 = !DILocation(line: 521, scope: !2150)
!2152 = !DILocation(line: 529, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2150, file: !704, line: 521, column: 3)
!2154 = !DILocalVariable(name: "next", scope: !2155, file: !704, line: 523, type: !712, align: 8)
!2155 = distinct !DILexicalBlock(scope: !2153, file: !704, line: 522, column: 3)
!2156 = !DILocation(line: 523, scope: !2155)
!2157 = !DILocalVariable(name: "i", scope: !2155, file: !704, line: 524, type: !3, align: 4)
!2158 = !DILocation(line: 524, scope: !2155)
!2159 = !DILocation(line: 589, scope: !2160, inlinedAt: !2158)
!2160 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2161 = !DILocation(line: 525, scope: !2155)
!2162 = !DILocation(line: 526, scope: !2155)
!2163 = !DILocation(line: 527, scope: !2155)
!2164 = distinct !DISubprogram(name: "put_all_for_create", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.put_all_for_create", scope: !704, file: !704, line: 533, type: !2165, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{null, !1557, !1557}
!2167 = !DILocation(line: 534, scope: !2164)
!2168 = !DILocalVariable(name: "map", arg: 1, scope: !2164, file: !704, line: 533, type: !1557)
!2169 = !DILocation(line: 533, scope: !2164)
!2170 = !DILocalVariable(name: "other_map", arg: 2, scope: !2164, file: !704, line: 533, type: !1557)
!2171 = !DILocation(line: 535, scope: !2164)
!2172 = !DILocation(line: 536, scope: !2164)
!2173 = !DILocalVariable(name: "entry", scope: !2174, file: !704, line: 313, type: !712, align: 8)
!2174 = distinct !DISubprogram(name: "@each_entry", linkageName: "@each_entry", scope: !704, file: !704, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2175 = !DILocation(line: 313, scope: !2174, inlinedAt: !2176)
!2176 = !DILocation(line: 305, scope: !2177, inlinedAt: !2172)
!2177 = distinct !DISubprogram(name: "@each", linkageName: "@each", scope: !704, file: !704, line: 303, scopeLine: 303, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2178 = !DILocation(line: 314, scope: !2174, inlinedAt: !2176)
!2179 = !DILocation(line: 314, scope: !2180, inlinedAt: !2176)
!2180 = distinct !DILexicalBlock(scope: !2174, file: !704, line: 314, column: 2)
!2181 = !DILocalVariable(name: "entry", scope: !2177, file: !704, line: 305, type: !712, align: 8)
!2182 = !DILocation(line: 316, scope: !2183, inlinedAt: !2176)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !704, line: 316, column: 3)
!2184 = distinct !DILexicalBlock(scope: !2180, file: !704, line: 315, column: 2)
!2185 = !DILocalVariable(name: "key", scope: !2164, file: !704, line: 536, type: !36, align: 8)
!2186 = !DILocalVariable(name: "value", scope: !2164, file: !704, line: 536, type: !47, align: 8)
!2187 = !DILocation(line: 307, scope: !2188, inlinedAt: !2172)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !704, line: 307, column: 3)
!2189 = distinct !DILexicalBlock(scope: !2177, file: !704, line: 306, column: 2)
!2190 = !DILocation(line: 537, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2164, file: !704, line: 536, column: 42)
!2192 = !DILocation(line: 317, scope: !2184, inlinedAt: !2176)
!2193 = distinct !DISubprogram(name: "put_for_create", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.put_for_create", scope: !704, file: !704, line: 541, type: !2194, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{null, !1557, !37, !48}
!2196 = !DILocation(line: 542, scope: !2193)
!2197 = !DILocalVariable(name: "map", arg: 1, scope: !2193, file: !704, line: 541, type: !1557)
!2198 = !DILocation(line: 541, scope: !2193)
!2199 = !DILocalVariable(name: "key", arg: 2, scope: !2193, file: !704, line: 541, type: !36)
!2200 = !DILocalVariable(name: "value", arg: 3, scope: !2193, file: !704, line: 541, type: !47)
!2201 = !DILocalVariable(name: "hash", scope: !2193, file: !704, line: 543, type: !3, align: 4)
!2202 = !DILocation(line: 543, scope: !2193)
!2203 = !DILocation(line: 568, scope: !2204, inlinedAt: !2202)
!2204 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2205 = !DILocalVariable(name: "i", scope: !2193, file: !704, line: 544, type: !3, align: 4)
!2206 = !DILocation(line: 544, scope: !2193)
!2207 = !DILocation(line: 589, scope: !2208, inlinedAt: !2206)
!2208 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2209 = !DILocalVariable(name: "e", scope: !2210, file: !704, line: 545, type: !712, align: 8)
!2210 = distinct !DILexicalBlock(scope: !2193, file: !704, line: 545, column: 2)
!2211 = !DILocation(line: 545, scope: !2210)
!2212 = !DILocation(line: 547, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2210, file: !704, line: 546, column: 2)
!2214 = !DILocation(line: 93, scope: !2215, inlinedAt: !2212)
!2215 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2216 = !DILocation(line: 549, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2213, file: !704, line: 548, column: 3)
!2218 = !DILocation(line: 550, scope: !2217)
!2219 = !DILocation(line: 553, scope: !2193)
!2220 = distinct !DISubprogram(name: "free_internal", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_internal", scope: !704, file: !704, line: 556, type: !2221, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !1557, !19}
!2223 = !DILocation(line: 557, scope: !2220)
!2224 = !DILocalVariable(name: "map", arg: 1, scope: !2220, file: !704, line: 556, type: !1557)
!2225 = !DILocation(line: 556, scope: !2220)
!2226 = !DILocalVariable(name: "ptr", arg: 2, scope: !2220, file: !704, line: 556, type: !19)
!2227 = !DILocation(line: 558, scope: !2220)
!2228 = !DILocation(line: 119, scope: !2229, inlinedAt: !2227)
!2229 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !770, file: !770, line: 117, scopeLine: 117, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2230 = !DILocation(line: 123, scope: !2229, inlinedAt: !2227)
!2231 = distinct !DISubprogram(name: "remove_entry_for_key", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.remove_entry_for_key", scope: !704, file: !704, line: 561, type: !1751, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2232 = !DILocation(line: 562, scope: !2231)
!2233 = !DILocalVariable(name: "map", arg: 1, scope: !2231, file: !704, line: 561, type: !1557)
!2234 = !DILocation(line: 561, scope: !2231)
!2235 = !DILocalVariable(name: "key", arg: 2, scope: !2231, file: !704, line: 561, type: !36)
!2236 = !DILocation(line: 563, scope: !2231)
!2237 = !DILocalVariable(name: "hash", scope: !2231, file: !704, line: 565, type: !3, align: 4)
!2238 = !DILocation(line: 565, scope: !2231)
!2239 = !DILocation(line: 568, scope: !2240, inlinedAt: !2238)
!2240 = distinct !DISubprogram(name: "hash", linkageName: "hash", scope: !922, file: !922, line: 568, scopeLine: 568, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2241 = !DILocalVariable(name: "i", scope: !2231, file: !704, line: 566, type: !3, align: 4)
!2242 = !DILocation(line: 566, scope: !2231)
!2243 = !DILocation(line: 589, scope: !2244, inlinedAt: !2242)
!2244 = distinct !DISubprogram(name: "index_for", linkageName: "index_for", scope: !2, file: !2, line: 587, scopeLine: 587, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2245 = !DILocalVariable(name: "prev", scope: !2231, file: !704, line: 567, type: !712, align: 8)
!2246 = !DILocation(line: 567, scope: !2231)
!2247 = !DILocalVariable(name: "e", scope: !2231, file: !704, line: 568, type: !712, align: 8)
!2248 = !DILocation(line: 568, scope: !2231)
!2249 = !DILocation(line: 570, scope: !2231)
!2250 = !DILocation(line: 570, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2231, file: !704, line: 570, column: 2)
!2252 = !DILocation(line: 572, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2251, file: !704, line: 571, column: 2)
!2254 = !DILocation(line: 93, scope: !2255, inlinedAt: !2252)
!2255 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2256 = !DILocation(line: 574, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2253, file: !704, line: 573, column: 3)
!2258 = !DILocation(line: 576, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2257, file: !704, line: 575, column: 4)
!2260 = !DILocation(line: 580, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2257, file: !704, line: 579, column: 4)
!2262 = !DILocation(line: 583, scope: !2257)
!2263 = !DILocation(line: 585, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2257, file: !704, line: 584, column: 4)
!2265 = !DILocation(line: 589, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2257, file: !704, line: 588, column: 4)
!2267 = !DILocation(line: 592, scope: !2257)
!2268 = !DILocation(line: 594, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2257, file: !704, line: 593, column: 4)
!2270 = !DILocation(line: 598, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2257, file: !704, line: 597, column: 4)
!2272 = !DILocation(line: 601, scope: !2257)
!2273 = !DILocation(line: 602, scope: !2257)
!2274 = !DILocation(line: 603, scope: !2257)
!2275 = !DILocation(line: 605, scope: !2253)
!2276 = !DILocation(line: 606, scope: !2253)
!2277 = !DILocation(line: 608, scope: !2231)
!2278 = distinct !DISubprogram(name: "create_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.create_entry", scope: !704, file: !704, line: 611, type: !2279, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{null, !1557, !3, !37, !48, !62}
!2281 = !DILocation(line: 612, scope: !2278)
!2282 = !DILocalVariable(name: "map", arg: 1, scope: !2278, file: !704, line: 611, type: !1557)
!2283 = !DILocation(line: 611, scope: !2278)
!2284 = !DILocalVariable(name: "hash", arg: 2, scope: !2278, file: !704, line: 611, type: !3)
!2285 = !DILocalVariable(name: "key", arg: 3, scope: !2278, file: !704, line: 611, type: !36)
!2286 = !DILocalVariable(name: "value", arg: 4, scope: !2278, file: !704, line: 611, type: !47)
!2287 = !DILocalVariable(name: "bucket_index", arg: 5, scope: !2278, file: !704, line: 611, type: !62)
!2288 = !DILocalVariable(name: "e", scope: !2278, file: !704, line: 613, type: !712, align: 8)
!2289 = !DILocation(line: 613, scope: !2278)
!2290 = !DILocation(line: 615, scope: !2278)
!2291 = !DILocalVariable(name: "entry", scope: !2278, file: !704, line: 617, type: !712, align: 8)
!2292 = !DILocation(line: 617, scope: !2278)
!2293 = !DILocalVariable(name: "val", scope: !2294, file: !704, line: 177, type: !712, align: 8)
!2294 = distinct !DISubprogram(name: "new", linkageName: "new", scope: !770, file: !770, line: 172, scopeLine: 172, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2295 = !DILocation(line: 177, scope: !2294, inlinedAt: !2292)
!2296 = !DILocation(line: 80, scope: !2297, inlinedAt: !2298)
!2297 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !770, file: !770, line: 78, scopeLine: 78, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2298 = !DILocation(line: 75, scope: !2299, inlinedAt: !2295)
!2299 = distinct !DISubprogram(name: "malloc", linkageName: "malloc", scope: !770, file: !770, line: 73, scopeLine: 73, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2300 = !DILocation(line: 86, scope: !2297, inlinedAt: !2298)
!2301 = !DILocation(line: 38, scope: !2297, inlinedAt: !2298)
!2302 = !DILocation(line: 975, scope: !2303, inlinedAt: !2301)
!2303 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !757, file: !757, line: 973, scopeLine: 973, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2304 = !DILocation(line: 617, scope: !2294, inlinedAt: !2292)
!2305 = !DILocation(line: 178, scope: !2294, inlinedAt: !2292)
!2306 = !DILocation(line: 179, scope: !2294, inlinedAt: !2292)
!2307 = !DILocation(line: 618, scope: !2278)
!2308 = !DILocation(line: 619, scope: !2278)
!2309 = distinct !DISubprogram(name: "free_entry", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.free_entry", scope: !704, file: !704, line: 622, type: !2310, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{null, !1557, !712}
!2312 = !DILocation(line: 623, scope: !2309)
!2313 = !DILocalVariable(name: "self", arg: 1, scope: !2309, file: !704, line: 622, type: !1557)
!2314 = !DILocation(line: 622, scope: !2309)
!2315 = !DILocalVariable(name: "entry", arg: 2, scope: !2309, file: !704, line: 622, type: !712)
!2316 = !DILocation(line: 625, scope: !2309)
!2317 = !DILocation(line: 119, scope: !2318, inlinedAt: !2316)
!2318 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !770, file: !770, line: 117, scopeLine: 117, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2319 = !DILocation(line: 123, scope: !2318, inlinedAt: !2316)
!2320 = !DILocation(line: 627, scope: !2309)
!2321 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapValueIterator.len", scope: !704, file: !704, line: 641, type: !2322, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!44, !1930}
!2324 = !DILocalVariable(name: "self", arg: 1, scope: !2321, file: !704, line: 641, type: !1930)
!2325 = !DILocation(line: 641, scope: !2321)
!2326 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapKeyIterator.len", scope: !704, file: !704, line: 642, type: !2327, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!44, !1936}
!2329 = !DILocalVariable(name: "self", arg: 1, scope: !2326, file: !704, line: 642, type: !1936)
!2330 = !DILocation(line: 642, scope: !2326)
!2331 = distinct !DISubprogram(name: "len", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMapIterator.len", scope: !704, file: !704, line: 643, type: !2332, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!44, !1920}
!2334 = !DILocalVariable(name: "self", arg: 1, scope: !2331, file: !704, line: 643, type: !1920)
!2335 = !DILocation(line: 643, scope: !2331)
!2336 = distinct !DISubprogram(name: "has_value", linkageName: "std_collections_map$String$p$cforms.MenuItem$.LinkedHashMap.has_value", scope: !704, file: !704, line: 337, type: !2337, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !736, retainedNodes: !743)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!11, !1557, !48}
!2339 = !DILocation(line: 338, scope: !2336)
!2340 = !DILocalVariable(name: "map", arg: 1, scope: !2336, file: !704, line: 337, type: !1557)
!2341 = !DILocation(line: 337, scope: !2336)
!2342 = !DILocalVariable(name: "v", arg: 2, scope: !2336, file: !704, line: 337, type: !47)
!2343 = !DILocation(line: 339, scope: !2336)
!2344 = !DILocalVariable(name: "entry", scope: !2336, file: !704, line: 341, type: !712, align: 8)
!2345 = !DILocation(line: 341, scope: !2336)
!2346 = !DILocation(line: 342, scope: !2336)
!2347 = !DILocation(line: 342, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2336, file: !704, line: 342, column: 2)
!2349 = !DILocation(line: 344, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2348, file: !704, line: 343, column: 2)
!2351 = !DILocation(line: 93, scope: !2352, inlinedAt: !2349)
!2352 = distinct !DISubprogram(name: "equals", linkageName: "equals", scope: !932, file: !932, line: 83, scopeLine: 83, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !736)
!2353 = !DILocation(line: 345, scope: !2350)
!2354 = !DILocation(line: 347, scope: !2336)
